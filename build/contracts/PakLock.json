{
  "contractName": "PakLock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pakAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_registerFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_swapFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "source",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "ActivateToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "source",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "DeployToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "RegisterToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "source",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SwapBegin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "source",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SwapEnd",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pak",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegisterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_registerFee",
          "type": "uint256"
        }
      ],
      "name": "setRegisterFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "registerToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_source",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "activateRegistration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sourceToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "deployToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "_targetToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSwapFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_swapFee",
          "type": "uint256"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "beginSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "dangerBeginSwap",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "dangerEndSwap",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "endSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pakAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_registerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_swapFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ActivateToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"DeployToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RegisterToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SwapBegin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SwapEnd\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"activateRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"beginSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"dangerBeginSwap\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"dangerEndSwap\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sourceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"deployToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_targetToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"endSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pak\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"registerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_registerFee\",\"type\":\"uint256\"}],\"name\":\"setRegisterFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_swapFee\",\"type\":\"uint256\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PackLock is a smartcontract, where users are locking their tokens that they are swapped to another blockchain\",\"kind\":\"dev\",\"methods\":{\"activateRegistration(address,address)\":{\"details\":\"Activate registered token by passing the token address in another blockchain\"},\"getRegisterFee()\":{\"details\":\"Return amount of PAK token to use for  registration of a new bridge.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"debts\":{\"details\":\"Debts of user\"},\"locks\":{\"details\":\"Locked amount of tokens: token => user => balance;\"},\"registerFee\":{\"details\":\"the amount to use for registration\"},\"registeredTokens\":{\"details\":\"Track registered tokens\"},\"swapFee\":{\"details\":\"swapping fee\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"beginSwap(address,uint256)\":{\"notice\":\"Lock the Tokens that will be  unlocked in another blockchain  requirements: token to lock should be registered and active\"},\"bridge()\":{\"notice\":\"the address of bridge (the cosmos chain) representer. This representer ideally should act after voting process in the bridge.\"},\"dangerBeginSwap(address)\":{\"notice\":\"Forcefully initiate from player part to To cancel swapping.  Warning! Do it only if smartcontrac was hacked. TODO!\"},\"deployToken(address,uint256,string,string)\":{\"notice\":\"Deploy a new contract that is mapped  to the token in another blockchain\"},\"getSwapFee()\":{\"notice\":\" Swap User locks his token in one blockchain. Then in another blockchain he gets that amount of token. The amount that user gets in another blockchain From total locked tokens. Risks: If using a token more favorable in one of the chains, most users will transfer to that chain their tokens. Meaning It will be hard for users to transfer to other chain\"},\"lockAmount()\":{\"notice\":\"Total amount of locked tokens\"},\"pak()\":{\"notice\":\"PakBridge (PAK) token to use in fee for any transaction.\"},\"registerToken(address)\":{\"notice\":\"Register a token to be bridged\"},\"setRegisterFee(uint256)\":{\"notice\":\"update the register fee\"},\"setSwapFee(uint256)\":{\"notice\":\"update the swap fee\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/alp/smartcontracts/contracts/PakLock.sol\":\"PakLock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/alp/smartcontracts/contracts/PakLock.sol\":{\"keccak256\":\"0x4a324a59d38eea1339bd4544192c689ab869c87aed706f8181a2f94220fc66fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9653f9e63fd6c0080418f60e04fd914b1a2395c01d1e05044965d31abe1f60e8\",\"dweb:/ipfs/QmSeQthTzqZpjpTmJdxKqRnZimPJChoA5WpVoDCwSoEecs\"]},\"/home/alp/smartcontracts/contracts/PakToken.sol\":{\"keccak256\":\"0x058992f938c487f6911334469d09351cacef0a7887273bc1a795edb761c87a51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd4135f26026b09b8cce346796f7a6982dc77c12a137d6319ea1a64fb5a23315\",\"dweb:/ipfs/QmNg3w19QYENf72Wjvg4wUsmsxSnjzg12PD4RdffH4cxe9\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200450438038062004504833981810160405281019062000037919062000251565b6000620000496200021b60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600082116200012d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000124906200034d565b60405180910390fd5b6000811162000173576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016a906200032b565b60405180910390fd5b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160028190555080600581905550620001d26200021b60201b60201c565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620003f2565b600033905090565b6000815190506200023481620003be565b92915050565b6000815190506200024b81620003d8565b92915050565b6000806000606084860312156200026757600080fd5b6000620002778682870162000223565b93505060206200028a868287016200023a565b92505060406200029d868287016200023a565b9150509250925092565b6000620002b6600e836200036f565b91507f73776170207a65726f206665652e0000000000000000000000000000000000006000830152602082019050919050565b6000620002f86012836200036f565b91507f7265676973746572207a65726f206665652e00000000000000000000000000006000830152602082019050919050565b600060208201905081810360008301526200034681620002a7565b9050919050565b600060208201905081810360008301526200036881620002e9565b9050919050565b600082825260208201905092915050565b60006200038d8262000394565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620003c98162000380565b8114620003d557600080fd5b50565b620003e381620003b4565b8114620003ef57600080fd5b50565b61410280620004026000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806392be2ab8116100a2578063d8df5dc111610071578063d8df5dc11461026a578063e2eb79e714610288578063e78cea92146102a4578063f262522f146102c2578063f2fde38b146102de5761010b565b806392be2ab8146101f657806395e17d9f14610212578063b45ea4201461022e578063d4cadf681461024c5761010b565b806334e19907116100de57806334e19907146101965780633d57eeb2146101b2578063715018a6146101ce5780638da5cb5b146101d85761010b565b806308b99e2b1461011057806309824a80146101405780632332e8b21461015c57806332a58e7914610178575b600080fd5b61012a60048036038101906101259190611e4a565b6102fa565b604051610137919061237a565b60405180910390f35b61015a60048036038101906101559190611d5a565b6106e3565b005b61017660048036038101906101719190611dbf565b6109d6565b005b610180610dc2565b60405161018d91906125f9565b60405180910390f35b6101b060048036038101906101ab9190611f0e565b610dcc565b005b6101cc60048036038101906101c79190611d5a565b610eb0565b005b6101d6610f4a565b005b6101e0611084565b6040516101ed919061237a565b60405180910390f35b610210600480360381019061020b9190611f0e565b6110ad565b005b61022c60048036038101906102279190611e0e565b611191565b005b61023661181f565b60405161024391906123f5565b60405180910390f35b610254611845565b60405161026191906125f9565b60405180910390f35b61027261184f565b60405161027f91906125f9565b60405180910390f35b6102a2600480360381019061029d9190611d83565b611855565b005b6102ac611a46565b6040516102b9919061237a565b60405180910390f35b6102dc60048036038101906102d79190611d5a565b611a6c565b005b6102f860048036038101906102f39190611d5a565b611afe565b005b6000610304611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a90612519565b60405180910390fd5b6000604051806020016103a590611caf565b6020820181038252601f19601f820116604052509050600088886040516020016103d092919061234e565b604051602081830303815290604052805190602001209050808251602084016000f59250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90612459565b60405180910390fd5b60405180604001604052808a73ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055509050508273ffffffffffffffffffffffffffffffffffffffff1663b119490e888888888d6040518663ffffffff1660e01b815260040161059b959493929190612410565b600060405180830381600087803b1580156105b557600080fd5b505af11580156105c9573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fe8bdd9fce77119cdf785a57476e6573d6dfd1cdab032f1d7a5a2d29144cace768a8a8a8a8a604051610632959493929190612614565b60405180910390a38273ffffffffffffffffffffffffffffffffffffffff167ff7fe8023cb2e36bde1d59a88ac5763a8c11be6d25e6819f71bb7e23e5bf0dc1660405160405180910390a28873ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fdd563a35d235972942faef8318faefeef1a900e39f7f17823513249b3f9926d460405160405180910390a350509695505050505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160000160149054906101000a900460ff1615151461077e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610775906125b9565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016107dd929190612395565b60206040518083038186803b1580156107f557600080fd5b505afa158015610809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082d9190611f37565b9050600254811015610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b906124b9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002546040518463ffffffff1660e01b81526004016108f7939291906123be565b602060405180830381600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109499190611ee5565b5060008260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff167ff7fe8023cb2e36bde1d59a88ac5763a8c11be6d25e6819f71bb7e23e5bf0dc1660405160405180910390a2505050565b6109de611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6490612519565b60405180910390fd5b600854811115610ab2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa990612579565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16610b41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3890612499565b60405180910390fd5b60008290508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3086856040518463ffffffff1660e01b8152600401610b83939291906123be565b602060405180830381600087803b158015610b9d57600080fd5b505af1158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd59190611ee5565b5081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5e919061266e565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f9fb7393f373aeee7b64cf3a312cff74e8f808410bdf377f4f196829e0bc0ae5185604051610db491906125f9565b60405180910390a450505050565b6000600254905090565b610dd4611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5a90612519565b60405180910390fd5b60008111610ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9d90612539565b60405180910390fd5b8060058190555050565b610eb8611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3e90612519565b60405180910390fd5b50565b610f52611ca7565b73ffffffffffffffffffffffffffffffffffffffff16610f70611084565b73ffffffffffffffffffffffffffffffffffffffff1614610fc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbd90612559565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110b5611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113b90612519565b60405180910390fd5b60008111611187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117e90612539565b60405180910390fd5b8060028190555050565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16611220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121790612599565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161127f929190612395565b60206040518083038186803b15801561129757600080fd5b505afa1580156112ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cf9190611f37565b9050600554811015611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130d906125d9565b60405180910390fd5b6000839050828173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611355919061237a565b60206040518083038186803b15801561136d57600080fd5b505afa158015611381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a59190611f37565b10156113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd906124d9565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611423929190612395565b60206040518083038186803b15801561143b57600080fd5b505afa15801561144f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114739190611f37565b9050838110156114b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114af906124f9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005546040518463ffffffff1660e01b815260040161153b939291906123be565b602060405180830381600087803b15801561155557600080fd5b505af1158015611569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158d9190611ee5565b508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016115cb939291906123be565b602060405180830381600087803b1580156115e557600080fd5b505af11580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d9190611ee5565b5083600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a6919061266e565b600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600854611734919061266e565b600881905550600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1edfb050dfa21d8e216d56d17c5addb1d9a230100359dcd4172527d7c8a5c2a48760405161181091906125f9565b60405180910390a45050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600554905090565b60085481565b61185d611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e390612519565b60405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160000160149054906101000a900460ff16151514611987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197e906125b9565b60405180910390fd5b60018160000160146101000a81548160ff021916908315150217905550818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fdd563a35d235972942faef8318faefeef1a900e39f7f17823513249b3f9926d460405160405180910390a3505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16611afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af290612499565b60405180910390fd5b50565b611b06611ca7565b73ffffffffffffffffffffffffffffffffffffffff16611b24611084565b73ffffffffffffffffffffffffffffffffffffffff1614611b7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7190612559565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be190612479565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6118cd8061280083390190565b600081359050611ccb816127ba565b92915050565b600081519050611ce0816127d1565b92915050565b60008083601f840112611cf857600080fd5b8235905067ffffffffffffffff811115611d1157600080fd5b602083019150836001820283011115611d2957600080fd5b9250929050565b600081359050611d3f816127e8565b92915050565b600081519050611d54816127e8565b92915050565b600060208284031215611d6c57600080fd5b6000611d7a84828501611cbc565b91505092915050565b60008060408385031215611d9657600080fd5b6000611da485828601611cbc565b9250506020611db585828601611cbc565b9150509250929050565b600080600060608486031215611dd457600080fd5b6000611de286828701611cbc565b9350506020611df386828701611cbc565b9250506040611e0486828701611d30565b9150509250925092565b60008060408385031215611e2157600080fd5b6000611e2f85828601611cbc565b9250506020611e4085828601611d30565b9150509250929050565b60008060008060008060808789031215611e6357600080fd5b6000611e7189828a01611cbc565b9650506020611e8289828a01611d30565b955050604087013567ffffffffffffffff811115611e9f57600080fd5b611eab89828a01611ce6565b9450945050606087013567ffffffffffffffff811115611eca57600080fd5b611ed689828a01611ce6565b92509250509295509295509295565b600060208284031215611ef757600080fd5b6000611f0584828501611cd1565b91505092915050565b600060208284031215611f2057600080fd5b6000611f2e84828501611d30565b91505092915050565b600060208284031215611f4957600080fd5b6000611f5784828501611d45565b91505092915050565b611f69816126c4565b82525050565b611f80611f7b826126c4565b61273f565b82525050565b611f8f8161270c565b82525050565b6000611fa1838561265d565b9350611fae838584612730565b611fb78361279c565b840190509392505050565b6000611fcf60108361265d565b91507f616c7265616479206465706c6f796564000000000000000000000000000000006000830152602082019050919050565b600061200f60268361265d565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612075600a8361265d565b91507f6e6f7420616374697665000000000000000000000000000000000000000000006000830152602082019050919050565b60006120b5600c8361265d565b91507f6e6f20616c6c6f77616e636500000000000000000000000000000000000000006000830152602082019050919050565b60006120f560128361265d565b91507f6e6f7420656e6f7567682062616c616e636500000000000000000000000000006000830152602082019050919050565b600061213560118361265d565b91507f6e6f206c6f636b20616c6c6f77616e63650000000000000000000000000000006000830152602082019050919050565b6000612175600b8361265d565b91507f6f6e6c79206272696467650000000000000000000000000000000000000000006000830152602082019050919050565b60006121b560118361265d565b91507f7a65726f207265676973746572206665650000000000000000000000000000006000830152602082019050919050565b60006121f560208361265d565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061223560118361265d565b91507f4e6f7420656e6f75676820746f6b656e2e0000000000000000000000000000006000830152602082019050919050565b600061227560188361265d565b91507f746f6b656e206e6f7420726567697374657265642079657400000000000000006000830152602082019050919050565b60006122b560118361265d565b91507f616c7265616479206163746976617465640000000000000000000000000000006000830152602082019050919050565b60006122f560118361265d565b91507f6e6f207377617020616c6c6f77616e63650000000000000000000000000000006000830152602082019050919050565b61233181612702565b82525050565b61234861234382612702565b612763565b82525050565b600061235a8285611f6f565b60148201915061236a8284612337565b6020820191508190509392505050565b600060208201905061238f6000830184611f60565b92915050565b60006040820190506123aa6000830185611f60565b6123b76020830184611f60565b9392505050565b60006060820190506123d36000830186611f60565b6123e06020830185611f60565b6123ed6040830184612328565b949350505050565b600060208201905061240a6000830184611f86565b92915050565b6000606082019050818103600083015261242b818789611f95565b90508181036020830152612440818587611f95565b905061244f6040830184612328565b9695505050505050565b6000602082019050818103600083015261247281611fc2565b9050919050565b6000602082019050818103600083015261249281612002565b9050919050565b600060208201905081810360008301526124b281612068565b9050919050565b600060208201905081810360008301526124d2816120a8565b9050919050565b600060208201905081810360008301526124f2816120e8565b9050919050565b6000602082019050818103600083015261251281612128565b9050919050565b6000602082019050818103600083015261253281612168565b9050919050565b60006020820190508181036000830152612552816121a8565b9050919050565b60006020820190508181036000830152612572816121e8565b9050919050565b6000602082019050818103600083015261259281612228565b9050919050565b600060208201905081810360008301526125b281612268565b9050919050565b600060208201905081810360008301526125d2816122a8565b9050919050565b600060208201905081810360008301526125f2816122e8565b9050919050565b600060208201905061260e6000830184612328565b92915050565b60006060820190506126296000830188612328565b818103602083015261263c818688611f95565b90508181036040830152612651818486611f95565b90509695505050505050565b600082825260208201905092915050565b600061267982612702565b915061268483612702565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126b9576126b861276d565b5b828201905092915050565b60006126cf826126e2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006127178261271e565b9050919050565b6000612729826126e2565b9050919050565b82818337600083830152505050565b600061274a82612751565b9050919050565b600061275c826127ad565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b6127c3816126c4565b81146127ce57600080fd5b50565b6127da816126d6565b81146127e557600080fd5b50565b6127f181612702565b81146127fc57600080fd5b5056fe60806040526000600560006101000a81548160ff02191690831515021790555034801561002b57600080fd5b506118928061003b6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063b119490e14610251578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190611448565b60405180910390f35b6100f160048036038101906100ec9190610fc2565b61032f565b6040516100fe919061142d565b60405180910390f35b61010f61034d565b60405161011c919061158a565b60405180910390f35b61013f600480360381019061013a9190610f73565b610357565b60405161014c919061142d565b60405180910390f35b61015d610458565b60405161016a91906115a5565b60405180910390f35b61018d60048036038101906101889190610fc2565b610461565b60405161019a919061142d565b60405180910390f35b6101bd60048036038101906101b89190610f0e565b61050d565b6040516101ca919061158a565b60405180910390f35b6101db610555565b6040516101e89190611448565b60405180910390f35b61020b60048036038101906102069190610fc2565b6105e7565b604051610218919061142d565b60405180910390f35b61023b60048036038101906102369190610fc2565b6106db565b604051610248919061142d565b60405180910390f35b61026b60048036038101906102669190610ffe565b6106f9565b005b61028760048036038101906102829190610f37565b6107a7565b604051610294919061158a565b60405180910390f35b6060600380546102ac9061175e565b80601f01602080910402602001604051908101604052809291908181526020018280546102d89061175e565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061034361033c61082e565b8484610836565b6001905092915050565b6000600254905090565b6000610364848484610a01565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103af61082e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561042f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610426906114ca565b60405180910390fd5b61044c8561043b61082e565b85846104479190611693565b610836565b60019150509392505050565b60006012905090565b600061050361046e61082e565b84846001600061047c61082e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104fe919061163d565b610836565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105649061175e565b80601f01602080910402602001604051908101604052809291908181526020018280546105909061175e565b80156105dd5780601f106105b2576101008083540402835291602001916105dd565b820191906000526020600020905b8154815290600101906020018083116105c057829003601f168201915b5050505050905090565b600080600160006105f661082e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa9061154a565b60405180910390fd5b6106d06106be61082e565b8585846106cb9190611693565b610836565b600191505092915050565b60006106ef6106e861082e565b8484610a01565b6001905092915050565b60001515600560009054906101000a900460ff1615151461074f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107469061152a565b60405180910390fd5b8260039080519060200190610765929190610dd9565b50816004908051906020019061077c929190610dd9565b506107873382610c80565b6001600560006101000a81548160ff021916908315150217905550505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d9061150a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090d9061148a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109f4919061158a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a68906114ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ae1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad89061146a565b60405180910390fd5b610aec838383610dd4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b69906114aa565b60405180910390fd5b8181610b7e9190611693565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c0e919061163d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c72919061158a565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce79061156a565b60405180910390fd5b610cfc60008383610dd4565b8060026000828254610d0e919061163d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d63919061163d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dc8919061158a565b60405180910390a35050565b505050565b828054610de59061175e565b90600052602060002090601f016020900481019282610e075760008555610e4e565b82601f10610e2057805160ff1916838001178555610e4e565b82800160010185558215610e4e579182015b82811115610e4d578251825591602001919060010190610e32565b5b509050610e5b9190610e5f565b5090565b5b80821115610e78576000816000905550600101610e60565b5090565b6000610e8f610e8a846115f1565b6115c0565b905082815260208101848484011115610ea757600080fd5b610eb284828561171c565b509392505050565b600081359050610ec98161182e565b92915050565b600082601f830112610ee057600080fd5b8135610ef0848260208601610e7c565b91505092915050565b600081359050610f0881611845565b92915050565b600060208284031215610f2057600080fd5b6000610f2e84828501610eba565b91505092915050565b60008060408385031215610f4a57600080fd5b6000610f5885828601610eba565b9250506020610f6985828601610eba565b9150509250929050565b600080600060608486031215610f8857600080fd5b6000610f9686828701610eba565b9350506020610fa786828701610eba565b9250506040610fb886828701610ef9565b9150509250925092565b60008060408385031215610fd557600080fd5b6000610fe385828601610eba565b9250506020610ff485828601610ef9565b9150509250929050565b60008060006060848603121561101357600080fd5b600084013567ffffffffffffffff81111561102d57600080fd5b61103986828701610ecf565b935050602084013567ffffffffffffffff81111561105657600080fd5b61106286828701610ecf565b925050604061107386828701610ef9565b9150509250925092565b611086816116d9565b82525050565b600061109782611621565b6110a1818561162c565b93506110b181856020860161172b565b6110ba8161181d565b840191505092915050565b60006110d260238361162c565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061113860228361162c565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061119e60268361162c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061120460288361162c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061126a60258361162c565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112d060248361162c565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611336600b8361162c565b91507f616c7265616479207365740000000000000000000000000000000000000000006000830152602082019050919050565b600061137660258361162c565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006113dc601f8361162c565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b61141881611705565b82525050565b6114278161170f565b82525050565b6000602082019050611442600083018461107d565b92915050565b60006020820190508181036000830152611462818461108c565b905092915050565b60006020820190508181036000830152611483816110c5565b9050919050565b600060208201905081810360008301526114a38161112b565b9050919050565b600060208201905081810360008301526114c381611191565b9050919050565b600060208201905081810360008301526114e3816111f7565b9050919050565b600060208201905081810360008301526115038161125d565b9050919050565b60006020820190508181036000830152611523816112c3565b9050919050565b6000602082019050818103600083015261154381611329565b9050919050565b6000602082019050818103600083015261156381611369565b9050919050565b60006020820190508181036000830152611583816113cf565b9050919050565b600060208201905061159f600083018461140f565b92915050565b60006020820190506115ba600083018461141e565b92915050565b6000604051905081810181811067ffffffffffffffff821117156115e7576115e66117ee565b5b8060405250919050565b600067ffffffffffffffff82111561160c5761160b6117ee565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061164882611705565b915061165383611705565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561168857611687611790565b5b828201905092915050565b600061169e82611705565b91506116a983611705565b9250828210156116bc576116bb611790565b5b828203905092915050565b60006116d2826116e5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561174957808201518184015260208101905061172e565b83811115611758576000848401525b50505050565b6000600282049050600182168061177657607f821691505b6020821081141561178a576117896117bf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611837816116c7565b811461184257600080fd5b50565b61184e81611705565b811461185957600080fd5b5056fea2646970667358221220945fb38515c058388dda7ea7f64fc9ccaa9d5911505173c273be8b272a81132c64736f6c63430008000033a264697066735822122094272bef21669f653dc17d3fbb2705911965823b930990b561fb6adf5047500564736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806392be2ab8116100a2578063d8df5dc111610071578063d8df5dc11461026a578063e2eb79e714610288578063e78cea92146102a4578063f262522f146102c2578063f2fde38b146102de5761010b565b806392be2ab8146101f657806395e17d9f14610212578063b45ea4201461022e578063d4cadf681461024c5761010b565b806334e19907116100de57806334e19907146101965780633d57eeb2146101b2578063715018a6146101ce5780638da5cb5b146101d85761010b565b806308b99e2b1461011057806309824a80146101405780632332e8b21461015c57806332a58e7914610178575b600080fd5b61012a60048036038101906101259190611e4a565b6102fa565b604051610137919061237a565b60405180910390f35b61015a60048036038101906101559190611d5a565b6106e3565b005b61017660048036038101906101719190611dbf565b6109d6565b005b610180610dc2565b60405161018d91906125f9565b60405180910390f35b6101b060048036038101906101ab9190611f0e565b610dcc565b005b6101cc60048036038101906101c79190611d5a565b610eb0565b005b6101d6610f4a565b005b6101e0611084565b6040516101ed919061237a565b60405180910390f35b610210600480360381019061020b9190611f0e565b6110ad565b005b61022c60048036038101906102279190611e0e565b611191565b005b61023661181f565b60405161024391906123f5565b60405180910390f35b610254611845565b60405161026191906125f9565b60405180910390f35b61027261184f565b60405161027f91906125f9565b60405180910390f35b6102a2600480360381019061029d9190611d83565b611855565b005b6102ac611a46565b6040516102b9919061237a565b60405180910390f35b6102dc60048036038101906102d79190611d5a565b611a6c565b005b6102f860048036038101906102f39190611d5a565b611afe565b005b6000610304611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a90612519565b60405180910390fd5b6000604051806020016103a590611caf565b6020820181038252601f19601f820116604052509050600088886040516020016103d092919061234e565b604051602081830303815290604052805190602001209050808251602084016000f59250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90612459565b60405180910390fd5b60405180604001604052808a73ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055509050508273ffffffffffffffffffffffffffffffffffffffff1663b119490e888888888d6040518663ffffffff1660e01b815260040161059b959493929190612410565b600060405180830381600087803b1580156105b557600080fd5b505af11580156105c9573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fe8bdd9fce77119cdf785a57476e6573d6dfd1cdab032f1d7a5a2d29144cace768a8a8a8a8a604051610632959493929190612614565b60405180910390a38273ffffffffffffffffffffffffffffffffffffffff167ff7fe8023cb2e36bde1d59a88ac5763a8c11be6d25e6819f71bb7e23e5bf0dc1660405160405180910390a28873ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fdd563a35d235972942faef8318faefeef1a900e39f7f17823513249b3f9926d460405160405180910390a350509695505050505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160000160149054906101000a900460ff1615151461077e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610775906125b9565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016107dd929190612395565b60206040518083038186803b1580156107f557600080fd5b505afa158015610809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082d9190611f37565b9050600254811015610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b906124b9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002546040518463ffffffff1660e01b81526004016108f7939291906123be565b602060405180830381600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109499190611ee5565b5060008260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff167ff7fe8023cb2e36bde1d59a88ac5763a8c11be6d25e6819f71bb7e23e5bf0dc1660405160405180910390a2505050565b6109de611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6490612519565b60405180910390fd5b600854811115610ab2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa990612579565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16610b41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3890612499565b60405180910390fd5b60008290508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3086856040518463ffffffff1660e01b8152600401610b83939291906123be565b602060405180830381600087803b158015610b9d57600080fd5b505af1158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd59190611ee5565b5081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c5e919061266e565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f9fb7393f373aeee7b64cf3a312cff74e8f808410bdf377f4f196829e0bc0ae5185604051610db491906125f9565b60405180910390a450505050565b6000600254905090565b610dd4611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5a90612519565b60405180910390fd5b60008111610ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9d90612539565b60405180910390fd5b8060058190555050565b610eb8611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3e90612519565b60405180910390fd5b50565b610f52611ca7565b73ffffffffffffffffffffffffffffffffffffffff16610f70611084565b73ffffffffffffffffffffffffffffffffffffffff1614610fc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbd90612559565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110b5611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113b90612519565b60405180910390fd5b60008111611187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117e90612539565b60405180910390fd5b8060028190555050565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16611220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121790612599565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161127f929190612395565b60206040518083038186803b15801561129757600080fd5b505afa1580156112ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cf9190611f37565b9050600554811015611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130d906125d9565b60405180910390fd5b6000839050828173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401611355919061237a565b60206040518083038186803b15801561136d57600080fd5b505afa158015611381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a59190611f37565b10156113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd906124d9565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611423929190612395565b60206040518083038186803b15801561143b57600080fd5b505afa15801561144f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114739190611f37565b9050838110156114b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114af906124f9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005546040518463ffffffff1660e01b815260040161153b939291906123be565b602060405180830381600087803b15801561155557600080fd5b505af1158015611569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158d9190611ee5565b508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016115cb939291906123be565b602060405180830381600087803b1580156115e557600080fd5b505af11580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d9190611ee5565b5083600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a6919061266e565b600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600854611734919061266e565b600881905550600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1edfb050dfa21d8e216d56d17c5addb1d9a230100359dcd4172527d7c8a5c2a48760405161181091906125f9565b60405180910390a45050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600554905090565b60085481565b61185d611ca7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e390612519565b60405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160000160149054906101000a900460ff16151514611987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197e906125b9565b60405180910390fd5b60018160000160146101000a81548160ff021916908315150217905550818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fdd563a35d235972942faef8318faefeef1a900e39f7f17823513249b3f9926d460405160405180910390a3505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16611afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af290612499565b60405180910390fd5b50565b611b06611ca7565b73ffffffffffffffffffffffffffffffffffffffff16611b24611084565b73ffffffffffffffffffffffffffffffffffffffff1614611b7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7190612559565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be190612479565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6118cd8061280083390190565b600081359050611ccb816127ba565b92915050565b600081519050611ce0816127d1565b92915050565b60008083601f840112611cf857600080fd5b8235905067ffffffffffffffff811115611d1157600080fd5b602083019150836001820283011115611d2957600080fd5b9250929050565b600081359050611d3f816127e8565b92915050565b600081519050611d54816127e8565b92915050565b600060208284031215611d6c57600080fd5b6000611d7a84828501611cbc565b91505092915050565b60008060408385031215611d9657600080fd5b6000611da485828601611cbc565b9250506020611db585828601611cbc565b9150509250929050565b600080600060608486031215611dd457600080fd5b6000611de286828701611cbc565b9350506020611df386828701611cbc565b9250506040611e0486828701611d30565b9150509250925092565b60008060408385031215611e2157600080fd5b6000611e2f85828601611cbc565b9250506020611e4085828601611d30565b9150509250929050565b60008060008060008060808789031215611e6357600080fd5b6000611e7189828a01611cbc565b9650506020611e8289828a01611d30565b955050604087013567ffffffffffffffff811115611e9f57600080fd5b611eab89828a01611ce6565b9450945050606087013567ffffffffffffffff811115611eca57600080fd5b611ed689828a01611ce6565b92509250509295509295509295565b600060208284031215611ef757600080fd5b6000611f0584828501611cd1565b91505092915050565b600060208284031215611f2057600080fd5b6000611f2e84828501611d30565b91505092915050565b600060208284031215611f4957600080fd5b6000611f5784828501611d45565b91505092915050565b611f69816126c4565b82525050565b611f80611f7b826126c4565b61273f565b82525050565b611f8f8161270c565b82525050565b6000611fa1838561265d565b9350611fae838584612730565b611fb78361279c565b840190509392505050565b6000611fcf60108361265d565b91507f616c7265616479206465706c6f796564000000000000000000000000000000006000830152602082019050919050565b600061200f60268361265d565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612075600a8361265d565b91507f6e6f7420616374697665000000000000000000000000000000000000000000006000830152602082019050919050565b60006120b5600c8361265d565b91507f6e6f20616c6c6f77616e636500000000000000000000000000000000000000006000830152602082019050919050565b60006120f560128361265d565b91507f6e6f7420656e6f7567682062616c616e636500000000000000000000000000006000830152602082019050919050565b600061213560118361265d565b91507f6e6f206c6f636b20616c6c6f77616e63650000000000000000000000000000006000830152602082019050919050565b6000612175600b8361265d565b91507f6f6e6c79206272696467650000000000000000000000000000000000000000006000830152602082019050919050565b60006121b560118361265d565b91507f7a65726f207265676973746572206665650000000000000000000000000000006000830152602082019050919050565b60006121f560208361265d565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061223560118361265d565b91507f4e6f7420656e6f75676820746f6b656e2e0000000000000000000000000000006000830152602082019050919050565b600061227560188361265d565b91507f746f6b656e206e6f7420726567697374657265642079657400000000000000006000830152602082019050919050565b60006122b560118361265d565b91507f616c7265616479206163746976617465640000000000000000000000000000006000830152602082019050919050565b60006122f560118361265d565b91507f6e6f207377617020616c6c6f77616e63650000000000000000000000000000006000830152602082019050919050565b61233181612702565b82525050565b61234861234382612702565b612763565b82525050565b600061235a8285611f6f565b60148201915061236a8284612337565b6020820191508190509392505050565b600060208201905061238f6000830184611f60565b92915050565b60006040820190506123aa6000830185611f60565b6123b76020830184611f60565b9392505050565b60006060820190506123d36000830186611f60565b6123e06020830185611f60565b6123ed6040830184612328565b949350505050565b600060208201905061240a6000830184611f86565b92915050565b6000606082019050818103600083015261242b818789611f95565b90508181036020830152612440818587611f95565b905061244f6040830184612328565b9695505050505050565b6000602082019050818103600083015261247281611fc2565b9050919050565b6000602082019050818103600083015261249281612002565b9050919050565b600060208201905081810360008301526124b281612068565b9050919050565b600060208201905081810360008301526124d2816120a8565b9050919050565b600060208201905081810360008301526124f2816120e8565b9050919050565b6000602082019050818103600083015261251281612128565b9050919050565b6000602082019050818103600083015261253281612168565b9050919050565b60006020820190508181036000830152612552816121a8565b9050919050565b60006020820190508181036000830152612572816121e8565b9050919050565b6000602082019050818103600083015261259281612228565b9050919050565b600060208201905081810360008301526125b281612268565b9050919050565b600060208201905081810360008301526125d2816122a8565b9050919050565b600060208201905081810360008301526125f2816122e8565b9050919050565b600060208201905061260e6000830184612328565b92915050565b60006060820190506126296000830188612328565b818103602083015261263c818688611f95565b90508181036040830152612651818486611f95565b90509695505050505050565b600082825260208201905092915050565b600061267982612702565b915061268483612702565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126b9576126b861276d565b5b828201905092915050565b60006126cf826126e2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006127178261271e565b9050919050565b6000612729826126e2565b9050919050565b82818337600083830152505050565b600061274a82612751565b9050919050565b600061275c826127ad565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b6127c3816126c4565b81146127ce57600080fd5b50565b6127da816126d6565b81146127e557600080fd5b50565b6127f181612702565b81146127fc57600080fd5b5056fe60806040526000600560006101000a81548160ff02191690831515021790555034801561002b57600080fd5b506118928061003b6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063b119490e14610251578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190611448565b60405180910390f35b6100f160048036038101906100ec9190610fc2565b61032f565b6040516100fe919061142d565b60405180910390f35b61010f61034d565b60405161011c919061158a565b60405180910390f35b61013f600480360381019061013a9190610f73565b610357565b60405161014c919061142d565b60405180910390f35b61015d610458565b60405161016a91906115a5565b60405180910390f35b61018d60048036038101906101889190610fc2565b610461565b60405161019a919061142d565b60405180910390f35b6101bd60048036038101906101b89190610f0e565b61050d565b6040516101ca919061158a565b60405180910390f35b6101db610555565b6040516101e89190611448565b60405180910390f35b61020b60048036038101906102069190610fc2565b6105e7565b604051610218919061142d565b60405180910390f35b61023b60048036038101906102369190610fc2565b6106db565b604051610248919061142d565b60405180910390f35b61026b60048036038101906102669190610ffe565b6106f9565b005b61028760048036038101906102829190610f37565b6107a7565b604051610294919061158a565b60405180910390f35b6060600380546102ac9061175e565b80601f01602080910402602001604051908101604052809291908181526020018280546102d89061175e565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061034361033c61082e565b8484610836565b6001905092915050565b6000600254905090565b6000610364848484610a01565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103af61082e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561042f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610426906114ca565b60405180910390fd5b61044c8561043b61082e565b85846104479190611693565b610836565b60019150509392505050565b60006012905090565b600061050361046e61082e565b84846001600061047c61082e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104fe919061163d565b610836565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105649061175e565b80601f01602080910402602001604051908101604052809291908181526020018280546105909061175e565b80156105dd5780601f106105b2576101008083540402835291602001916105dd565b820191906000526020600020905b8154815290600101906020018083116105c057829003601f168201915b5050505050905090565b600080600160006105f661082e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa9061154a565b60405180910390fd5b6106d06106be61082e565b8585846106cb9190611693565b610836565b600191505092915050565b60006106ef6106e861082e565b8484610a01565b6001905092915050565b60001515600560009054906101000a900460ff1615151461074f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107469061152a565b60405180910390fd5b8260039080519060200190610765929190610dd9565b50816004908051906020019061077c929190610dd9565b506107873382610c80565b6001600560006101000a81548160ff021916908315150217905550505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d9061150a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090d9061148a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109f4919061158a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a68906114ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ae1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad89061146a565b60405180910390fd5b610aec838383610dd4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b69906114aa565b60405180910390fd5b8181610b7e9190611693565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c0e919061163d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c72919061158a565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce79061156a565b60405180910390fd5b610cfc60008383610dd4565b8060026000828254610d0e919061163d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d63919061163d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dc8919061158a565b60405180910390a35050565b505050565b828054610de59061175e565b90600052602060002090601f016020900481019282610e075760008555610e4e565b82601f10610e2057805160ff1916838001178555610e4e565b82800160010185558215610e4e579182015b82811115610e4d578251825591602001919060010190610e32565b5b509050610e5b9190610e5f565b5090565b5b80821115610e78576000816000905550600101610e60565b5090565b6000610e8f610e8a846115f1565b6115c0565b905082815260208101848484011115610ea757600080fd5b610eb284828561171c565b509392505050565b600081359050610ec98161182e565b92915050565b600082601f830112610ee057600080fd5b8135610ef0848260208601610e7c565b91505092915050565b600081359050610f0881611845565b92915050565b600060208284031215610f2057600080fd5b6000610f2e84828501610eba565b91505092915050565b60008060408385031215610f4a57600080fd5b6000610f5885828601610eba565b9250506020610f6985828601610eba565b9150509250929050565b600080600060608486031215610f8857600080fd5b6000610f9686828701610eba565b9350506020610fa786828701610eba565b9250506040610fb886828701610ef9565b9150509250925092565b60008060408385031215610fd557600080fd5b6000610fe385828601610eba565b9250506020610ff485828601610ef9565b9150509250929050565b60008060006060848603121561101357600080fd5b600084013567ffffffffffffffff81111561102d57600080fd5b61103986828701610ecf565b935050602084013567ffffffffffffffff81111561105657600080fd5b61106286828701610ecf565b925050604061107386828701610ef9565b9150509250925092565b611086816116d9565b82525050565b600061109782611621565b6110a1818561162c565b93506110b181856020860161172b565b6110ba8161181d565b840191505092915050565b60006110d260238361162c565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061113860228361162c565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061119e60268361162c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061120460288361162c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061126a60258361162c565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112d060248361162c565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611336600b8361162c565b91507f616c7265616479207365740000000000000000000000000000000000000000006000830152602082019050919050565b600061137660258361162c565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006113dc601f8361162c565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b61141881611705565b82525050565b6114278161170f565b82525050565b6000602082019050611442600083018461107d565b92915050565b60006020820190508181036000830152611462818461108c565b905092915050565b60006020820190508181036000830152611483816110c5565b9050919050565b600060208201905081810360008301526114a38161112b565b9050919050565b600060208201905081810360008301526114c381611191565b9050919050565b600060208201905081810360008301526114e3816111f7565b9050919050565b600060208201905081810360008301526115038161125d565b9050919050565b60006020820190508181036000830152611523816112c3565b9050919050565b6000602082019050818103600083015261154381611329565b9050919050565b6000602082019050818103600083015261156381611369565b9050919050565b60006020820190508181036000830152611583816113cf565b9050919050565b600060208201905061159f600083018461140f565b92915050565b60006020820190506115ba600083018461141e565b92915050565b6000604051905081810181811067ffffffffffffffff821117156115e7576115e66117ee565b5b8060405250919050565b600067ffffffffffffffff82111561160c5761160b6117ee565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061164882611705565b915061165383611705565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561168857611687611790565b5b828201905092915050565b600061169e82611705565b91506116a983611705565b9250828210156116bc576116bb611790565b5b828203905092915050565b60006116d2826116e5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561174957808201518184015260208101905061172e565b83811115611758576000848401525b50505050565b6000600282049050600182168061177657607f821691505b6020821081141561178a576117896117bf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611837816116c7565b811461184257600080fd5b50565b61184e81611705565b811461185957600080fd5b5056fea2646970667358221220945fb38515c058388dda7ea7f64fc9ccaa9d5911505173c273be8b272a81132c64736f6c63430008000033a264697066735822122094272bef21669f653dc17d3fbb2705911965823b930990b561fb6adf5047500564736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3142:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:8",
                "type": ""
              }
            ],
            "src": "7:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "219:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "229:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "229:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "287:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "260:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "197:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "205:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "213:5:8",
                "type": ""
              }
            ],
            "src": "156:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "416:485:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "462:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "471:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "474:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "464:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "464:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "464:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "437:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "446:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "433:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "433:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "458:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "429:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "429:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "426:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "488:128:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "503:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "507:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "532:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "578:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "589:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "574:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "574:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "598:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "542:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "542:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "532:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "626:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "641:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "655:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "645:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "671:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "717:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "728:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "713:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "713:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "737:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "681:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "681:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "671:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "765:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "780:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "794:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "784:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "810:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "856:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "867:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "852:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "852:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "876:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "820:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "820:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "810:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "370:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "381:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "393:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "401:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "409:6:8",
                "type": ""
              }
            ],
            "src": "305:596:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1053:166:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1063:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1129:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1134:2:8",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1070:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1070:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1063:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1158:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1163:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1154:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1154:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1167:16:8",
                        "type": "",
                        "value": "swap zero fee."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1147:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1147:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1147:37:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1194:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1205:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1201:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1194:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_75c37e5778533d0f429ce02c084d900b04819611e478f95306969b970d47ada5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1041:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1049:3:8",
                "type": ""
              }
            ],
            "src": "907:312:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1371:170:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1381:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1447:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1452:2:8",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1388:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1388:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1381:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1476:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1481:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1472:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1472:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1485:20:8",
                        "type": "",
                        "value": "register zero fee."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1465:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1465:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1465:41:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1516:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1527:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1532:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1523:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1523:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1516:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c7e738d7676be13b34372b145e2bd88d92bfcf1affdad2127074c0f0fbc18b49_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1359:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1367:3:8",
                "type": ""
              }
            ],
            "src": "1225:316:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1718:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1728:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1740:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1751:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1736:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1736:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1728:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1775:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1786:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1771:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1771:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1794:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1800:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1790:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1790:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1764:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1764:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1764:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1820:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1954:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_75c37e5778533d0f429ce02c084d900b04819611e478f95306969b970d47ada5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1828:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1828:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1820:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_75c37e5778533d0f429ce02c084d900b04819611e478f95306969b970d47ada5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1698:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1713:4:8",
                "type": ""
              }
            ],
            "src": "1547:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2143:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2153:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2165:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2176:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2161:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2161:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2153:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2200:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2211:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2196:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2196:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2219:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2225:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2215:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2215:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2189:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2189:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2189:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2245:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2379:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c7e738d7676be13b34372b145e2bd88d92bfcf1affdad2127074c0f0fbc18b49_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2253:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2253:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2245:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c7e738d7676be13b34372b145e2bd88d92bfcf1affdad2127074c0f0fbc18b49__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2123:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2138:4:8",
                "type": ""
              }
            ],
            "src": "1972:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2493:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2510:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2515:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2503:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2503:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2503:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2531:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2550:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2555:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2546:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2531:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2465:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2470:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2481:11:8",
                "type": ""
              }
            ],
            "src": "2397:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2617:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2627:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2656:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2638:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2638:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2627:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2599:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2609:7:8",
                "type": ""
              }
            ],
            "src": "2572:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2719:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2729:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2744:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2751:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2740:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2729:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2701:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2711:7:8",
                "type": ""
              }
            ],
            "src": "2674:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2851:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2861:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2872:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2861:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2833:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2843:7:8",
                "type": ""
              }
            ],
            "src": "2806:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2932:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2989:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2998:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3001:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2991:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2991:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2991:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2955:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2980:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2962:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2962:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2952:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2952:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2945:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2945:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2942:2:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2925:5:8",
                "type": ""
              }
            ],
            "src": "2889:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3060:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3117:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3126:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3129:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3119:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3119:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3119:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3083:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3108:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3090:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3090:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3080:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3080:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3073:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3073:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3070:2:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3053:5:8",
                "type": ""
              }
            ],
            "src": "3017:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_75c37e5778533d0f429ce02c084d900b04819611e478f95306969b970d47ada5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n\n        mstore(add(pos, 0), \"swap zero fee.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c7e738d7676be13b34372b145e2bd88d92bfcf1affdad2127074c0f0fbc18b49_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"register zero fee.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_75c37e5778533d0f429ce02c084d900b04819611e478f95306969b970d47ada5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75c37e5778533d0f429ce02c084d900b04819611e478f95306969b970d47ada5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c7e738d7676be13b34372b145e2bd88d92bfcf1affdad2127074c0f0fbc18b49__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c7e738d7676be13b34372b145e2bd88d92bfcf1affdad2127074c0f0fbc18b49_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:20915:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:8",
                "type": ""
              }
            ],
            "src": "7:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:8"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:8",
                "type": ""
              }
            ],
            "src": "152:137:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "384:277:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "433:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "442:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "445:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "435:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "435:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "435:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "412:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "420:4:8",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "408:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "408:17:8"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "427:3:8"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "404:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "404:27:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "397:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:35:8"
                  },
                  "nodeType": "YulIf",
                  "src": "394:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "458:30:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "481:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "468:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "468:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "458:6:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "531:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "540:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "543:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "533:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "533:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "533:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "503:6:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:18:8",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "500:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:30:8"
                  },
                  "nodeType": "YulIf",
                  "src": "497:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "556:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "572:6:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "580:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "568:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:17:8"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "556:8:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "639:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "648:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "651:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "641:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "641:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "641:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "604:8:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "618:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "626:4:8",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "614:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "614:17:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "600:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "600:32:8"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "634:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "597:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:41:8"
                  },
                  "nodeType": "YulIf",
                  "src": "594:2:8"
                }
              ]
            },
            "name": "abi_decode_t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "351:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "359:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "367:8:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "377:6:8",
                "type": ""
              }
            ],
            "src": "309:352:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "719:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "729:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "751:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "738:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "738:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "729:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "794:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "767:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "767:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "697:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "705:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "713:5:8",
                "type": ""
              }
            ],
            "src": "667:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "875:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "885:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "900:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "894:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "885:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "943:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "916:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "916:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "916:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "853:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "861:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "869:5:8",
                "type": ""
              }
            ],
            "src": "812:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1027:196:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1073:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1082:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1085:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1075:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1075:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1075:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1048:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1057:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1044:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1044:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1069:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1040:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1040:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1037:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1099:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1114:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1128:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1118:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1143:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1178:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1189:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1174:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1174:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1198:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1153:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1153:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1143:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "997:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1008:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1020:6:8",
                "type": ""
              }
            ],
            "src": "961:262:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1312:324:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1358:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1367:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1370:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1360:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1360:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1360:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1333:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1342:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1329:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1329:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1354:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1325:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1325:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1322:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1384:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1399:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1413:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1403:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1428:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1463:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1474:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1459:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1459:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1483:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1438:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1438:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1428:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1511:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1526:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1540:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1530:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1556:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1591:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1602:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1587:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1587:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1611:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1566:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1566:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1556:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1274:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1285:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1297:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1305:6:8",
                "type": ""
              }
            ],
            "src": "1229:407:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1742:452:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1788:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1797:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1800:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1790:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1790:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1790:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1763:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1772:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1759:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1784:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1755:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1755:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1752:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1814:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1829:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1843:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1833:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1858:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1893:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1904:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1889:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1889:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1913:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1868:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1858:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1941:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1956:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1970:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1960:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1986:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2021:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2032:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2017:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2017:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2041:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1996:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1996:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1986:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2069:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2084:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2098:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2088:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2114:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2149:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2160:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2145:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2145:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2169:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2124:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2124:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2114:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1696:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1707:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1719:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1727:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1735:6:8",
                "type": ""
              }
            ],
            "src": "1642:552:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2283:324:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2329:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2338:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2341:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2331:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2331:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2331:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2304:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2313:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2300:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2300:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2325:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2296:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2296:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2293:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2355:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2370:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2384:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2374:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2399:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2434:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2445:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2430:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2430:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2454:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2409:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2409:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2399:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2482:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2497:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2511:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2501:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2527:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2562:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2573:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2558:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2558:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2582:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2537:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2537:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2527:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2245:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2256:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2268:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2276:6:8",
                "type": ""
              }
            ],
            "src": "2200:407:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2770:807:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2817:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2826:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2829:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2819:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2819:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2819:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2791:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2800:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2787:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2787:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2812:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2783:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2783:33:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2780:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2843:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2858:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2872:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2862:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2887:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2922:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2933:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2918:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2918:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2942:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2897:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2897:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2887:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2970:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2985:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2999:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2989:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3015:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3050:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3061:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3046:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3046:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3070:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3025:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3025:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3015:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3098:231:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3113:46:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3144:9:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3155:2:8",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3140:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3140:18:8"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3127:12:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3127:32:8"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3117:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3206:16:8",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3215:1:8",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3218:1:8",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3208:6:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3208:12:8"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3208:12:8"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3178:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3186:18:8",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3175:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3175:30:8"
                      },
                      "nodeType": "YulIf",
                      "src": "3172:2:8"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3236:83:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3291:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3302:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3287:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3287:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3311:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3254:32:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3254:65:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3236:6:8"
                        },
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3244:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3339:231:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3354:46:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3385:9:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3396:2:8",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3381:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3381:18:8"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3368:12:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3368:32:8"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3358:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3447:16:8",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3456:1:8",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3459:1:8",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3449:6:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3449:12:8"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3449:12:8"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3419:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3427:18:8",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3416:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3416:30:8"
                      },
                      "nodeType": "YulIf",
                      "src": "3413:2:8"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3477:83:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3532:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3543:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3528:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3528:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3552:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3495:32:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3495:65:8"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3477:6:8"
                        },
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "3485:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_string_calldata_ptrt_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2700:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2711:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2723:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2731:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2739:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2747:6:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2755:6:8",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2763:6:8",
                "type": ""
              }
            ],
            "src": "2613:964:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3657:204:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3703:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3712:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3715:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3705:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3705:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3705:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3678:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3687:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3674:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3674:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3699:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3670:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3670:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3667:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3729:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3744:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3758:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3748:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3773:71:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3816:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3827:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3812:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3812:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3836:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3783:28:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3783:61:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3773:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3627:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3638:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3650:6:8",
                "type": ""
              }
            ],
            "src": "3583:278:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3933:196:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3979:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3988:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3991:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3981:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3981:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3981:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3954:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3963:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3950:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3950:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3975:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3946:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3946:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3943:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4005:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4020:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4034:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4024:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4049:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4084:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4095:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4080:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4080:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4104:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4059:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4059:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4049:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3903:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3914:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3926:6:8",
                "type": ""
              }
            ],
            "src": "3867:262:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4212:207:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4258:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4267:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4270:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4260:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4260:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4260:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4233:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4242:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4229:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4229:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4254:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4225:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4225:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "4222:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4284:128:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4299:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4313:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4303:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4328:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4374:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4385:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4370:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4370:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4394:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4338:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4338:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4328:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4182:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4193:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4205:6:8",
                "type": ""
              }
            ],
            "src": "4135:284:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4490:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4507:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4530:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4512:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4512:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4500:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4500:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4478:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4485:3:8",
                "type": ""
              }
            ],
            "src": "4425:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4632:74:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4649:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4692:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4674:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4674:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4654:19:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4654:45:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4642:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4642:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4642:58:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4620:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4627:3:8",
                "type": ""
              }
            ],
            "src": "4549:157:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4792:81:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4809:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4860:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$1312_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4814:45:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4814:52:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4802:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4802:65:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4802:65:8"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$1312_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4780:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4787:3:8",
                "type": ""
              }
            ],
            "src": "4712:161:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5005:202:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5015:78:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5081:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5086:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5022:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5022:71:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5015:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "5127:5:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5134:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5139:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5103:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5103:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5103:43:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5155:46:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5166:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5193:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5171:21:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5171:29:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5162:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5162:39:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5155:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "4978:5:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4985:6:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4993:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5001:3:8",
                "type": ""
              }
            ],
            "src": "4903:304:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5359:168:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5369:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5435:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5440:2:8",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5376:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5376:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5369:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5464:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5469:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5460:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5460:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5473:18:8",
                        "type": "",
                        "value": "already deployed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5453:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5453:39:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5453:39:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5502:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5513:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5518:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5509:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5509:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5502:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_058dc7fda144838ad249ee582a37501a4a14eb0759e7ef734c29bcc66587de41_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5347:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5355:3:8",
                "type": ""
              }
            ],
            "src": "5213:314:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5679:224:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5689:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5755:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5760:2:8",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5696:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5696:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5689:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5784:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5789:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5780:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5780:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5793:34:8",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5773:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5773:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5773:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5849:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5854:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5845:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5845:12:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5859:8:8",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5838:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5838:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5838:30:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5878:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5889:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5894:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5885:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5885:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5878:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5667:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5675:3:8",
                "type": ""
              }
            ],
            "src": "5533:370:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6055:162:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6065:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6131:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6136:2:8",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6072:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6072:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6065:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6160:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6165:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6156:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6156:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6169:12:8",
                        "type": "",
                        "value": "not active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6149:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6149:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6149:33:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6192:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6203:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6208:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6199:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6199:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6192:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6043:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6051:3:8",
                "type": ""
              }
            ],
            "src": "5909:308:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6369:164:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6379:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6445:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6450:2:8",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6386:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6386:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6379:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6474:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6479:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6470:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6470:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6483:14:8",
                        "type": "",
                        "value": "no allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6463:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6463:35:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6463:35:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6508:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6519:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6524:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6515:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6515:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6508:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6357:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6365:3:8",
                "type": ""
              }
            ],
            "src": "6223:310:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6685:170:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6695:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6761:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6766:2:8",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6702:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6702:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6695:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6790:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6795:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6786:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6786:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6799:20:8",
                        "type": "",
                        "value": "not enough balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6779:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6779:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6779:41:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6830:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6841:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6846:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6837:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6837:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6830:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6673:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6681:3:8",
                "type": ""
              }
            ],
            "src": "6539:316:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7007:169:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7017:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7083:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7088:2:8",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7024:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7024:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7017:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7112:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7117:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7108:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7108:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7121:19:8",
                        "type": "",
                        "value": "no lock allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7101:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7101:40:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7101:40:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7151:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7162:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7167:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7158:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7158:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7151:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_72daef8bfb2fda79cf45f117092d47ebeea7f9889e6c0e4d46efce0f89de65f1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6995:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7003:3:8",
                "type": ""
              }
            ],
            "src": "6861:315:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7328:163:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7338:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7404:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7409:2:8",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7345:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7345:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7338:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7433:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7438:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7429:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7429:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7442:13:8",
                        "type": "",
                        "value": "only bridge"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7422:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7422:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7422:34:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7466:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7477:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7482:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7473:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7473:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7466:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7316:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7324:3:8",
                "type": ""
              }
            ],
            "src": "7182:309:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7643:169:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7653:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7719:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7724:2:8",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7660:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7660:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7653:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7748:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7753:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7744:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7744:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7757:19:8",
                        "type": "",
                        "value": "zero register fee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7737:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7737:40:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7737:40:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7787:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7798:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7803:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7794:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7794:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7787:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7631:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7639:3:8",
                "type": ""
              }
            ],
            "src": "7497:315:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7964:184:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7974:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8040:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8045:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7981:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7981:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7974:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8069:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8074:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8065:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8065:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8078:34:8",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8058:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8058:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8058:55:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8123:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8134:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8139:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8130:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8130:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8123:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7952:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7960:3:8",
                "type": ""
              }
            ],
            "src": "7818:330:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8300:169:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8310:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8376:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8381:2:8",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8317:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8317:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8310:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8405:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8410:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8401:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8401:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8414:19:8",
                        "type": "",
                        "value": "Not enough token."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8394:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8394:40:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8394:40:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8444:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8455:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8460:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8451:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8451:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8444:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_bbfd0b00878eb5275bb81d664c66c59f86b8b1ee9527cfdec4595a49017c3667_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8288:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8296:3:8",
                "type": ""
              }
            ],
            "src": "8154:315:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8621:176:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8631:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8697:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8702:2:8",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8638:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8638:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8631:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8726:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8731:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8722:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8722:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8735:26:8",
                        "type": "",
                        "value": "token not registered yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8715:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8715:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8715:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8772:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8783:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8788:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8779:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8779:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8772:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e87e8ddef9b567a973cecd40be59ab55dba991317b28dbcdd461b54c1dafaf94_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8609:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8617:3:8",
                "type": ""
              }
            ],
            "src": "8475:322:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8949:169:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8959:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9025:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9030:2:8",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8966:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8966:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8959:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9054:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9059:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9050:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9050:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9063:19:8",
                        "type": "",
                        "value": "already activated"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9043:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9043:40:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9043:40:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9093:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9104:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9109:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9100:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9100:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9093:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8937:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8945:3:8",
                "type": ""
              }
            ],
            "src": "8803:315:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9270:169:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9280:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9346:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9351:2:8",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9287:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9287:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9280:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9375:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9380:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9371:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9371:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9384:19:8",
                        "type": "",
                        "value": "no swap allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9364:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9364:40:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9364:40:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9414:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9425:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9430:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9421:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9421:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9414:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_eeb3fb5a6261bb4eabbae10e6d7bc830fc1406585352f7291b699619bdc3382e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9258:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9266:3:8",
                "type": ""
              }
            ],
            "src": "9124:315:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9510:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9527:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9550:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9532:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9532:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9520:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9520:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9520:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9498:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9505:3:8",
                "type": ""
              }
            ],
            "src": "9445:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9652:74:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9669:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9712:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "9694:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9694:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9674:19:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9674:45:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9662:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9662:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9662:58:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9640:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9647:3:8",
                "type": ""
              }
            ],
            "src": "9569:157:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9876:253:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9949:6:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9958:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9887:61:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9887:75:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9887:75:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9971:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9982:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9987:2:8",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9978:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9978:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9971:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10062:6:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10071:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10000:61:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10000:75:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10000:75:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10084:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10095:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10100:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10091:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10091:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10084:3:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10113:10:8",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "10120:3:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10113:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9847:3:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9853:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9861:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9872:3:8",
                "type": ""
              }
            ],
            "src": "9732:397:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10233:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10243:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10255:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10266:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10251:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10251:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10243:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10323:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10336:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10347:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10332:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10332:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10279:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10279:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10279:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10205:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10217:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10228:4:8",
                "type": ""
              }
            ],
            "src": "10135:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10489:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10499:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10511:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10522:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10507:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10507:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10499:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10579:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10592:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10603:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10588:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10588:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10535:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10535:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10535:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10660:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10673:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10684:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10669:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10669:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10616:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10616:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10616:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10453:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10465:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10473:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10484:4:8",
                "type": ""
              }
            ],
            "src": "10363:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10855:288:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10865:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10877:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10888:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10873:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10873:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10865:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10945:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10958:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10969:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10954:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10954:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10901:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10901:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10901:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11026:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11039:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11050:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11035:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11035:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10982:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10982:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10982:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11108:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11121:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11132:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11117:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11117:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11064:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11064:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11064:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10811:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10823:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10831:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10839:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10850:4:8",
                "type": ""
              }
            ],
            "src": "10701:442:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11262:139:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11272:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11284:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11295:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11280:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11280:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11272:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11367:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11380:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11391:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11376:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11376:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1312_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11308:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11308:86:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11308:86:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1312__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11234:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11246:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11257:4:8",
                "type": ""
              }
            ],
            "src": "11149:252:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11621:450:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11631:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11643:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11654:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11639:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11639:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11631:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11678:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11689:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11674:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11674:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11697:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11703:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11693:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11693:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11667:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11667:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11667:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11723:96:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11797:6:8"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11805:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11814:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11731:65:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11731:88:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11723:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11840:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11851:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11836:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11836:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11860:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11866:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11856:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11856:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11829:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11829:48:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11829:48:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11886:96:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11960:6:8"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11968:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11977:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11894:65:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11894:88:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11886:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "12036:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12049:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12060:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12045:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12045:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11992:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11992:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11992:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11561:9:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11573:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11581:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11589:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11597:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11605:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11616:4:8",
                "type": ""
              }
            ],
            "src": "11407:664:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12248:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12258:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12270:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12281:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12266:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12266:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12258:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12305:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12316:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12301:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12301:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12324:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12330:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12320:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12320:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12294:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12294:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12294:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12350:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12484:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_058dc7fda144838ad249ee582a37501a4a14eb0759e7ef734c29bcc66587de41_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12358:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12358:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12350:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_058dc7fda144838ad249ee582a37501a4a14eb0759e7ef734c29bcc66587de41__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12228:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12243:4:8",
                "type": ""
              }
            ],
            "src": "12077:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12673:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12683:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12695:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12706:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12691:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12691:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12683:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12730:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12741:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12726:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12726:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12749:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12755:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12745:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12745:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12719:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12719:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12719:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12775:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12909:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12783:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12783:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12775:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12653:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12668:4:8",
                "type": ""
              }
            ],
            "src": "12502:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13098:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13108:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13120:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13131:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13116:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13116:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13108:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13155:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13166:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13151:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13151:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13174:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13180:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13170:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13170:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13144:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13144:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13144:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13200:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13334:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13208:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13208:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13200:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13078:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13093:4:8",
                "type": ""
              }
            ],
            "src": "12927:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13523:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13533:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13545:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13556:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13541:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13541:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13533:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13580:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13591:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13576:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13576:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13599:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13605:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13595:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13595:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13569:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13569:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13569:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13625:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13759:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13633:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13633:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13625:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13503:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13518:4:8",
                "type": ""
              }
            ],
            "src": "13352:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13948:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13958:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13970:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13981:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13966:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13966:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13958:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14005:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14016:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14001:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14001:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14024:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14030:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14020:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14020:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13994:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13994:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13994:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14050:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14184:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14058:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14058:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14050:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13928:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13943:4:8",
                "type": ""
              }
            ],
            "src": "13777:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14373:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14383:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14395:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14406:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14391:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14391:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14383:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14430:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14441:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14426:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14426:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14449:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14455:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14445:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14445:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14419:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14419:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14419:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14475:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14609:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_72daef8bfb2fda79cf45f117092d47ebeea7f9889e6c0e4d46efce0f89de65f1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14483:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14483:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14475:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_72daef8bfb2fda79cf45f117092d47ebeea7f9889e6c0e4d46efce0f89de65f1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14353:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14368:4:8",
                "type": ""
              }
            ],
            "src": "14202:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14798:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14808:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14820:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14831:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14816:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14816:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14808:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14855:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14866:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14851:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14851:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14874:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14880:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14870:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14870:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14844:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14844:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14844:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14900:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15034:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14908:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14908:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14900:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14778:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14793:4:8",
                "type": ""
              }
            ],
            "src": "14627:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15223:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15233:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15245:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15256:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15241:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15241:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15233:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15280:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15291:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15276:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15276:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15299:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15305:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15295:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15295:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15269:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15269:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15269:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15325:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15459:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15333:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15333:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15325:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15203:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15218:4:8",
                "type": ""
              }
            ],
            "src": "15052:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15648:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15658:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15670:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15681:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15666:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15666:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15658:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15705:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15716:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15701:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15701:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15724:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15730:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15720:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15720:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15694:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15694:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15694:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15750:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15884:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15758:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15758:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15750:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15628:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15643:4:8",
                "type": ""
              }
            ],
            "src": "15477:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16073:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16083:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16095:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16106:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16091:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16091:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16083:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16130:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16141:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16126:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16126:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16149:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16155:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16145:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16145:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16119:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16119:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16119:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16175:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16309:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_bbfd0b00878eb5275bb81d664c66c59f86b8b1ee9527cfdec4595a49017c3667_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16183:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16183:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16175:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bbfd0b00878eb5275bb81d664c66c59f86b8b1ee9527cfdec4595a49017c3667__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16053:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16068:4:8",
                "type": ""
              }
            ],
            "src": "15902:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16498:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16508:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16520:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16531:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16516:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16516:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16508:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16555:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16566:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16551:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16551:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16574:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16580:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16570:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16570:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16544:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16544:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16544:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16600:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16734:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e87e8ddef9b567a973cecd40be59ab55dba991317b28dbcdd461b54c1dafaf94_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16608:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16608:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16600:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e87e8ddef9b567a973cecd40be59ab55dba991317b28dbcdd461b54c1dafaf94__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16478:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16493:4:8",
                "type": ""
              }
            ],
            "src": "16327:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16923:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16933:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16945:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16956:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16941:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16941:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16933:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16980:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16991:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16976:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16976:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16999:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17005:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16995:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16995:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16969:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16969:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16969:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17025:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17159:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17033:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17033:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17025:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16903:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16918:4:8",
                "type": ""
              }
            ],
            "src": "16752:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17348:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17358:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17370:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17381:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17366:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17366:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17358:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17405:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17416:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17401:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17401:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17424:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17430:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17420:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17420:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17394:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17394:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17394:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17450:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17584:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_eeb3fb5a6261bb4eabbae10e6d7bc830fc1406585352f7291b699619bdc3382e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17458:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17458:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17450:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eeb3fb5a6261bb4eabbae10e6d7bc830fc1406585352f7291b699619bdc3382e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17328:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17343:4:8",
                "type": ""
              }
            ],
            "src": "17177:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17700:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17710:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17722:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17733:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17718:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17718:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17710:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17790:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17803:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17814:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17799:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17799:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17746:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17746:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17746:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17672:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17684:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17695:4:8",
                "type": ""
              }
            ],
            "src": "17602:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18044:450:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18054:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18066:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18077:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18062:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18062:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18054:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18134:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18147:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18158:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18143:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18143:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18090:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18090:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18090:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18182:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18193:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18178:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18178:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18202:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18208:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18198:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18198:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18171:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18171:48:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18171:48:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18228:96:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18302:6:8"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "18310:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18319:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18236:65:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18236:88:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18228:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18345:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18356:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18341:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18341:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18365:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18371:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18361:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18361:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18334:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18334:48:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18334:48:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18391:96:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "18465:6:8"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "18473:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18482:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18399:65:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18399:88:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18391:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17984:9:8",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "17996:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "18004:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18012:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18020:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18028:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18039:4:8",
                "type": ""
              }
            ],
            "src": "17830:664:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18596:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18613:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18618:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18606:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18606:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18606:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18634:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18653:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18658:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18649:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18649:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "18634:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18568:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "18573:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "18584:11:8",
                "type": ""
              }
            ],
            "src": "18500:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18719:261:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18729:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18752:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18734:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18734:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "18729:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18763:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18786:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18768:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18768:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "18763:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18926:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18928:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18928:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18928:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18847:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18854:66:8",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "18922:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18850:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18850:74:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "18844:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18844:81:8"
                  },
                  "nodeType": "YulIf",
                  "src": "18841:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18958:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18969:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18972:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18965:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18965:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "18958:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18706:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18709:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "18715:3:8",
                "type": ""
              }
            ],
            "src": "18675:305:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19031:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19041:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19070:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "19052:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19052:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "19041:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19013:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "19023:7:8",
                "type": ""
              }
            ],
            "src": "18986:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19130:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19140:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19165:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "19158:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19158:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19151:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19151:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "19140:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19112:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "19122:7:8",
                "type": ""
              }
            ],
            "src": "19088:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19229:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19239:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19254:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19261:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "19250:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19250:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "19239:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19211:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "19221:7:8",
                "type": ""
              }
            ],
            "src": "19184:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19361:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19371:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "19382:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "19371:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19343:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "19353:7:8",
                "type": ""
              }
            ],
            "src": "19316:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19474:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19484:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19543:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$1312_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "19497:45:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19497:52:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "19484:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1312_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19454:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "19464:9:8",
                "type": ""
              }
            ],
            "src": "19399:156:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19636:53:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19646:37:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19677:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "19659:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19659:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "19646:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1312_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19616:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "19626:9:8",
                "type": ""
              }
            ],
            "src": "19561:128:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19746:103:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "19769:3:8"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "19774:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19779:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "19756:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19756:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19756:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "19827:3:8"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "19832:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19823:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19823:16:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19841:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19816:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19816:27:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19816:27:8"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "19728:3:8",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "19733:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19738:6:8",
                "type": ""
              }
            ],
            "src": "19695:154:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19902:53:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19912:37:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19943:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "19923:19:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19923:26:8"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "19912:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19884:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "19894:7:8",
                "type": ""
              }
            ],
            "src": "19855:100:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20008:47:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20018:31:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20043:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "20029:13:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20029:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "20018:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19990:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "20000:7:8",
                "type": ""
              }
            ],
            "src": "19961:94:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20108:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20118:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20129:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "20118:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20090:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "20100:7:8",
                "type": ""
              }
            ],
            "src": "20061:79:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20174:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20191:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20194:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20184:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20184:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20184:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20288:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20291:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20281:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20281:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20281:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20312:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20315:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "20305:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20305:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20305:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "20146:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20380:54:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20390:38:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20408:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20415:2:8",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20404:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20404:14:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20424:2:8",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "20420:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20420:7:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20400:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20400:28:8"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "20390:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20363:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "20373:6:8",
                "type": ""
              }
            ],
            "src": "20332:102:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20482:52:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20492:35:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20517:2:8",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20521:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "20513:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20513:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "20492:8:8"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20463:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "20473:8:8",
                "type": ""
              }
            ],
            "src": "20440:94:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20583:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20640:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20649:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20652:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20642:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20642:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20642:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20606:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20631:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "20613:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20613:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "20603:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20603:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20596:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20596:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "20593:2:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20576:5:8",
                "type": ""
              }
            ],
            "src": "20540:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20708:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20762:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20771:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20774:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20764:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20764:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20764:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20731:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20753:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "20738:14:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20738:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "20728:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20728:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20721:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20721:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "20718:2:8"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20701:5:8",
                "type": ""
              }
            ],
            "src": "20668:116:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20833:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20890:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20899:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20902:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20892:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20892:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20892:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20856:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20881:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "20863:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20863:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "20853:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20853:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20846:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20846:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "20843:2:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20826:5:8",
                "type": ""
              }
            ],
            "src": "20790:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value4, value5 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_t_contract$_IERC20_$1312_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1312_to_t_address(value))\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_058dc7fda144838ad249ee582a37501a4a14eb0759e7ef734c29bcc66587de41_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n\n        mstore(add(pos, 0), \"already deployed\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n\n        mstore(add(pos, 0), \"not active\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n\n        mstore(add(pos, 0), \"no allowance\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"not enough balance\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_72daef8bfb2fda79cf45f117092d47ebeea7f9889e6c0e4d46efce0f89de65f1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n\n        mstore(add(pos, 0), \"no lock allowance\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n\n        mstore(add(pos, 0), \"only bridge\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n\n        mstore(add(pos, 0), \"zero register fee\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bbfd0b00878eb5275bb81d664c66c59f86b8b1ee9527cfdec4595a49017c3667_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n\n        mstore(add(pos, 0), \"Not enough token.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e87e8ddef9b567a973cecd40be59ab55dba991317b28dbcdd461b54c1dafaf94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n\n        mstore(add(pos, 0), \"token not registered yet\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n\n        mstore(add(pos, 0), \"already activated\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_eeb3fb5a6261bb4eabbae10e6d7bc830fc1406585352f7291b699619bdc3382e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n\n        mstore(add(pos, 0), \"no swap allowance\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1312__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1312_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_calldata_ptr_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value0, value1,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value2, value3,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_058dc7fda144838ad249ee582a37501a4a14eb0759e7ef734c29bcc66587de41__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_058dc7fda144838ad249ee582a37501a4a14eb0759e7ef734c29bcc66587de41_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_72daef8bfb2fda79cf45f117092d47ebeea7f9889e6c0e4d46efce0f89de65f1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72daef8bfb2fda79cf45f117092d47ebeea7f9889e6c0e4d46efce0f89de65f1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bbfd0b00878eb5275bb81d664c66c59f86b8b1ee9527cfdec4595a49017c3667__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bbfd0b00878eb5275bb81d664c66c59f86b8b1ee9527cfdec4595a49017c3667_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e87e8ddef9b567a973cecd40be59ab55dba991317b28dbcdd461b54c1dafaf94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e87e8ddef9b567a973cecd40be59ab55dba991317b28dbcdd461b54c1dafaf94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_eeb3fb5a6261bb4eabbae10e6d7bc830fc1406585352f7291b699619bdc3382e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eeb3fb5a6261bb4eabbae10e6d7bc830fc1406585352f7291b699619bdc3382e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value3, value4,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$1312_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$1312_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1312_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "387:7233:0:-:0;;;2153:279;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:2;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;2254:1:0;2239:12;:16;2231:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2300:1;2289:8;:12;2281:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2338:11;2325:3;;:25;;;;;;;;;;;;;;;;;;2367:12;2353:11;:26;;;;2392:8;2382:7;:18;;;;2413:12;:10;;;:12;;:::i;:::-;2404:6;;:21;;;;;;;;;;;;;;;;;;2153:279;;;387:7233;;586:96:7;639:7;665:10;658:17;;586:96;:::o;7:143:8:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:596::-;;;;458:2;446:9;437:7;433:23;429:32;426:2;;;474:1;471;464:12;426:2;517:1;542:64;598:7;589:6;578:9;574:22;542:64;:::i;:::-;532:74;;488:128;655:2;681:64;737:7;728:6;717:9;713:22;681:64;:::i;:::-;671:74;;626:129;794:2;820:64;876:7;867:6;856:9;852:22;820:64;:::i;:::-;810:74;;765:129;416:485;;;;;:::o;907:312::-;;1070:67;1134:2;1129:3;1070:67;:::i;:::-;1063:74;;1167:16;1163:1;1158:3;1154:11;1147:37;1210:2;1205:3;1201:12;1194:19;;1053:166;;;:::o;1225:316::-;;1388:67;1452:2;1447:3;1388:67;:::i;:::-;1381:74;;1485:20;1481:1;1476:3;1472:11;1465:41;1532:2;1527:3;1523:12;1516:19;;1371:170;;;:::o;1547:419::-;;1751:2;1740:9;1736:18;1728:26;;1800:9;1794:4;1790:20;1786:1;1775:9;1771:17;1764:47;1828:131;1954:4;1828:131;:::i;:::-;1820:139;;1718:248;;;:::o;1972:419::-;;2176:2;2165:9;2161:18;2153:26;;2225:9;2219:4;2215:20;2211:1;2200:9;2196:17;2189:47;2253:131;2379:4;2253:131;:::i;:::-;2245:139;;2143:248;;;:::o;2397:169::-;;2515:6;2510:3;2503:19;2555:4;2550:3;2546:14;2531:29;;2493:73;;;;:::o;2572:96::-;;2638:24;2656:5;2638:24;:::i;:::-;2627:35;;2617:51;;;:::o;2674:126::-;;2751:42;2744:5;2740:54;2729:65;;2719:81;;;:::o;2806:77::-;;2872:5;2861:16;;2851:32;;;:::o;2889:122::-;2962:24;2980:5;2962:24;:::i;:::-;2955:5;2952:35;2942:2;;3001:1;2998;2991:12;2942:2;2932:79;:::o;3017:122::-;3090:24;3108:5;3090:24;:::i;:::-;3083:5;3080:35;3070:2;;3129:1;3126;3119:12;3070:2;3060:79;:::o;387:7233:0:-;;;;;;;",
  "deployedSourceMap": "387:7233:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4121:838;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2996:532;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7159:459;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2630:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5611:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7081:72;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1700:145:2;;;:::i;:::-;;1068:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2776:152:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5941:828;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;535:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5477:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1588:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3646:358;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;799:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6956:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1994:240:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4121:838:0;4279:20;2481:12;:10;:12::i;:::-;2471:22;;:6;;;;;;;;;;;:22;;;2463:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;4306:21:::1;4330:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4306:51;;4360:12;4402;4423;4385:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4375:62;;;;;;4360:77;;4526:4;4515:8;4509:15;4500:2;4490:8;4486:17;4479:1;4471:60;4455:76;;4544:16;:30;4561:12;4544:30;;;;;;;;;;;;;;;:37;;;;;;;;;;;;4536:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4646:35;;;;;;;;4662:12;4646:35;;;;;;4676:4;4646:35;;;;::::0;4608:16:::1;:30;4625:12;4608:30;;;;;;;;;;;;;;;:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4694:12;4685:39;;;4725:5;;4732:7;;4741:12;4685:69;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4798:12;4764:101;;4776:12;4764:101;;;4820:12;4842:5;;4857:7;;4764:101;;;;;;;;;;:::i;:::-;;;;;;;;4888:12;4874:27;;;;;;;;;;;;4937:12;4909:41;;4923:12;4909:41;;;;;;;;;;;;2512:1;;4121:838:::0;;;;;;;;:::o;2996:532::-;3054:40;3102:16;:24;3119:6;3102:24;;;;;;;;;;;;;;;3054:72;;3166:5;3139:32;;:16;:23;;;;;;;;;;;;:32;;;3131:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3266:17;3291:3;;;;;;;;;;;:13;;;3305:10;3325:4;3291:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3266:65;;3356:11;;3343:9;:24;;3335:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3389:3;;;;;;;;;;;:16;;;3406:10;3418:6;;;;;;;;;;;3426:11;;3389:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3489:1;3450:16;:28;;;:41;;;;;;;;;;;;;;;;;;3514:6;3500:21;;;;;;;;;;;;2996:532;;;:::o;7159:459::-;2481:12;:10;:12::i;:::-;2471:22;;:6;;;;;;;;;;;:22;;;2463:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;7271:10:::1;;7260:7;:21;;7252:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;7314:16;:24;7331:6;7314:24;;;;;;;;;;;;;;;:31;;;;;;;;;;;;7306:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;7365:12;7387:6;7365:29;;7398:5;:18;;;7425:4;7432:5;7439:7;7398:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7507:7;7479:5;:13;7485:6;7479:13;;;;;;;;;;;;;;;:20;7493:5;7479:20;;;;;;;;;;;;;;;;:35;;;;:::i;:::-;7451:5;:13;7457:6;7451:13;;;;;;;;;;;;;;;:25;7465:10;7451:25;;;;;;;;;;;;;;;:63;;;;7555:16;:24;7572:6;7555:24;;;;;;;;;;;;;;;:36;;;;;;;;;;;;7523:87;;7538:6;7523:87;;7531:5;7523:87;;;7602:7;7523:87;;;;;;:::i;:::-;;;;;;;;2512:1;7159:459:::0;;;:::o;2630:85::-;2678:7;2697:11;;2690:18;;2630:85;:::o;5611:139::-;2481:12;:10;:12::i;:::-;2471:22;;:6;;;;;;;;;;;:22;;;2463:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;5692:1:::1;5681:8;:12;5673:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;5735:8;5725:7;:18;;;;5611:139:::0;:::o;7081:72::-;2481:12;:10;:12::i;:::-;2471:22;;:6;;;;;;;;;;;:22;;;2463:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;7081:72;:::o;1700:145:2:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1068:85::-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;2776:152:0:-;2481:12;:10;:12::i;:::-;2471:22;;:6;;;;;;;;;;;:22;;;2463:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2869:1:::1;2854:12;:16;2846:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2909:12;2895:11;:26;;;;2776:152:::0;:::o;5941:828::-;6013:16;:24;6030:6;6013:24;;;;;;;;;;;;;;;:31;;;;;;;;;;;;6005:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6079:17;6104:3;;;;;;;;;;;:13;;;6118:10;6138:4;6104:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6079:65;;6169:7;;6156:9;:20;;6148:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6202:12;6224:6;6202:29;;6273:7;6242:5;:15;;;6258:10;6242:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;6234:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6309:22;6339:5;:15;;;6355:10;6375:4;6339:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6309:72;;6411:7;6393:14;:25;;6385:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;6446:3;;;;;;;;;;;:16;;;6463:10;6475:6;;;;;;;;;;;6483:7;;6446:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6494:5;:18;;;6513:10;6533:4;6540:7;6494:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6613:7;6585:5;:13;6591:6;6585:13;;;;;;;;;;;;;;;:25;6599:10;6585:25;;;;;;;;;;;;;;;;:35;;;;:::i;:::-;6552:5;:13;6558:6;6552:13;;;;;;;;;;;;;;;:25;6566:10;6552:25;;;;;;;;;;;;;;;:68;;;;6650:7;6637:10;;:20;;;;:::i;:::-;6624:10;:33;;;;6705:16;:24;6722:6;6705:24;;;;;;;;;;;;;;;:36;;;;;;;;;;;;6666:94;;6688:6;6666:94;;6676:10;6666:94;;;6752:7;6666:94;;;;;;:::i;:::-;;;;;;;;5941:828;;;;;:::o;535:17::-;;;;;;;;;;;;;:::o;5477:77::-;5521:7;5540;;5533:14;;5477:77;:::o;1588:25::-;;;;:::o;3646:358::-;2481:12;:10;:12::i;:::-;2471:22;;:6;;;;;;;;;;;:22;;;2463:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;3741:40:::1;3789:16;:25;3806:7;3789:25;;;;;;;;;;;;;;;3741:73;;3852:5;3825:32;;:16;:23;;;;;;;;;;;;:32;;;3817:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3912:4;3886:16;:23;;;:30;;;;;;;;;;;;;;;;;;3950:7;3919:16;:28;;;:38;;;;;;;;;;;;;;;;;;3989:7;3966:31;;3980:7;3966:31;;;;;;;;;;;;2512:1;3646:358:::0;;:::o;799:21::-;;;;;;;;;;;;;:::o;6956:119::-;7022:16;:24;7039:6;7022:24;;;;;;;;;;;;;;;:31;;;;;;;;;;;;7014:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;6956:119;:::o;1994:240:2:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:7:-;639:7;665:10;658:17;;586:96;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:8:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;309:352::-;;;427:3;420:4;412:6;408:17;404:27;394:2;;445:1;442;435:12;394:2;481:6;468:20;458:30;;511:18;503:6;500:30;497:2;;;543:1;540;533:12;497:2;580:4;572:6;568:17;556:29;;634:3;626:4;618:6;614:17;604:8;600:32;597:41;594:2;;;651:1;648;641:12;594:2;384:277;;;;;:::o;667:139::-;;751:6;738:20;729:29;;767:33;794:5;767:33;:::i;:::-;719:87;;;;:::o;812:143::-;;900:6;894:13;885:22;;916:33;943:5;916:33;:::i;:::-;875:80;;;;:::o;961:262::-;;1069:2;1057:9;1048:7;1044:23;1040:32;1037:2;;;1085:1;1082;1075:12;1037:2;1128:1;1153:53;1198:7;1189:6;1178:9;1174:22;1153:53;:::i;:::-;1143:63;;1099:117;1027:196;;;;:::o;1229:407::-;;;1354:2;1342:9;1333:7;1329:23;1325:32;1322:2;;;1370:1;1367;1360:12;1322:2;1413:1;1438:53;1483:7;1474:6;1463:9;1459:22;1438:53;:::i;:::-;1428:63;;1384:117;1540:2;1566:53;1611:7;1602:6;1591:9;1587:22;1566:53;:::i;:::-;1556:63;;1511:118;1312:324;;;;;:::o;1642:552::-;;;;1784:2;1772:9;1763:7;1759:23;1755:32;1752:2;;;1800:1;1797;1790:12;1752:2;1843:1;1868:53;1913:7;1904:6;1893:9;1889:22;1868:53;:::i;:::-;1858:63;;1814:117;1970:2;1996:53;2041:7;2032:6;2021:9;2017:22;1996:53;:::i;:::-;1986:63;;1941:118;2098:2;2124:53;2169:7;2160:6;2149:9;2145:22;2124:53;:::i;:::-;2114:63;;2069:118;1742:452;;;;;:::o;2200:407::-;;;2325:2;2313:9;2304:7;2300:23;2296:32;2293:2;;;2341:1;2338;2331:12;2293:2;2384:1;2409:53;2454:7;2445:6;2434:9;2430:22;2409:53;:::i;:::-;2399:63;;2355:117;2511:2;2537:53;2582:7;2573:6;2562:9;2558:22;2537:53;:::i;:::-;2527:63;;2482:118;2283:324;;;;;:::o;2613:964::-;;;;;;;2812:3;2800:9;2791:7;2787:23;2783:33;2780:2;;;2829:1;2826;2819:12;2780:2;2872:1;2897:53;2942:7;2933:6;2922:9;2918:22;2897:53;:::i;:::-;2887:63;;2843:117;2999:2;3025:53;3070:7;3061:6;3050:9;3046:22;3025:53;:::i;:::-;3015:63;;2970:118;3155:2;3144:9;3140:18;3127:32;3186:18;3178:6;3175:30;3172:2;;;3218:1;3215;3208:12;3172:2;3254:65;3311:7;3302:6;3291:9;3287:22;3254:65;:::i;:::-;3236:83;;;;3098:231;3396:2;3385:9;3381:18;3368:32;3427:18;3419:6;3416:30;3413:2;;;3459:1;3456;3449:12;3413:2;3495:65;3552:7;3543:6;3532:9;3528:22;3495:65;:::i;:::-;3477:83;;;;3339:231;2770:807;;;;;;;;:::o;3583:278::-;;3699:2;3687:9;3678:7;3674:23;3670:32;3667:2;;;3715:1;3712;3705:12;3667:2;3758:1;3783:61;3836:7;3827:6;3816:9;3812:22;3783:61;:::i;:::-;3773:71;;3729:125;3657:204;;;;:::o;3867:262::-;;3975:2;3963:9;3954:7;3950:23;3946:32;3943:2;;;3991:1;3988;3981:12;3943:2;4034:1;4059:53;4104:7;4095:6;4084:9;4080:22;4059:53;:::i;:::-;4049:63;;4005:117;3933:196;;;;:::o;4135:284::-;;4254:2;4242:9;4233:7;4229:23;4225:32;4222:2;;;4270:1;4267;4260:12;4222:2;4313:1;4338:64;4394:7;4385:6;4374:9;4370:22;4338:64;:::i;:::-;4328:74;;4284:128;4212:207;;;;:::o;4425:118::-;4512:24;4530:5;4512:24;:::i;:::-;4507:3;4500:37;4490:53;;:::o;4549:157::-;4654:45;4674:24;4692:5;4674:24;:::i;:::-;4654:45;:::i;:::-;4649:3;4642:58;4632:74;;:::o;4712:161::-;4814:52;4860:5;4814:52;:::i;:::-;4809:3;4802:65;4792:81;;:::o;4903:304::-;;5022:71;5086:6;5081:3;5022:71;:::i;:::-;5015:78;;5103:43;5139:6;5134:3;5127:5;5103:43;:::i;:::-;5171:29;5193:6;5171:29;:::i;:::-;5166:3;5162:39;5155:46;;5005:202;;;;;:::o;5213:314::-;;5376:67;5440:2;5435:3;5376:67;:::i;:::-;5369:74;;5473:18;5469:1;5464:3;5460:11;5453:39;5518:2;5513:3;5509:12;5502:19;;5359:168;;;:::o;5533:370::-;;5696:67;5760:2;5755:3;5696:67;:::i;:::-;5689:74;;5793:34;5789:1;5784:3;5780:11;5773:55;5859:8;5854:2;5849:3;5845:12;5838:30;5894:2;5889:3;5885:12;5878:19;;5679:224;;;:::o;5909:308::-;;6072:67;6136:2;6131:3;6072:67;:::i;:::-;6065:74;;6169:12;6165:1;6160:3;6156:11;6149:33;6208:2;6203:3;6199:12;6192:19;;6055:162;;;:::o;6223:310::-;;6386:67;6450:2;6445:3;6386:67;:::i;:::-;6379:74;;6483:14;6479:1;6474:3;6470:11;6463:35;6524:2;6519:3;6515:12;6508:19;;6369:164;;;:::o;6539:316::-;;6702:67;6766:2;6761:3;6702:67;:::i;:::-;6695:74;;6799:20;6795:1;6790:3;6786:11;6779:41;6846:2;6841:3;6837:12;6830:19;;6685:170;;;:::o;6861:315::-;;7024:67;7088:2;7083:3;7024:67;:::i;:::-;7017:74;;7121:19;7117:1;7112:3;7108:11;7101:40;7167:2;7162:3;7158:12;7151:19;;7007:169;;;:::o;7182:309::-;;7345:67;7409:2;7404:3;7345:67;:::i;:::-;7338:74;;7442:13;7438:1;7433:3;7429:11;7422:34;7482:2;7477:3;7473:12;7466:19;;7328:163;;;:::o;7497:315::-;;7660:67;7724:2;7719:3;7660:67;:::i;:::-;7653:74;;7757:19;7753:1;7748:3;7744:11;7737:40;7803:2;7798:3;7794:12;7787:19;;7643:169;;;:::o;7818:330::-;;7981:67;8045:2;8040:3;7981:67;:::i;:::-;7974:74;;8078:34;8074:1;8069:3;8065:11;8058:55;8139:2;8134:3;8130:12;8123:19;;7964:184;;;:::o;8154:315::-;;8317:67;8381:2;8376:3;8317:67;:::i;:::-;8310:74;;8414:19;8410:1;8405:3;8401:11;8394:40;8460:2;8455:3;8451:12;8444:19;;8300:169;;;:::o;8475:322::-;;8638:67;8702:2;8697:3;8638:67;:::i;:::-;8631:74;;8735:26;8731:1;8726:3;8722:11;8715:47;8788:2;8783:3;8779:12;8772:19;;8621:176;;;:::o;8803:315::-;;8966:67;9030:2;9025:3;8966:67;:::i;:::-;8959:74;;9063:19;9059:1;9054:3;9050:11;9043:40;9109:2;9104:3;9100:12;9093:19;;8949:169;;;:::o;9124:315::-;;9287:67;9351:2;9346:3;9287:67;:::i;:::-;9280:74;;9384:19;9380:1;9375:3;9371:11;9364:40;9430:2;9425:3;9421:12;9414:19;;9270:169;;;:::o;9445:118::-;9532:24;9550:5;9532:24;:::i;:::-;9527:3;9520:37;9510:53;;:::o;9569:157::-;9674:45;9694:24;9712:5;9694:24;:::i;:::-;9674:45;:::i;:::-;9669:3;9662:58;9652:74;;:::o;9732:397::-;;9887:75;9958:3;9949:6;9887:75;:::i;:::-;9987:2;9982:3;9978:12;9971:19;;10000:75;10071:3;10062:6;10000:75;:::i;:::-;10100:2;10095:3;10091:12;10084:19;;10120:3;10113:10;;9876:253;;;;;:::o;10135:222::-;;10266:2;10255:9;10251:18;10243:26;;10279:71;10347:1;10336:9;10332:17;10323:6;10279:71;:::i;:::-;10233:124;;;;:::o;10363:332::-;;10522:2;10511:9;10507:18;10499:26;;10535:71;10603:1;10592:9;10588:17;10579:6;10535:71;:::i;:::-;10616:72;10684:2;10673:9;10669:18;10660:6;10616:72;:::i;:::-;10489:206;;;;;:::o;10701:442::-;;10888:2;10877:9;10873:18;10865:26;;10901:71;10969:1;10958:9;10954:17;10945:6;10901:71;:::i;:::-;10982:72;11050:2;11039:9;11035:18;11026:6;10982:72;:::i;:::-;11064;11132:2;11121:9;11117:18;11108:6;11064:72;:::i;:::-;10855:288;;;;;;:::o;11149:252::-;;11295:2;11284:9;11280:18;11272:26;;11308:86;11391:1;11380:9;11376:17;11367:6;11308:86;:::i;:::-;11262:139;;;;:::o;11407:664::-;;11654:2;11643:9;11639:18;11631:26;;11703:9;11697:4;11693:20;11689:1;11678:9;11674:17;11667:47;11731:88;11814:4;11805:6;11797;11731:88;:::i;:::-;11723:96;;11866:9;11860:4;11856:20;11851:2;11840:9;11836:18;11829:48;11894:88;11977:4;11968:6;11960;11894:88;:::i;:::-;11886:96;;11992:72;12060:2;12049:9;12045:18;12036:6;11992:72;:::i;:::-;11621:450;;;;;;;;:::o;12077:419::-;;12281:2;12270:9;12266:18;12258:26;;12330:9;12324:4;12320:20;12316:1;12305:9;12301:17;12294:47;12358:131;12484:4;12358:131;:::i;:::-;12350:139;;12248:248;;;:::o;12502:419::-;;12706:2;12695:9;12691:18;12683:26;;12755:9;12749:4;12745:20;12741:1;12730:9;12726:17;12719:47;12783:131;12909:4;12783:131;:::i;:::-;12775:139;;12673:248;;;:::o;12927:419::-;;13131:2;13120:9;13116:18;13108:26;;13180:9;13174:4;13170:20;13166:1;13155:9;13151:17;13144:47;13208:131;13334:4;13208:131;:::i;:::-;13200:139;;13098:248;;;:::o;13352:419::-;;13556:2;13545:9;13541:18;13533:26;;13605:9;13599:4;13595:20;13591:1;13580:9;13576:17;13569:47;13633:131;13759:4;13633:131;:::i;:::-;13625:139;;13523:248;;;:::o;13777:419::-;;13981:2;13970:9;13966:18;13958:26;;14030:9;14024:4;14020:20;14016:1;14005:9;14001:17;13994:47;14058:131;14184:4;14058:131;:::i;:::-;14050:139;;13948:248;;;:::o;14202:419::-;;14406:2;14395:9;14391:18;14383:26;;14455:9;14449:4;14445:20;14441:1;14430:9;14426:17;14419:47;14483:131;14609:4;14483:131;:::i;:::-;14475:139;;14373:248;;;:::o;14627:419::-;;14831:2;14820:9;14816:18;14808:26;;14880:9;14874:4;14870:20;14866:1;14855:9;14851:17;14844:47;14908:131;15034:4;14908:131;:::i;:::-;14900:139;;14798:248;;;:::o;15052:419::-;;15256:2;15245:9;15241:18;15233:26;;15305:9;15299:4;15295:20;15291:1;15280:9;15276:17;15269:47;15333:131;15459:4;15333:131;:::i;:::-;15325:139;;15223:248;;;:::o;15477:419::-;;15681:2;15670:9;15666:18;15658:26;;15730:9;15724:4;15720:20;15716:1;15705:9;15701:17;15694:47;15758:131;15884:4;15758:131;:::i;:::-;15750:139;;15648:248;;;:::o;15902:419::-;;16106:2;16095:9;16091:18;16083:26;;16155:9;16149:4;16145:20;16141:1;16130:9;16126:17;16119:47;16183:131;16309:4;16183:131;:::i;:::-;16175:139;;16073:248;;;:::o;16327:419::-;;16531:2;16520:9;16516:18;16508:26;;16580:9;16574:4;16570:20;16566:1;16555:9;16551:17;16544:47;16608:131;16734:4;16608:131;:::i;:::-;16600:139;;16498:248;;;:::o;16752:419::-;;16956:2;16945:9;16941:18;16933:26;;17005:9;16999:4;16995:20;16991:1;16980:9;16976:17;16969:47;17033:131;17159:4;17033:131;:::i;:::-;17025:139;;16923:248;;;:::o;17177:419::-;;17381:2;17370:9;17366:18;17358:26;;17430:9;17424:4;17420:20;17416:1;17405:9;17401:17;17394:47;17458:131;17584:4;17458:131;:::i;:::-;17450:139;;17348:248;;;:::o;17602:222::-;;17733:2;17722:9;17718:18;17710:26;;17746:71;17814:1;17803:9;17799:17;17790:6;17746:71;:::i;:::-;17700:124;;;;:::o;17830:664::-;;18077:2;18066:9;18062:18;18054:26;;18090:71;18158:1;18147:9;18143:17;18134:6;18090:71;:::i;:::-;18208:9;18202:4;18198:20;18193:2;18182:9;18178:18;18171:48;18236:88;18319:4;18310:6;18302;18236:88;:::i;:::-;18228:96;;18371:9;18365:4;18361:20;18356:2;18345:9;18341:18;18334:48;18399:88;18482:4;18473:6;18465;18399:88;:::i;:::-;18391:96;;18044:450;;;;;;;;:::o;18500:169::-;;18618:6;18613:3;18606:19;18658:4;18653:3;18649:14;18634:29;;18596:73;;;;:::o;18675:305::-;;18734:20;18752:1;18734:20;:::i;:::-;18729:25;;18768:20;18786:1;18768:20;:::i;:::-;18763:25;;18922:1;18854:66;18850:74;18847:1;18844:81;18841:2;;;18928:18;;:::i;:::-;18841:2;18972:1;18969;18965:9;18958:16;;18719:261;;;;:::o;18986:96::-;;19052:24;19070:5;19052:24;:::i;:::-;19041:35;;19031:51;;;:::o;19088:90::-;;19165:5;19158:13;19151:21;19140:32;;19130:48;;;:::o;19184:126::-;;19261:42;19254:5;19250:54;19239:65;;19229:81;;;:::o;19316:77::-;;19382:5;19371:16;;19361:32;;;:::o;19399:156::-;;19497:52;19543:5;19497:52;:::i;:::-;19484:65;;19474:81;;;:::o;19561:128::-;;19659:24;19677:5;19659:24;:::i;:::-;19646:37;;19636:53;;;:::o;19695:154::-;19779:6;19774:3;19769;19756:30;19841:1;19832:6;19827:3;19823:16;19816:27;19746:103;;;:::o;19855:100::-;;19923:26;19943:5;19923:26;:::i;:::-;19912:37;;19902:53;;;:::o;19961:94::-;;20029:20;20043:5;20029:20;:::i;:::-;20018:31;;20008:47;;;:::o;20061:79::-;;20129:5;20118:16;;20108:32;;;:::o;20146:180::-;20194:77;20191:1;20184:88;20291:4;20288:1;20281:15;20315:4;20312:1;20305:15;20332:102;;20424:2;20420:7;20415:2;20408:5;20404:14;20400:28;20390:38;;20380:54;;;:::o;20440:94::-;;20521:5;20517:2;20513:14;20492:35;;20482:52;;;:::o;20540:122::-;20613:24;20631:5;20613:24;:::i;:::-;20606:5;20603:35;20593:2;;20652:1;20649;20642:12;20593:2;20583:79;:::o;20668:116::-;20738:21;20753:5;20738:21;:::i;:::-;20731:5;20728:32;20718:2;;20774:1;20771;20764:12;20718:2;20708:76;:::o;20790:122::-;20863:24;20881:5;20863:24;:::i;:::-;20856:5;20853:35;20843:2;;20902:1;20899;20892:12;20843:2;20833:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./PakToken.sol\";\n\n/**\n * @dev PackLock is a smartcontract, where users are\n * locking their tokens that they are swapped to another blockchain\n */\ncontract PakLock is Ownable {\n    using SafeERC20 for IERC20;\n\n    /// @notice PakBridge (PAK) token to use in fee\n    /// for any transaction.\n    IERC20 public pak;\n\n    /// @dev the amount to use for registration\n    uint256 private registerFee;\n\n    /// @notice the address of bridge (the cosmos chain)\n    /// representer. This representer ideally should act\n    /// after voting process in the bridge.\n    address public bridge;\n\n    /// @dev Struct to track the registered tokens\n    struct RegisteredToken {\n\taddress targetToken;    // The token address deployed on\n\t                        // another blockchain\n\tbool active;            // Whether it was activated or not\n\t                        // means whether the token was\n\t                        // deployed or not.\n    }\n    /// @dev Track registered tokens\n    mapping(address => RegisteredToken) registeredTokens;\n\n    /// @dev swapping fee\n    uint256 swapFee;\n\n    /// @dev Locked amount of tokens:\n    /// token => user => balance;\n    mapping(address => mapping(address => uint256)) locks;\n\n    /// @dev Debts of user\n    mapping(address => mapping(address => uint256)) debts;\n\n    /// @notice Total amount of locked tokens\n    uint256 public lockAmount;\n    \n    event RegisterToken(address indexed token);\n    event ActivateToken(address indexed source,\n\t\t\taddress indexed target);\n    event DeployToken(address indexed source,\n\t\t      address indexed target,\n\t\t      uint256 totalSupply,\n\t\t      string name,\n\t\t      string symbol);\n    event SwapBegin(address indexed user,\n\t\t    address indexed source,\n\t\t    address indexed target,\n\t\t    uint256 amount);\n    event SwapEnd(address indexed user,\n\t\t    address indexed source,\n\t\t    address indexed target,\n\t\t    uint256 amount);\n    \n    constructor(address _pakAddress, uint256 _registerFee,\n\t\tuint256 _swapFee) {\n\trequire(_registerFee > 0, \"register zero fee.\");\n\trequire(_swapFee > 0, \"swap zero fee.\");\n\t\n\tpak = IERC20(_pakAddress);\n\tregisterFee = _registerFee;\n\tswapFee = _swapFee;\n\n\tbridge = _msgSender();\n    }\n\n    modifier onlyBridge() {\n\trequire(bridge == _msgSender(), \"only bridge\");\n\t_;\n    }\n\n    /**\n     * @dev Return amount of PAK token to use for \n     * registration of a new bridge.\n     */\n    function getRegisterFee() external view returns(uint256) {\n\treturn registerFee;\n    }\n\n    /**\n     * @notice update the register fee\n     */\n    function setRegisterFee(uint256 _registerFee)\n\texternal onlyBridge {\n\trequire(_registerFee > 0, \"zero register fee\");\n\tregisterFee = _registerFee;\n    }\n\n    /**\n     * @notice Register a token to be bridged\n     */\n    function registerToken(address _token) external {\n        RegisteredToken storage _registeredToken\n\t    = registeredTokens[_token];\n\t\n\trequire(_registeredToken.active == false,\n\t\t\"already activated\");\n\n\t// We should redeem the PakBridge token\n\t// for registeration fee\n\tuint256 allowance\n\t    = pak.allowance(msg.sender, address(this));\n\n\trequire(allowance >= registerFee, \"no allowance\");\t\n\n\tpak.transferFrom(msg.sender, bridge, registerFee);\n\t\n        _registeredToken.targetToken = address(0);\n\n\temit RegisterToken(_token);\n    }\n\n    /**\n     * @dev Activate registered token by passing the token address\n     * in another blockchain\n     */\n    function activateRegistration(address _source, address _target)\n\texternal onlyBridge {\n        RegisteredToken storage _registeredToken\n\t    = registeredTokens[_source];\n\trequire(_registeredToken.active == false,\n\t\t\"already activated\");\t\n\n\t_registeredToken.active = true;\n\t_registeredToken.targetToken = _target;\n\n\temit ActivateToken(_source, _target);\n    }\n\n    /**\n     * @notice Deploy a new contract that is mapped \n     * to the token in another blockchain\n     */\n    function deployToken(address _sourceToken,\n\t\t\t uint256 _totalSupply,\n\t\t\t string calldata _name,\n\t\t\t string calldata _symbol)\n\t\texternal onlyBridge\t\n\treturns (address _targetToken) {\n\t\n\tbytes memory bytecode = type(PakToken).creationCode;\n\tbytes32 salt = keccak256(abi.encodePacked(_sourceToken,\n\t\t\t\t\t\t _totalSupply));\n\t \n\tassembly {\n\t_targetToken := create2(0,\n\t\t\t\tadd(bytecode, 32),\n\t\t\t\tmload(bytecode), salt)\n\t}\n\trequire(registeredTokens[_targetToken].active,\n\t\t\"already deployed\");\n\n\tregisteredTokens[_targetToken]\n\t    = RegisteredToken(_sourceToken, true);\n\n\tPakToken(_targetToken)\n\t    .initialize(_name, _symbol, _totalSupply);\n\t\n\temit DeployToken(_sourceToken,\n\t\t      _targetToken,\n\t\t      _totalSupply,\n\t\t      _name,\n\t\t      _symbol);\n\n\temit RegisterToken(_targetToken);\n\temit ActivateToken(_targetToken, _sourceToken);\n\t\n    }\n\n    ///////////////////////////\n    ///\n    /// Swap\n    ///\n    /// User locks his token in one blockchain.\n    /// Then in another blockchain he gets that amount of token.\n    /// The amount that user gets in another blockchain\n    /// From total locked tokens.\n    ///\n    /// Risks: If using a token more favorable\n    /// in one of the chains, most users will transfer to that\n    /// chain their tokens. Meaning It will be hard for users\n    /// to transfer to other chain\n    ///////////////////////////\n\n    function getSwapFee() external view returns(uint256) {\n\treturn swapFee;\n    }\n\n    /**\n     * @notice update the swap fee\n     */\n    function setSwapFee(uint256 _swapFee)\n\texternal onlyBridge {\n\trequire(_swapFee > 0, \"zero register fee\");\n        swapFee = _swapFee;\n    }\n    \n    /**\n     * @notice Lock the Tokens that will be \n     * unlocked in another blockchain\n     * \n     * requirements:\n     * token to lock should be registered and active\n     */\n    function beginSwap(address _token, uint256 _amount) external {\n\trequire(registeredTokens[_token].active,\n\t\t\"token not registered yet\");\n\n\tuint256 allowance\n\t    = pak.allowance(msg.sender, address(this));\n\n\trequire(allowance >= swapFee, \"no swap allowance\");\n\n\tIERC20 token = IERC20(_token);\n\trequire(token.balanceOf(msg.sender) >= _amount,\n\t\t\"not enough balance\");\n\n\tuint256 tokenAllowance\n\t    = token.allowance(msg.sender, address(this));\n\n\trequire(tokenAllowance >= _amount,\n\t\t\"no lock allowance\");\n\n\tpak.transferFrom(msg.sender, bridge, swapFee);\n\ttoken.transferFrom(msg.sender, address(this), _amount);\n\n\tlocks[_token][msg.sender] =\n\t    locks[_token][msg.sender] + _amount;\n\n\tlockAmount = lockAmount + _amount;\n\n\temit SwapBegin(msg.sender, _token,\n\t\t       registeredTokens[_token].targetToken,\n\t\t       _amount);\n\t\n    }\n\n    /**\n     * @notice Forcefully initiate from player part to\n     * To cancel swapping.\n     * \n     * Warning! Do it only if smartcontrac was hacked.\n     *\n     * TODO!\n     */\n    function dangerBeginSwap(address _token) external view {\n\trequire(registeredTokens[_token].active, \"not active\");\n    }\n\n    function dangerEndSwap(address _token) external view onlyBridge {\n\n    }\n\n    function endSwap(address _user,\n\t\t\t address _token, uint256 _amount)\n\texternal onlyBridge {\n\trequire(_amount <= lockAmount, \"Not enough token.\");\n\trequire(registeredTokens[_token].active, \"not active\");\n\t\n\tIERC20 token = IERC20(_token);\n\n\ttoken.transferFrom(address(this), _user, _amount);\n\n\tdebts[_token][msg.sender] = debts[_token][_user]\n\t    + _amount;\n\n\temit SwapEnd(_user, _token,\n\t\t       registeredTokens[_token].targetToken,\n\t\t       _amount);\n\n    }\n}\n",
  "sourcePath": "/home/alp/smartcontracts/contracts/PakLock.sol",
  "ast": {
    "absolutePath": "/home/alp/smartcontracts/contracts/PakLock.sol",
    "exportedSymbols": {
      "Address": [
        1857
      ],
      "Context": [
        1880
      ],
      "IERC20": [
        1312
      ],
      "IERC20Metadata": [
        1337
      ],
      "Ownable": [
        1234
      ],
      "PakLock": [
        613
      ],
      "PakToken": [
        1124
      ],
      "SafeERC20": [
        1561
      ]
    },
    "id": 614,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 614,
        "sourceUnit": 1313,
        "src": "56:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 614,
        "sourceUnit": 1562,
        "src": "113:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 614,
        "sourceUnit": 1235,
        "src": "179:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alp/smartcontracts/contracts/PakToken.sol",
        "file": "./PakToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 614,
        "sourceUnit": 1125,
        "src": "232:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1234,
              "src": "407:7:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "407:7:0"
          }
        ],
        "contractDependencies": [
          1124,
          1234,
          1880
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "258:128:0",
          "text": " @dev PackLock is a smartcontract, where users are\n locking their tokens that they are swapped to another blockchain"
        },
        "fullyImplemented": true,
        "id": 613,
        "linearizedBaseContracts": [
          613,
          1234,
          1880
        ],
        "name": "PakLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "id": 9,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1561,
              "src": "427:9:0"
            },
            "nodeType": "UsingForDirective",
            "src": "421:27:0",
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1312,
                "src": "441:6:0"
              },
              "referencedDeclaration": 1312,
              "src": "441:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1312",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 13,
              "nodeType": "StructuredDocumentation",
              "src": "454:76:0",
              "text": "@notice PakBridge (PAK) token to use in fee\n for any transaction."
            },
            "functionSelector": "b45ea420",
            "id": 16,
            "mutability": "mutable",
            "name": "pak",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "535:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1312",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1312,
                "src": "535:6:0"
              },
              "referencedDeclaration": 1312,
              "src": "535:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1312",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 17,
              "nodeType": "StructuredDocumentation",
              "src": "559:43:0",
              "text": "@dev the amount to use for registration"
            },
            "id": 19,
            "mutability": "mutable",
            "name": "registerFee",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "607:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 20,
              "nodeType": "StructuredDocumentation",
              "src": "641:153:0",
              "text": "@notice the address of bridge (the cosmos chain)\n representer. This representer ideally should act\n after voting process in the bridge."
            },
            "functionSelector": "e78cea92",
            "id": 22,
            "mutability": "mutable",
            "name": "bridge",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "799:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "799:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PakLock.RegisteredToken",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "targetToken",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "904:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "904:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "1009:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 25,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1009:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RegisteredToken",
            "nodeType": "StructDefinition",
            "scope": 613,
            "src": "878:296:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "1179:32:0",
              "text": "@dev Track registered tokens"
            },
            "id": 33,
            "mutability": "mutable",
            "name": "registeredTokens",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "1216:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
              "typeString": "mapping(address => struct PakLock.RegisteredToken)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1224:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1216:35:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                "typeString": "mapping(address => struct PakLock.RegisteredToken)"
              },
              "valueType": {
                "id": 31,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30,
                  "name": "RegisteredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "1235:15:0"
                },
                "referencedDeclaration": 27,
                "src": "1235:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                  "typeString": "struct PakLock.RegisteredToken"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 34,
              "nodeType": "StructuredDocumentation",
              "src": "1275:21:0",
              "text": "@dev swapping fee"
            },
            "id": 36,
            "mutability": "mutable",
            "name": "swapFee",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "1301:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1301:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 37,
              "nodeType": "StructuredDocumentation",
              "src": "1323:67:0",
              "text": "@dev Locked amount of tokens:\n token => user => balance;"
            },
            "id": 43,
            "mutability": "mutable",
            "name": "locks",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "1395:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 42,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1403:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1395:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 41,
                "keyType": {
                  "id": 39,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1422:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1414:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1433:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 44,
              "nodeType": "StructuredDocumentation",
              "src": "1455:22:0",
              "text": "@dev Debts of user"
            },
            "id": 50,
            "mutability": "mutable",
            "name": "debts",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "1482:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 49,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1490:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1482:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 48,
                "keyType": {
                  "id": 46,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1509:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1501:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 47,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1520:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 51,
              "nodeType": "StructuredDocumentation",
              "src": "1542:41:0",
              "text": "@notice Total amount of locked tokens"
            },
            "functionSelector": "d8df5dc1",
            "id": 53,
            "mutability": "mutable",
            "name": "lockAmount",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "1588:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 52,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1588:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 57,
            "name": "RegisterToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1644:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1643:23:0"
            },
            "src": "1624:43:0"
          },
          {
            "anonymous": false,
            "id": 63,
            "name": "ActivateToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1692:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1719:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1691:51:0"
            },
            "src": "1672:71:0"
          },
          {
            "anonymous": false,
            "id": 75,
            "name": "DeployToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1766:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1798:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1830:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1859:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1859:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1880:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:129:0"
            },
            "src": "1748:147:0"
          },
          {
            "anonymous": false,
            "id": 85,
            "name": "SwapBegin",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1916:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1944:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1944:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1974:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "2004:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1915:104:0"
            },
            "src": "1900:120:0"
          },
          {
            "anonymous": false,
            "id": 95,
            "name": "SwapEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2039:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2039:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2067:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2097:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2127:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2038:104:0"
            },
            "src": "2025:118:0"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2228:204:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 105,
                          "name": "_registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "2239:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2254:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2239:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7265676973746572207a65726f206665652e",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2257:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7e738d7676be13b34372b145e2bd88d92bfcf1affdad2127074c0f0fbc18b49",
                          "typeString": "literal_string \"register zero fee.\""
                        },
                        "value": "register zero fee."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7e738d7676be13b34372b145e2bd88d92bfcf1affdad2127074c0f0fbc18b49",
                          "typeString": "literal_string \"register zero fee.\""
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2231:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2231:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2231:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 112,
                          "name": "_swapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "2289:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2300:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2289:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73776170207a65726f206665652e",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2303:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75c37e5778533d0f429ce02c084d900b04819611e478f95306969b970d47ada5",
                          "typeString": "literal_string \"swap zero fee.\""
                        },
                        "value": "swap zero fee."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75c37e5778533d0f429ce02c084d900b04819611e478f95306969b970d47ada5",
                          "typeString": "literal_string \"swap zero fee.\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2281:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2281:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:39:0"
                },
                {
                  "expression": {
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "pak",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2325:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1312",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 120,
                          "name": "_pakAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "2338:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 119,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "2331:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1312_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2331:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1312",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2325:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1312",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:25:0"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2353:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2367:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2353:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2353:26:0"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2382:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 129,
                      "name": "_swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "2392:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2382:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:18:0"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2404:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 133,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1868,
                        "src": "2413:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2413:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2404:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:21:0"
                }
              ]
            },
            "id": 138,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_pakAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2165:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_registerFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2186:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_swapFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2210:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2164:63:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2228:0:0"
            },
            "scope": 613,
            "src": "2153:279:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "2460:60:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 141,
                          "name": "bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2471:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 142,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1868,
                            "src": "2481:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2481:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2471:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920627269646765",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2495:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b",
                          "typeString": "literal_string \"only bridge\""
                        },
                        "value": "only bridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b",
                          "typeString": "literal_string \"only bridge\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2463:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2463:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:46:0"
                },
                {
                  "id": 148,
                  "nodeType": "PlaceholderStatement",
                  "src": "2512:1:0"
                }
              ]
            },
            "id": 150,
            "name": "onlyBridge",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:2:0"
            },
            "src": "2438:82:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2687:28:0",
              "statements": [
                {
                  "expression": {
                    "id": 156,
                    "name": "registerFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "2697:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 155,
                  "id": 157,
                  "nodeType": "Return",
                  "src": "2690:18:0"
                }
              ]
            },
            "documentation": {
              "id": 151,
              "nodeType": "StructuredDocumentation",
              "src": "2526:99:0",
              "text": " @dev Return amount of PAK token to use for \n registration of a new bridge."
            },
            "functionSelector": "32a58e79",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegisterFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2653:2:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2678:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2677:9:0"
            },
            "scope": 613,
            "src": "2630:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "2843:85:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 168,
                          "name": "_registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "2854:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2869:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2854:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f20726567697374657220666565",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2872:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        },
                        "value": "zero register fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2846:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:46:0"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 174,
                      "name": "registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2895:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 175,
                      "name": "_registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "2909:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2895:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2895:26:0"
                }
              ]
            },
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "2721:50:0",
              "text": " @notice update the register fee"
            },
            "functionSelector": "92be2ab8",
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 165,
                "modifierName": {
                  "id": 164,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "2832:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2832:10:0"
              }
            ],
            "name": "setRegisterFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "_registerFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "2800:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2800:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2799:22:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2843:0:0"
            },
            "scope": 613,
            "src": "2776:152:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "3044:484:0",
              "statements": [
                {
                  "assignments": [
                    187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 187,
                      "mutability": "mutable",
                      "name": "_registeredToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 241,
                      "src": "3054:40:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                        "typeString": "struct PakLock.RegisteredToken"
                      },
                      "typeName": {
                        "id": 186,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 185,
                          "name": "RegisteredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27,
                          "src": "3054:15:0"
                        },
                        "referencedDeclaration": 27,
                        "src": "3054:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 191,
                  "initialValue": {
                    "baseExpression": {
                      "id": 188,
                      "name": "registeredTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3102:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                        "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                      }
                    },
                    "id": 190,
                    "indexExpression": {
                      "id": 189,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "3119:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3102:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                      "typeString": "struct PakLock.RegisteredToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3054:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 193,
                            "name": "_registeredToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "3139:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                              "typeString": "struct PakLock.RegisteredToken storage pointer"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "3139:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3166:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3139:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920616374697661746564",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3175:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        },
                        "value": "already activated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3131:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3131:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "3131:64:0"
                },
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 241,
                      "src": "3266:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3266:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 211,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3305:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3305:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 208,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3325:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          ],
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3317:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3317:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3317:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "pak",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3291:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1271,
                      "src": "3291:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3291:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3266:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 213,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "3343:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 214,
                          "name": "registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "3356:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3343:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20616c6c6f77616e6365",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3369:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f",
                          "typeString": "literal_string \"no allowance\""
                        },
                        "value": "no allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f",
                          "typeString": "literal_string \"no allowance\""
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3335:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3335:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3335:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 222,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3406:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3406:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 224,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3418:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 225,
                        "name": "registerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "3426:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 219,
                        "name": "pak",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3389:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1293,
                      "src": "3389:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3389:49:0"
                },
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 228,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "3450:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3450:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3489:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3481:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3481:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3481:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3450:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 238,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "3514:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 237,
                      "name": "RegisterToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "3500:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "EmitStatement",
                  "src": "3495:26:0"
                }
              ]
            },
            "documentation": {
              "id": 180,
              "nodeType": "StructuredDocumentation",
              "src": "2934:57:0",
              "text": " @notice Register a token to be bridged"
            },
            "functionSelector": "09824a80",
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "3019:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3019:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3018:16:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3044:0:0"
            },
            "scope": 613,
            "src": "2996:532:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "3731:273:0",
              "statements": [
                {
                  "assignments": [
                    254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "_registeredToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "3741:40:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                        "typeString": "struct PakLock.RegisteredToken"
                      },
                      "typeName": {
                        "id": 253,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 252,
                          "name": "RegisteredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27,
                          "src": "3741:15:0"
                        },
                        "referencedDeclaration": 27,
                        "src": "3741:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 258,
                  "initialValue": {
                    "baseExpression": {
                      "id": 255,
                      "name": "registeredTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3789:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                        "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                      }
                    },
                    "id": 257,
                    "indexExpression": {
                      "id": 256,
                      "name": "_source",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "3806:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3789:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                      "typeString": "struct PakLock.RegisteredToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3741:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 260,
                            "name": "_registeredToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "3825:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                              "typeString": "struct PakLock.RegisteredToken storage pointer"
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "3825:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3852:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3825:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920616374697661746564",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3861:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        },
                        "value": "already activated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        }
                      ],
                      "id": 259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3817:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:64:0"
                },
                {
                  "expression": {
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 267,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "3886:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3886:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3912:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3886:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "3886:30:0"
                },
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 273,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "3919:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3919:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 276,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "3950:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3919:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "3919:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 280,
                        "name": "_source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "3980:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 281,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "3989:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 279,
                      "name": "ActivateToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "3966:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3966:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "EmitStatement",
                  "src": "3961:36:0"
                }
              ]
            },
            "documentation": {
              "id": 243,
              "nodeType": "StructuredDocumentation",
              "src": "3534:107:0",
              "text": " @dev Activate registered token by passing the token address\n in another blockchain"
            },
            "functionSelector": "e2eb79e7",
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 250,
                "modifierName": {
                  "id": 249,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "3720:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3720:10:0"
              }
            ],
            "name": "activateRegistration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_source",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3676:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3676:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3693:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3675:34:0"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3731:0:0"
            },
            "scope": 613,
            "src": "3646:358:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "4301:658:0",
              "statements": [
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "4306:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4306:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 307,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 304,
                          "name": "PakToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1124,
                          "src": "4335:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PakToken_$1124_$",
                            "typeString": "type(contract PakToken)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PakToken_$1124_$",
                            "typeString": "type(contract PakToken)"
                          }
                        ],
                        "id": 303,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "4330:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4330:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PakToken_$1124",
                        "typeString": "type(contract PakToken)"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "4330:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4306:51:0"
                },
                {
                  "assignments": [
                    309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 309,
                      "mutability": "mutable",
                      "name": "salt",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "4360:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 308,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4360:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 317,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 313,
                            "name": "_sourceToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "4402:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 314,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "4423:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 311,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "4385:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4385:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4385:51:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 310,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4375:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4375:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4360:77:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4452:82:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4455:76:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4479:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "4490:8:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4500:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4486:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4486:17:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "4515:8:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4509:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4509:15:0"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "4526:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "4471:7:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4471:60:0"
                        },
                        "variableNames": [
                          {
                            "name": "_targetToken",
                            "nodeType": "YulIdentifier",
                            "src": "4455:12:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 299,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4455:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 302,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4490:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 302,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4515:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 309,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4526:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 318,
                  "nodeType": "InlineAssembly",
                  "src": "4443:91:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 320,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "4544:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 322,
                          "indexExpression": {
                            "id": 321,
                            "name": "_targetToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "4561:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4544:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "4544:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c7265616479206465706c6f796564",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4585:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_058dc7fda144838ad249ee582a37501a4a14eb0759e7ef734c29bcc66587de41",
                          "typeString": "literal_string \"already deployed\""
                        },
                        "value": "already deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_058dc7fda144838ad249ee582a37501a4a14eb0759e7ef734c29bcc66587de41",
                          "typeString": "literal_string \"already deployed\""
                        }
                      ],
                      "id": 319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4536:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4536:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4536:68:0"
                },
                {
                  "expression": {
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 327,
                        "name": "registeredTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4608:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                          "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                        }
                      },
                      "id": 329,
                      "indexExpression": {
                        "id": 328,
                        "name": "_targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4625:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4608:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                        "typeString": "struct PakLock.RegisteredToken storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 331,
                          "name": "_sourceToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "4662:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4676:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 330,
                        "name": "RegisteredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "4646:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RegisteredToken_$27_storage_ptr_$",
                          "typeString": "type(struct PakLock.RegisteredToken storage pointer)"
                        }
                      },
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4646:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$27_memory_ptr",
                        "typeString": "struct PakLock.RegisteredToken memory"
                      }
                    },
                    "src": "4608:73:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                      "typeString": "struct PakLock.RegisteredToken storage ref"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4608:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 340,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "4725:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 341,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "4732:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 342,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "4741:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 337,
                            "name": "_targetToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "4694:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 336,
                          "name": "PakToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1124,
                          "src": "4685:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PakToken_$1124_$",
                            "typeString": "type(contract PakToken)"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4685:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PakToken_$1124",
                          "typeString": "contract PakToken"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 678,
                      "src": "4685:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256) external"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4685:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "4685:69:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 346,
                        "name": "_sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "4776:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 347,
                        "name": "_targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4798:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 348,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "4820:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 349,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "4842:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 350,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "4857:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 345,
                      "name": "DeployToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "4764:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,string memory,string memory)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4764:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "EmitStatement",
                  "src": "4759:106:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 354,
                        "name": "_targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4888:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 353,
                      "name": "RegisterToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "4874:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4874:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "EmitStatement",
                  "src": "4869:32:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 358,
                        "name": "_targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4923:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 359,
                        "name": "_sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "4937:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 357,
                      "name": "ActivateToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "4909:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4909:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "EmitStatement",
                  "src": "4904:46:0"
                }
              ]
            },
            "documentation": {
              "id": 286,
              "nodeType": "StructuredDocumentation",
              "src": "4010:106:0",
              "text": " @notice Deploy a new contract that is mapped \n to the token in another blockchain"
            },
            "functionSelector": "08b99e2b",
            "id": 363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 297,
                "modifierName": {
                  "id": 296,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "4257:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4257:10:0"
              }
            ],
            "name": "deployToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "_sourceToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4142:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4142:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4168:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4168:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4194:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4194:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4221:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4221:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4141:104:0"
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "_targetToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4279:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4278:22:0"
            },
            "scope": 613,
            "src": "4121:838:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "5530:24:0",
              "statements": [
                {
                  "expression": {
                    "id": 369,
                    "name": "swapFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "5540:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 368,
                  "id": 370,
                  "nodeType": "Return",
                  "src": "5533:14:0"
                }
              ]
            },
            "documentation": {
              "id": 364,
              "nodeType": "StructuredDocumentation",
              "src": "4997:442:0",
              "text": "\n Swap\n User locks his token in one blockchain.\n Then in another blockchain he gets that amount of token.\n The amount that user gets in another blockchain\n From total locked tokens.\n Risks: If using a token more favorable\n in one of the chains, most users will transfer to that\n chain their tokens. Meaning It will be hard for users\n to transfer to other chain"
            },
            "functionSelector": "d4cadf68",
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5496:2:0"
            },
            "returnParameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "5521:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5521:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5520:9:0"
            },
            "scope": 613,
            "src": "5477:77:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "5670:80:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 381,
                          "name": "_swapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "5681:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5692:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5681:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f20726567697374657220666565",
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5695:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        },
                        "value": "zero register fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        }
                      ],
                      "id": 380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5673:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5673:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "5673:42:0"
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 387,
                      "name": "swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "5725:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 388,
                      "name": "_swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "5735:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5725:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "5725:18:0"
                }
              ]
            },
            "documentation": {
              "id": 373,
              "nodeType": "StructuredDocumentation",
              "src": "5560:46:0",
              "text": " @notice update the swap fee"
            },
            "functionSelector": "34e19907",
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 378,
                "modifierName": {
                  "id": 377,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "5659:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5659:10:0"
              }
            ],
            "name": "setSwapFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "_swapFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "5631:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5631:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5630:18:0"
            },
            "returnParameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5670:0:0"
            },
            "scope": 613,
            "src": "5611:139:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "6002:767:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 401,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "6013:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 403,
                          "indexExpression": {
                            "id": 402,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "6030:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6013:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "6013:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e206e6f74207265676973746572656420796574",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6048:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e87e8ddef9b567a973cecd40be59ab55dba991317b28dbcdd461b54c1dafaf94",
                          "typeString": "literal_string \"token not registered yet\""
                        },
                        "value": "token not registered yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e87e8ddef9b567a973cecd40be59ab55dba991317b28dbcdd461b54c1dafaf94",
                          "typeString": "literal_string \"token not registered yet\""
                        }
                      ],
                      "id": 400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6005:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "6005:70:0"
                },
                {
                  "assignments": [
                    409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 409,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "6079:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 408,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6079:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 419,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 412,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6118:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6118:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 416,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6138:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          ],
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6130:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 414,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6130:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6130:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 410,
                        "name": "pak",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "6104:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1271,
                      "src": "6104:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6104:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6079:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 421,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "6156:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 422,
                          "name": "swapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "6169:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6156:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f207377617020616c6c6f77616e6365",
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6178:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eeb3fb5a6261bb4eabbae10e6d7bc830fc1406585352f7291b699619bdc3382e",
                          "typeString": "literal_string \"no swap allowance\""
                        },
                        "value": "no swap allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eeb3fb5a6261bb4eabbae10e6d7bc830fc1406585352f7291b699619bdc3382e",
                          "typeString": "literal_string \"no swap allowance\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6148:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6148:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "6148:50:0"
                },
                {
                  "assignments": [
                    429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 429,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "6202:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1312",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 428,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 427,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1312,
                          "src": "6202:6:0"
                        },
                        "referencedDeclaration": 1312,
                        "src": "6202:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 431,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "6224:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 430,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "6217:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1312_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6217:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1312",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6202:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 437,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6258:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6258:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 435,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "6242:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1312",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1251,
                            "src": "6242:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6242:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 440,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "6273:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6242:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682062616c616e6365",
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6284:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        },
                        "value": "not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        }
                      ],
                      "id": 434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6234:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6234:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "6234:71:0"
                },
                {
                  "assignments": [
                    446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 446,
                      "mutability": "mutable",
                      "name": "tokenAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "6309:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6309:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6355:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6355:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 453,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6375:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          ],
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6367:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 451,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6367:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6367:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 447,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "6339:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1271,
                      "src": "6339:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6339:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6309:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 458,
                          "name": "tokenAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "6393:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 459,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "6411:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6393:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f206c6f636b20616c6c6f77616e6365",
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6422:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72daef8bfb2fda79cf45f117092d47ebeea7f9889e6c0e4d46efce0f89de65f1",
                          "typeString": "literal_string \"no lock allowance\""
                        },
                        "value": "no lock allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72daef8bfb2fda79cf45f117092d47ebeea7f9889e6c0e4d46efce0f89de65f1",
                          "typeString": "literal_string \"no lock allowance\""
                        }
                      ],
                      "id": 457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6385:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6385:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "6385:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 467,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6463:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6463:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 469,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "6475:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 470,
                        "name": "swapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "6483:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 464,
                        "name": "pak",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "6446:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1293,
                      "src": "6446:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6446:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "6446:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 476,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6513:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6513:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 480,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6533:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          ],
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6525:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 478,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6525:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6525:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 482,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6540:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 473,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "6494:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1293,
                      "src": "6494:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6494:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "6494:54:0"
                },
                {
                  "expression": {
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 485,
                          "name": "locks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6552:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 489,
                        "indexExpression": {
                          "id": 486,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "6558:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6552:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 490,
                      "indexExpression": {
                        "expression": {
                          "id": 487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6566:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6566:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6552:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 491,
                            "name": "locks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "6585:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 493,
                          "indexExpression": {
                            "id": 492,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "6591:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6585:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 496,
                        "indexExpression": {
                          "expression": {
                            "id": 494,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6599:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6599:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6585:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 497,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6613:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6585:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6552:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "6552:68:0"
                },
                {
                  "expression": {
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 501,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "6624:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 502,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "6637:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 503,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6650:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6637:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6624:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "6624:33:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6676:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6676:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 510,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "6688:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 511,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "6705:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 513,
                          "indexExpression": {
                            "id": 512,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "6722:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6705:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "targetToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "6705:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 515,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6752:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 507,
                      "name": "SwapBegin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "6666:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6666:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "EmitStatement",
                  "src": "6661:99:0"
                }
              ]
            },
            "documentation": {
              "id": 393,
              "nodeType": "StructuredDocumentation",
              "src": "5760:176:0",
              "text": " @notice Lock the Tokens that will be \n unlocked in another blockchain\n \n requirements:\n token to lock should be registered and active"
            },
            "functionSelector": "95e17d9f",
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginSwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "5960:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5960:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "5976:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5976:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5959:33:0"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6002:0:0"
            },
            "scope": 613,
            "src": "5941:828:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 533,
              "nodeType": "Block",
              "src": "7011:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 526,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "7022:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 528,
                          "indexExpression": {
                            "id": 527,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "7039:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7022:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "7022:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420616374697665",
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7055:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                          "typeString": "literal_string \"not active\""
                        },
                        "value": "not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                          "typeString": "literal_string \"not active\""
                        }
                      ],
                      "id": 525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7014:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7014:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "7014:54:0"
                }
              ]
            },
            "documentation": {
              "id": 520,
              "nodeType": "StructuredDocumentation",
              "src": "6775:176:0",
              "text": " @notice Forcefully initiate from player part to\n To cancel swapping.\n \n Warning! Do it only if smartcontrac was hacked.\n TODO!"
            },
            "functionSelector": "f262522f",
            "id": 534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dangerBeginSwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 534,
                  "src": "6981:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6981:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6980:16:0"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7011:0:0"
            },
            "scope": 613,
            "src": "6956:119:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "7145:8:0",
              "statements": []
            },
            "functionSelector": "3d57eeb2",
            "id": 542,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 539,
                "modifierName": {
                  "id": 538,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "7134:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7134:10:0"
              }
            ],
            "name": "dangerEndSwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 542,
                  "src": "7104:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7104:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7103:16:0"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7145:0:0"
            },
            "scope": 613,
            "src": "7081:72:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "7249:369:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 554,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "7260:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 555,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "7271:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7260:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e2e",
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7283:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbfd0b00878eb5275bb81d664c66c59f86b8b1ee9527cfdec4595a49017c3667",
                          "typeString": "literal_string \"Not enough token.\""
                        },
                        "value": "Not enough token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbfd0b00878eb5275bb81d664c66c59f86b8b1ee9527cfdec4595a49017c3667",
                          "typeString": "literal_string \"Not enough token.\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7252:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7252:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "7252:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 561,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "7314:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 563,
                          "indexExpression": {
                            "id": 562,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "7331:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7314:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "7314:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420616374697665",
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7347:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                          "typeString": "literal_string \"not active\""
                        },
                        "value": "not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                          "typeString": "literal_string \"not active\""
                        }
                      ],
                      "id": 560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7306:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7306:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 567,
                  "nodeType": "ExpressionStatement",
                  "src": "7306:54:0"
                },
                {
                  "assignments": [
                    570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 611,
                      "src": "7365:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1312",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 569,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 568,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1312,
                          "src": "7365:6:0"
                        },
                        "referencedDeclaration": 1312,
                        "src": "7365:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 574,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 572,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "7387:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 571,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "7380:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1312_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7380:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1312",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7365:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 580,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7425:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          ],
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7417:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7417:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7417:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 582,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "7432:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 583,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "7439:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 575,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 570,
                        "src": "7398:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1293,
                      "src": "7398:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7398:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "7398:49:0"
                },
                {
                  "expression": {
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 586,
                          "name": "debts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "7451:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 590,
                        "indexExpression": {
                          "id": 587,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "7457:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7451:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 591,
                      "indexExpression": {
                        "expression": {
                          "id": 588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7465:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7465:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7451:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 592,
                            "name": "debts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "7479:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 594,
                          "indexExpression": {
                            "id": 593,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "7485:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7479:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 596,
                        "indexExpression": {
                          "id": 595,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "7493:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7479:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 597,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "7507:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7479:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7451:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "7451:63:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 602,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "7531:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 603,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "7538:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 604,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "7555:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 606,
                          "indexExpression": {
                            "id": 605,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "7572:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7555:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "targetToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "7555:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 608,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "7602:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 601,
                      "name": "SwapEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "7523:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7523:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "EmitStatement",
                  "src": "7518:92:0"
                }
              ]
            },
            "functionSelector": "2332e8b2",
            "id": 612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 551,
                "modifierName": {
                  "id": 550,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "7238:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7238:10:0"
              }
            ],
            "name": "endSwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "7176:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7176:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "7195:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7195:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "7211:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7211:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7175:52:0"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7249:0:0"
            },
            "scope": 613,
            "src": "7159:459:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 614,
        "src": "387:7233:0"
      }
    ],
    "src": "32:7589:0"
  },
  "legacyAST": {
    "absolutePath": "/home/alp/smartcontracts/contracts/PakLock.sol",
    "exportedSymbols": {
      "Address": [
        1857
      ],
      "Context": [
        1880
      ],
      "IERC20": [
        1312
      ],
      "IERC20Metadata": [
        1337
      ],
      "Ownable": [
        1234
      ],
      "PakLock": [
        613
      ],
      "PakToken": [
        1124
      ],
      "SafeERC20": [
        1561
      ]
    },
    "id": 614,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 614,
        "sourceUnit": 1313,
        "src": "56:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 614,
        "sourceUnit": 1562,
        "src": "113:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 614,
        "sourceUnit": 1235,
        "src": "179:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alp/smartcontracts/contracts/PakToken.sol",
        "file": "./PakToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 614,
        "sourceUnit": 1125,
        "src": "232:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1234,
              "src": "407:7:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "407:7:0"
          }
        ],
        "contractDependencies": [
          1124,
          1234,
          1880
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "258:128:0",
          "text": " @dev PackLock is a smartcontract, where users are\n locking their tokens that they are swapped to another blockchain"
        },
        "fullyImplemented": true,
        "id": 613,
        "linearizedBaseContracts": [
          613,
          1234,
          1880
        ],
        "name": "PakLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "id": 9,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1561,
              "src": "427:9:0"
            },
            "nodeType": "UsingForDirective",
            "src": "421:27:0",
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1312,
                "src": "441:6:0"
              },
              "referencedDeclaration": 1312,
              "src": "441:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1312",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 13,
              "nodeType": "StructuredDocumentation",
              "src": "454:76:0",
              "text": "@notice PakBridge (PAK) token to use in fee\n for any transaction."
            },
            "functionSelector": "b45ea420",
            "id": 16,
            "mutability": "mutable",
            "name": "pak",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "535:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1312",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 15,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1312,
                "src": "535:6:0"
              },
              "referencedDeclaration": 1312,
              "src": "535:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1312",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 17,
              "nodeType": "StructuredDocumentation",
              "src": "559:43:0",
              "text": "@dev the amount to use for registration"
            },
            "id": 19,
            "mutability": "mutable",
            "name": "registerFee",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "607:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 20,
              "nodeType": "StructuredDocumentation",
              "src": "641:153:0",
              "text": "@notice the address of bridge (the cosmos chain)\n representer. This representer ideally should act\n after voting process in the bridge."
            },
            "functionSelector": "e78cea92",
            "id": 22,
            "mutability": "mutable",
            "name": "bridge",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "799:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "799:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PakLock.RegisteredToken",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "targetToken",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "904:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "904:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "1009:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 25,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1009:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RegisteredToken",
            "nodeType": "StructDefinition",
            "scope": 613,
            "src": "878:296:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "1179:32:0",
              "text": "@dev Track registered tokens"
            },
            "id": 33,
            "mutability": "mutable",
            "name": "registeredTokens",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "1216:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
              "typeString": "mapping(address => struct PakLock.RegisteredToken)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1224:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1216:35:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                "typeString": "mapping(address => struct PakLock.RegisteredToken)"
              },
              "valueType": {
                "id": 31,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30,
                  "name": "RegisteredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "1235:15:0"
                },
                "referencedDeclaration": 27,
                "src": "1235:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                  "typeString": "struct PakLock.RegisteredToken"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 34,
              "nodeType": "StructuredDocumentation",
              "src": "1275:21:0",
              "text": "@dev swapping fee"
            },
            "id": 36,
            "mutability": "mutable",
            "name": "swapFee",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "1301:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1301:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 37,
              "nodeType": "StructuredDocumentation",
              "src": "1323:67:0",
              "text": "@dev Locked amount of tokens:\n token => user => balance;"
            },
            "id": 43,
            "mutability": "mutable",
            "name": "locks",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "1395:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 42,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1403:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1395:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 41,
                "keyType": {
                  "id": 39,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1422:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1414:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1433:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 44,
              "nodeType": "StructuredDocumentation",
              "src": "1455:22:0",
              "text": "@dev Debts of user"
            },
            "id": 50,
            "mutability": "mutable",
            "name": "debts",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "1482:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 49,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1490:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1482:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 48,
                "keyType": {
                  "id": 46,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1509:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1501:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 47,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1520:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 51,
              "nodeType": "StructuredDocumentation",
              "src": "1542:41:0",
              "text": "@notice Total amount of locked tokens"
            },
            "functionSelector": "d8df5dc1",
            "id": 53,
            "mutability": "mutable",
            "name": "lockAmount",
            "nodeType": "VariableDeclaration",
            "scope": 613,
            "src": "1588:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 52,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1588:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 57,
            "name": "RegisterToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1644:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1643:23:0"
            },
            "src": "1624:43:0"
          },
          {
            "anonymous": false,
            "id": 63,
            "name": "ActivateToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1692:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1719:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1691:51:0"
            },
            "src": "1672:71:0"
          },
          {
            "anonymous": false,
            "id": 75,
            "name": "DeployToken",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1766:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1798:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1830:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1859:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1859:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1880:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:129:0"
            },
            "src": "1748:147:0"
          },
          {
            "anonymous": false,
            "id": 85,
            "name": "SwapBegin",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1916:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1944:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1944:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1974:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "2004:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1915:104:0"
            },
            "src": "1900:120:0"
          },
          {
            "anonymous": false,
            "id": 95,
            "name": "SwapEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2039:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2039:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2067:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2097:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2127:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2038:104:0"
            },
            "src": "2025:118:0"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2228:204:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 105,
                          "name": "_registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "2239:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2254:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2239:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7265676973746572207a65726f206665652e",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2257:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7e738d7676be13b34372b145e2bd88d92bfcf1affdad2127074c0f0fbc18b49",
                          "typeString": "literal_string \"register zero fee.\""
                        },
                        "value": "register zero fee."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7e738d7676be13b34372b145e2bd88d92bfcf1affdad2127074c0f0fbc18b49",
                          "typeString": "literal_string \"register zero fee.\""
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2231:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2231:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2231:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 112,
                          "name": "_swapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "2289:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2300:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2289:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73776170207a65726f206665652e",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2303:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75c37e5778533d0f429ce02c084d900b04819611e478f95306969b970d47ada5",
                          "typeString": "literal_string \"swap zero fee.\""
                        },
                        "value": "swap zero fee."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75c37e5778533d0f429ce02c084d900b04819611e478f95306969b970d47ada5",
                          "typeString": "literal_string \"swap zero fee.\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2281:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2281:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:39:0"
                },
                {
                  "expression": {
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "pak",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "2325:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1312",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 120,
                          "name": "_pakAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "2338:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 119,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "2331:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1312_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2331:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1312",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2325:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1312",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:25:0"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2353:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2367:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2353:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2353:26:0"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2382:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 129,
                      "name": "_swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "2392:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2382:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:18:0"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2404:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 133,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1868,
                        "src": "2413:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2413:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2404:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:21:0"
                }
              ]
            },
            "id": 138,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_pakAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2165:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_registerFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2186:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_swapFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2210:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2164:63:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2228:0:0"
            },
            "scope": 613,
            "src": "2153:279:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "2460:60:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 141,
                          "name": "bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2471:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 142,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1868,
                            "src": "2481:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2481:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2471:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920627269646765",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2495:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b",
                          "typeString": "literal_string \"only bridge\""
                        },
                        "value": "only bridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b",
                          "typeString": "literal_string \"only bridge\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2463:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2463:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:46:0"
                },
                {
                  "id": 148,
                  "nodeType": "PlaceholderStatement",
                  "src": "2512:1:0"
                }
              ]
            },
            "id": 150,
            "name": "onlyBridge",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:2:0"
            },
            "src": "2438:82:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2687:28:0",
              "statements": [
                {
                  "expression": {
                    "id": 156,
                    "name": "registerFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "2697:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 155,
                  "id": 157,
                  "nodeType": "Return",
                  "src": "2690:18:0"
                }
              ]
            },
            "documentation": {
              "id": 151,
              "nodeType": "StructuredDocumentation",
              "src": "2526:99:0",
              "text": " @dev Return amount of PAK token to use for \n registration of a new bridge."
            },
            "functionSelector": "32a58e79",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegisterFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2653:2:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2678:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2677:9:0"
            },
            "scope": 613,
            "src": "2630:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "2843:85:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 168,
                          "name": "_registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "2854:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2869:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2854:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f20726567697374657220666565",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2872:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        },
                        "value": "zero register fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2846:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:46:0"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 174,
                      "name": "registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2895:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 175,
                      "name": "_registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "2909:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2895:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2895:26:0"
                }
              ]
            },
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "2721:50:0",
              "text": " @notice update the register fee"
            },
            "functionSelector": "92be2ab8",
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 165,
                "modifierName": {
                  "id": 164,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "2832:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2832:10:0"
              }
            ],
            "name": "setRegisterFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "_registerFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "2800:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2800:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2799:22:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2843:0:0"
            },
            "scope": 613,
            "src": "2776:152:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "3044:484:0",
              "statements": [
                {
                  "assignments": [
                    187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 187,
                      "mutability": "mutable",
                      "name": "_registeredToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 241,
                      "src": "3054:40:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                        "typeString": "struct PakLock.RegisteredToken"
                      },
                      "typeName": {
                        "id": 186,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 185,
                          "name": "RegisteredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27,
                          "src": "3054:15:0"
                        },
                        "referencedDeclaration": 27,
                        "src": "3054:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 191,
                  "initialValue": {
                    "baseExpression": {
                      "id": 188,
                      "name": "registeredTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3102:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                        "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                      }
                    },
                    "id": 190,
                    "indexExpression": {
                      "id": 189,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "3119:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3102:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                      "typeString": "struct PakLock.RegisteredToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3054:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 193,
                            "name": "_registeredToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "3139:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                              "typeString": "struct PakLock.RegisteredToken storage pointer"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "3139:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3166:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3139:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920616374697661746564",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3175:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        },
                        "value": "already activated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3131:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3131:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "3131:64:0"
                },
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 241,
                      "src": "3266:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3266:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 211,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3305:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3305:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 208,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3325:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          ],
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3317:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3317:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3317:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "pak",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3291:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1271,
                      "src": "3291:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3291:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3266:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 213,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "3343:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 214,
                          "name": "registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "3356:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3343:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20616c6c6f77616e6365",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3369:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f",
                          "typeString": "literal_string \"no allowance\""
                        },
                        "value": "no allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f",
                          "typeString": "literal_string \"no allowance\""
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3335:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3335:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3335:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 222,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3406:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3406:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 224,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3418:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 225,
                        "name": "registerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "3426:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 219,
                        "name": "pak",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3389:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1293,
                      "src": "3389:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "3389:49:0"
                },
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 228,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "3450:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3450:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3489:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3481:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3481:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3481:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3450:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 238,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "3514:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 237,
                      "name": "RegisterToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "3500:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "EmitStatement",
                  "src": "3495:26:0"
                }
              ]
            },
            "documentation": {
              "id": 180,
              "nodeType": "StructuredDocumentation",
              "src": "2934:57:0",
              "text": " @notice Register a token to be bridged"
            },
            "functionSelector": "09824a80",
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "3019:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3019:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3018:16:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3044:0:0"
            },
            "scope": 613,
            "src": "2996:532:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "3731:273:0",
              "statements": [
                {
                  "assignments": [
                    254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "_registeredToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "3741:40:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                        "typeString": "struct PakLock.RegisteredToken"
                      },
                      "typeName": {
                        "id": 253,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 252,
                          "name": "RegisteredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27,
                          "src": "3741:15:0"
                        },
                        "referencedDeclaration": 27,
                        "src": "3741:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 258,
                  "initialValue": {
                    "baseExpression": {
                      "id": 255,
                      "name": "registeredTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3789:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                        "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                      }
                    },
                    "id": 257,
                    "indexExpression": {
                      "id": 256,
                      "name": "_source",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "3806:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3789:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                      "typeString": "struct PakLock.RegisteredToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3741:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 260,
                            "name": "_registeredToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "3825:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                              "typeString": "struct PakLock.RegisteredToken storage pointer"
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "3825:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3852:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3825:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920616374697661746564",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3861:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        },
                        "value": "already activated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        }
                      ],
                      "id": 259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3817:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:64:0"
                },
                {
                  "expression": {
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 267,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "3886:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3886:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3912:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3886:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "3886:30:0"
                },
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 273,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "3919:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$27_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3919:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 276,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "3950:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3919:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "3919:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 280,
                        "name": "_source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "3980:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 281,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "3989:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 279,
                      "name": "ActivateToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "3966:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3966:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "EmitStatement",
                  "src": "3961:36:0"
                }
              ]
            },
            "documentation": {
              "id": 243,
              "nodeType": "StructuredDocumentation",
              "src": "3534:107:0",
              "text": " @dev Activate registered token by passing the token address\n in another blockchain"
            },
            "functionSelector": "e2eb79e7",
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 250,
                "modifierName": {
                  "id": 249,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "3720:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3720:10:0"
              }
            ],
            "name": "activateRegistration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_source",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3676:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3676:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3693:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3675:34:0"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3731:0:0"
            },
            "scope": 613,
            "src": "3646:358:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "4301:658:0",
              "statements": [
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "4306:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4306:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 307,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 304,
                          "name": "PakToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1124,
                          "src": "4335:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PakToken_$1124_$",
                            "typeString": "type(contract PakToken)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PakToken_$1124_$",
                            "typeString": "type(contract PakToken)"
                          }
                        ],
                        "id": 303,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "4330:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4330:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PakToken_$1124",
                        "typeString": "type(contract PakToken)"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "4330:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4306:51:0"
                },
                {
                  "assignments": [
                    309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 309,
                      "mutability": "mutable",
                      "name": "salt",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "4360:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 308,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4360:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 317,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 313,
                            "name": "_sourceToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "4402:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 314,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "4423:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 311,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "4385:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4385:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4385:51:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 310,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4375:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4375:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4360:77:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4452:82:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4455:76:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4479:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "4490:8:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4500:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4486:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4486:17:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "4515:8:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4509:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4509:15:0"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "4526:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "4471:7:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4471:60:0"
                        },
                        "variableNames": [
                          {
                            "name": "_targetToken",
                            "nodeType": "YulIdentifier",
                            "src": "4455:12:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 299,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4455:12:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 302,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4490:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 302,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4515:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 309,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4526:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 318,
                  "nodeType": "InlineAssembly",
                  "src": "4443:91:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 320,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "4544:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 322,
                          "indexExpression": {
                            "id": 321,
                            "name": "_targetToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "4561:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4544:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "4544:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c7265616479206465706c6f796564",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4585:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_058dc7fda144838ad249ee582a37501a4a14eb0759e7ef734c29bcc66587de41",
                          "typeString": "literal_string \"already deployed\""
                        },
                        "value": "already deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_058dc7fda144838ad249ee582a37501a4a14eb0759e7ef734c29bcc66587de41",
                          "typeString": "literal_string \"already deployed\""
                        }
                      ],
                      "id": 319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4536:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4536:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4536:68:0"
                },
                {
                  "expression": {
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 327,
                        "name": "registeredTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4608:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                          "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                        }
                      },
                      "id": 329,
                      "indexExpression": {
                        "id": 328,
                        "name": "_targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4625:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4608:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                        "typeString": "struct PakLock.RegisteredToken storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 331,
                          "name": "_sourceToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "4662:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4676:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 330,
                        "name": "RegisteredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "4646:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RegisteredToken_$27_storage_ptr_$",
                          "typeString": "type(struct PakLock.RegisteredToken storage pointer)"
                        }
                      },
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4646:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$27_memory_ptr",
                        "typeString": "struct PakLock.RegisteredToken memory"
                      }
                    },
                    "src": "4608:73:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                      "typeString": "struct PakLock.RegisteredToken storage ref"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4608:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 340,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "4725:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 341,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "4732:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 342,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "4741:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 337,
                            "name": "_targetToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "4694:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 336,
                          "name": "PakToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1124,
                          "src": "4685:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PakToken_$1124_$",
                            "typeString": "type(contract PakToken)"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4685:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PakToken_$1124",
                          "typeString": "contract PakToken"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 678,
                      "src": "4685:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256) external"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4685:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "4685:69:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 346,
                        "name": "_sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "4776:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 347,
                        "name": "_targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4798:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 348,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "4820:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 349,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "4842:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 350,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "4857:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 345,
                      "name": "DeployToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "4764:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,string memory,string memory)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4764:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "EmitStatement",
                  "src": "4759:106:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 354,
                        "name": "_targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4888:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 353,
                      "name": "RegisterToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "4874:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4874:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "EmitStatement",
                  "src": "4869:32:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 358,
                        "name": "_targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4923:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 359,
                        "name": "_sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "4937:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 357,
                      "name": "ActivateToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "4909:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4909:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "EmitStatement",
                  "src": "4904:46:0"
                }
              ]
            },
            "documentation": {
              "id": 286,
              "nodeType": "StructuredDocumentation",
              "src": "4010:106:0",
              "text": " @notice Deploy a new contract that is mapped \n to the token in another blockchain"
            },
            "functionSelector": "08b99e2b",
            "id": 363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 297,
                "modifierName": {
                  "id": 296,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "4257:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4257:10:0"
              }
            ],
            "name": "deployToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "_sourceToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4142:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4142:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4168:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4168:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4194:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4194:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4221:23:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4221:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4141:104:0"
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "_targetToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "4279:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4278:22:0"
            },
            "scope": 613,
            "src": "4121:838:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "5530:24:0",
              "statements": [
                {
                  "expression": {
                    "id": 369,
                    "name": "swapFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "5540:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 368,
                  "id": 370,
                  "nodeType": "Return",
                  "src": "5533:14:0"
                }
              ]
            },
            "documentation": {
              "id": 364,
              "nodeType": "StructuredDocumentation",
              "src": "4997:442:0",
              "text": "\n Swap\n User locks his token in one blockchain.\n Then in another blockchain he gets that amount of token.\n The amount that user gets in another blockchain\n From total locked tokens.\n Risks: If using a token more favorable\n in one of the chains, most users will transfer to that\n chain their tokens. Meaning It will be hard for users\n to transfer to other chain"
            },
            "functionSelector": "d4cadf68",
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5496:2:0"
            },
            "returnParameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "5521:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5521:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5520:9:0"
            },
            "scope": 613,
            "src": "5477:77:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "5670:80:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 381,
                          "name": "_swapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "5681:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5692:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5681:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f20726567697374657220666565",
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5695:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        },
                        "value": "zero register fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        }
                      ],
                      "id": 380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5673:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5673:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "5673:42:0"
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 387,
                      "name": "swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "5725:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 388,
                      "name": "_swapFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "5735:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5725:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "5725:18:0"
                }
              ]
            },
            "documentation": {
              "id": 373,
              "nodeType": "StructuredDocumentation",
              "src": "5560:46:0",
              "text": " @notice update the swap fee"
            },
            "functionSelector": "34e19907",
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 378,
                "modifierName": {
                  "id": 377,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "5659:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5659:10:0"
              }
            ],
            "name": "setSwapFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "_swapFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "5631:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5631:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5630:18:0"
            },
            "returnParameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5670:0:0"
            },
            "scope": 613,
            "src": "5611:139:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "6002:767:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 401,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "6013:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 403,
                          "indexExpression": {
                            "id": 402,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "6030:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6013:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "6013:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e206e6f74207265676973746572656420796574",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6048:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e87e8ddef9b567a973cecd40be59ab55dba991317b28dbcdd461b54c1dafaf94",
                          "typeString": "literal_string \"token not registered yet\""
                        },
                        "value": "token not registered yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e87e8ddef9b567a973cecd40be59ab55dba991317b28dbcdd461b54c1dafaf94",
                          "typeString": "literal_string \"token not registered yet\""
                        }
                      ],
                      "id": 400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6005:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "6005:70:0"
                },
                {
                  "assignments": [
                    409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 409,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "6079:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 408,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6079:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 419,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 412,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6118:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6118:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 416,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6138:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          ],
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6130:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 414,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6130:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6130:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 410,
                        "name": "pak",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "6104:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1271,
                      "src": "6104:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6104:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6079:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 421,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "6156:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 422,
                          "name": "swapFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "6169:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6156:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f207377617020616c6c6f77616e6365",
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6178:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eeb3fb5a6261bb4eabbae10e6d7bc830fc1406585352f7291b699619bdc3382e",
                          "typeString": "literal_string \"no swap allowance\""
                        },
                        "value": "no swap allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eeb3fb5a6261bb4eabbae10e6d7bc830fc1406585352f7291b699619bdc3382e",
                          "typeString": "literal_string \"no swap allowance\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6148:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6148:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "6148:50:0"
                },
                {
                  "assignments": [
                    429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 429,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "6202:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1312",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 428,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 427,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1312,
                          "src": "6202:6:0"
                        },
                        "referencedDeclaration": 1312,
                        "src": "6202:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 431,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "6224:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 430,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "6217:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1312_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6217:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1312",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6202:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 437,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6258:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6258:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 435,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "6242:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1312",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1251,
                            "src": "6242:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6242:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 440,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "6273:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6242:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682062616c616e6365",
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6284:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        },
                        "value": "not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        }
                      ],
                      "id": 434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6234:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6234:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "6234:71:0"
                },
                {
                  "assignments": [
                    446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 446,
                      "mutability": "mutable",
                      "name": "tokenAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "6309:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6309:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6355:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6355:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 453,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6375:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          ],
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6367:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 451,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6367:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6367:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 447,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "6339:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1271,
                      "src": "6339:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6339:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6309:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 458,
                          "name": "tokenAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "6393:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 459,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "6411:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6393:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f206c6f636b20616c6c6f77616e6365",
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6422:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72daef8bfb2fda79cf45f117092d47ebeea7f9889e6c0e4d46efce0f89de65f1",
                          "typeString": "literal_string \"no lock allowance\""
                        },
                        "value": "no lock allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72daef8bfb2fda79cf45f117092d47ebeea7f9889e6c0e4d46efce0f89de65f1",
                          "typeString": "literal_string \"no lock allowance\""
                        }
                      ],
                      "id": 457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6385:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6385:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "6385:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 467,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6463:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6463:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 469,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "6475:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 470,
                        "name": "swapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "6483:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 464,
                        "name": "pak",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "6446:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1293,
                      "src": "6446:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6446:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "6446:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 476,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6513:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6513:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 480,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6533:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          ],
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6525:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 478,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6525:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6525:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 482,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6540:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 473,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "6494:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1293,
                      "src": "6494:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6494:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "6494:54:0"
                },
                {
                  "expression": {
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 485,
                          "name": "locks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6552:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 489,
                        "indexExpression": {
                          "id": 486,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "6558:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6552:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 490,
                      "indexExpression": {
                        "expression": {
                          "id": 487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6566:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6566:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6552:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 491,
                            "name": "locks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "6585:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 493,
                          "indexExpression": {
                            "id": 492,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "6591:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6585:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 496,
                        "indexExpression": {
                          "expression": {
                            "id": 494,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6599:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6599:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6585:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 497,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6613:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6585:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6552:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "6552:68:0"
                },
                {
                  "expression": {
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 501,
                      "name": "lockAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "6624:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 502,
                        "name": "lockAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "6637:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 503,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6650:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6637:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6624:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "6624:33:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6676:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6676:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 510,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "6688:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 511,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "6705:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 513,
                          "indexExpression": {
                            "id": 512,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "6722:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6705:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "targetToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "6705:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 515,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6752:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 507,
                      "name": "SwapBegin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "6666:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6666:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "EmitStatement",
                  "src": "6661:99:0"
                }
              ]
            },
            "documentation": {
              "id": 393,
              "nodeType": "StructuredDocumentation",
              "src": "5760:176:0",
              "text": " @notice Lock the Tokens that will be \n unlocked in another blockchain\n \n requirements:\n token to lock should be registered and active"
            },
            "functionSelector": "95e17d9f",
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beginSwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "5960:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5960:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "5976:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5976:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5959:33:0"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6002:0:0"
            },
            "scope": 613,
            "src": "5941:828:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 533,
              "nodeType": "Block",
              "src": "7011:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 526,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "7022:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 528,
                          "indexExpression": {
                            "id": 527,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "7039:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7022:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "7022:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420616374697665",
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7055:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                          "typeString": "literal_string \"not active\""
                        },
                        "value": "not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                          "typeString": "literal_string \"not active\""
                        }
                      ],
                      "id": 525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7014:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7014:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "7014:54:0"
                }
              ]
            },
            "documentation": {
              "id": 520,
              "nodeType": "StructuredDocumentation",
              "src": "6775:176:0",
              "text": " @notice Forcefully initiate from player part to\n To cancel swapping.\n \n Warning! Do it only if smartcontrac was hacked.\n TODO!"
            },
            "functionSelector": "f262522f",
            "id": 534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dangerBeginSwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 534,
                  "src": "6981:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6981:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6980:16:0"
            },
            "returnParameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7011:0:0"
            },
            "scope": 613,
            "src": "6956:119:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "7145:8:0",
              "statements": []
            },
            "functionSelector": "3d57eeb2",
            "id": 542,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 539,
                "modifierName": {
                  "id": 538,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "7134:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7134:10:0"
              }
            ],
            "name": "dangerEndSwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 542,
                  "src": "7104:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7104:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7103:16:0"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7145:0:0"
            },
            "scope": 613,
            "src": "7081:72:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "7249:369:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 554,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "7260:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 555,
                          "name": "lockAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "7271:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7260:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e2e",
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7283:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbfd0b00878eb5275bb81d664c66c59f86b8b1ee9527cfdec4595a49017c3667",
                          "typeString": "literal_string \"Not enough token.\""
                        },
                        "value": "Not enough token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbfd0b00878eb5275bb81d664c66c59f86b8b1ee9527cfdec4595a49017c3667",
                          "typeString": "literal_string \"Not enough token.\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7252:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7252:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "7252:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 561,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "7314:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 563,
                          "indexExpression": {
                            "id": 562,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "7331:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7314:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "7314:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420616374697665",
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7347:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                          "typeString": "literal_string \"not active\""
                        },
                        "value": "not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_374887c79e5a9f3adf9601b701978b870ca80533f58f38de7839ddf877b30a77",
                          "typeString": "literal_string \"not active\""
                        }
                      ],
                      "id": 560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7306:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7306:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 567,
                  "nodeType": "ExpressionStatement",
                  "src": "7306:54:0"
                },
                {
                  "assignments": [
                    570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 611,
                      "src": "7365:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1312",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 569,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 568,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1312,
                          "src": "7365:6:0"
                        },
                        "referencedDeclaration": 1312,
                        "src": "7365:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 574,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 572,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "7387:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 571,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "7380:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1312_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7380:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1312",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7365:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 580,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7425:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PakLock_$613",
                              "typeString": "contract PakLock"
                            }
                          ],
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7417:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7417:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7417:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 582,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "7432:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 583,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "7439:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 575,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 570,
                        "src": "7398:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1312",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1293,
                      "src": "7398:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7398:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "7398:49:0"
                },
                {
                  "expression": {
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 586,
                          "name": "debts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "7451:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 590,
                        "indexExpression": {
                          "id": 587,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "7457:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7451:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 591,
                      "indexExpression": {
                        "expression": {
                          "id": 588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7465:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7465:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7451:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 592,
                            "name": "debts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "7479:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 594,
                          "indexExpression": {
                            "id": 593,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "7485:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7479:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 596,
                        "indexExpression": {
                          "id": 595,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "7493:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7479:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 597,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "7507:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7479:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7451:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "7451:63:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 602,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "7531:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 603,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "7538:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 604,
                            "name": "registeredTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "7555:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$27_storage_$",
                              "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                            }
                          },
                          "id": 606,
                          "indexExpression": {
                            "id": 605,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "7572:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7555:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredToken_$27_storage",
                            "typeString": "struct PakLock.RegisteredToken storage ref"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "targetToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "7555:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 608,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "7602:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 601,
                      "name": "SwapEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "7523:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7523:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "EmitStatement",
                  "src": "7518:92:0"
                }
              ]
            },
            "functionSelector": "2332e8b2",
            "id": 612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 551,
                "modifierName": {
                  "id": 550,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 150,
                  "src": "7238:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7238:10:0"
              }
            ],
            "name": "endSwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "7176:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7176:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "7195:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7195:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "7211:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7211:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7175:52:0"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7249:0:0"
            },
            "scope": 613,
            "src": "7159:459:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 614,
        "src": "387:7233:0"
      }
    ],
    "src": "32:7589:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x9b57937138c593cDbacf51Efc4Be2ec4980be5F3",
      "transactionHash": "0x3e72f802520b0d810b9a9cfe784bfee958e2f19ff24e6b9b2a048b503529be18"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-02T13:21:04.161Z",
  "devdoc": {
    "details": "PackLock is a smartcontract, where users are locking their tokens that they are swapped to another blockchain",
    "kind": "dev",
    "methods": {
      "activateRegistration(address,address)": {
        "details": "Activate registered token by passing the token address in another blockchain"
      },
      "getRegisterFee()": {
        "details": "Return amount of PAK token to use for  registration of a new bridge."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "debts": {
        "details": "Debts of user"
      },
      "locks": {
        "details": "Locked amount of tokens: token => user => balance;"
      },
      "registerFee": {
        "details": "the amount to use for registration"
      },
      "registeredTokens": {
        "details": "Track registered tokens"
      },
      "swapFee": {
        "details": "swapping fee"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "beginSwap(address,uint256)": {
        "notice": "Lock the Tokens that will be  unlocked in another blockchain  requirements: token to lock should be registered and active"
      },
      "bridge()": {
        "notice": "the address of bridge (the cosmos chain) representer. This representer ideally should act after voting process in the bridge."
      },
      "dangerBeginSwap(address)": {
        "notice": "Forcefully initiate from player part to To cancel swapping.  Warning! Do it only if smartcontrac was hacked. TODO!"
      },
      "deployToken(address,uint256,string,string)": {
        "notice": "Deploy a new contract that is mapped  to the token in another blockchain"
      },
      "getSwapFee()": {
        "notice": " Swap User locks his token in one blockchain. Then in another blockchain he gets that amount of token. The amount that user gets in another blockchain From total locked tokens. Risks: If using a token more favorable in one of the chains, most users will transfer to that chain their tokens. Meaning It will be hard for users to transfer to other chain"
      },
      "lockAmount()": {
        "notice": "Total amount of locked tokens"
      },
      "pak()": {
        "notice": "PakBridge (PAK) token to use in fee for any transaction."
      },
      "registerToken(address)": {
        "notice": "Register a token to be bridged"
      },
      "setRegisterFee(uint256)": {
        "notice": "update the register fee"
      },
      "setSwapFee(uint256)": {
        "notice": "update the swap fee"
      }
    },
    "version": 1
  }
}