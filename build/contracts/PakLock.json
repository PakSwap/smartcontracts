{
  "contractName": "PakLock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pakAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_registerFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pak",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegisterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_registerFee",
          "type": "uint256"
        }
      ],
      "name": "setRegisterFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "registerToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_source",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "activateRegistration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sourceToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "name": "deployToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pakAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_registerFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"activateRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sourceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"name\":\"deployToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pak\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"registerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_registerFee\",\"type\":\"uint256\"}],\"name\":\"setRegisterFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PackLock is a smartcontract, where users are locking their tokens that they are swapped to another blockchain\",\"kind\":\"dev\",\"methods\":{\"activateRegistration(address,address)\":{\"details\":\"Activate registered token by passing the token address in another blockchain\"},\"getRegisterFee()\":{\"details\":\"Return amount of PAK token to use for registration of a new bridge.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"registerFee\":{\"details\":\"the amount to use for registration\"},\"registeredTokens\":{\"details\":\"Track registered tokens\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bridge()\":{\"notice\":\"the address of bridge (the cosmos chain) representer. This representer ideally should act after voting process in the bridge.\"},\"deployToken(address,uint256)\":{\"notice\":\"Deploy a new contract that is mapped to the token in another blockchain\"},\"pak()\":{\"notice\":\"PakBridge (PAK) token to use in fee for any transaction.\"},\"registerToken(address)\":{\"notice\":\"Register a token to be bridged\"},\"setRegisterFee(uint256)\":{\"notice\":\"update the register fee\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/alp/smartcontracts/contracts/PakLock.sol\":\"PakLock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/alp/smartcontracts/contracts/PakLock.sol\":{\"keccak256\":\"0x0c5f21e5438c603a83f6da93534b3ccac8c5a43e0aa979d8dabe71d34f6bb435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8e51cbeefa2e9ca95d47d84e21b91b28edcbbcb9067caa80bf1b54bec617a8b\",\"dweb:/ipfs/QmNv5f55oKbQzWnGWEHDUdYfSVaGPKcGHPD4D4LwMFxjcK\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620013c2380380620013c2833981810160405281019062000037919062000203565b600062000049620001cd60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600081116200012d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001249062000286565b60405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555062000185620001cd60201b60201c565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200032b565b600033905090565b600081519050620001e681620002f7565b92915050565b600081519050620001fd8162000311565b92915050565b600080604083850312156200021757600080fd5b60006200022785828601620001d5565b92505060206200023a85828601620001ec565b9150509250929050565b600062000253600983620002a8565b91507f7a65726f206665652e00000000000000000000000000000000000000000000006000830152602082019050919050565b60006020820190508181036000830152620002a18162000244565b9050919050565b600082825260208201905092915050565b6000620002c682620002cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200030281620002b9565b81146200030e57600080fd5b50565b6200031c81620002ed565b81146200032857600080fd5b50565b611087806200033b6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b45ea42011610066578063b45ea42014610121578063e2eb79e71461013f578063e78cea921461015b578063f2fde38b14610179578063f9496163146101955761009e565b806309824a80146100a357806332a58e79146100bf578063715018a6146100dd5780638da5cb5b146100e757806392be2ab814610105575b600080fd5b6100bd60048036038101906100b89190610b2f565b6101b1565b005b6100c761045b565b6040516100d49190610f74565b60405180910390f35b6100e5610465565b005b6100ef61059f565b6040516100fc9190610e1e565b60405180910390f35b61011f600480360381019061011a9190610bf9565b6105c8565b005b6101296106ac565b6040516101369190610e99565b60405180910390f35b61015960048036038101906101549190610b58565b6106d2565b005b610163610869565b6040516101709190610e1e565b60405180910390f35b610193600480360381019061018e9190610b2f565b61088f565b005b6101af60048036038101906101aa9190610b94565b610a38565b005b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160000160149054906101000a900460ff1615151461024c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024390610f54565b60405180910390fd5b600254600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102ac929190610e39565b60206040518083038186803b1580156102c457600080fd5b505afa1580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc9190610c22565b101561033d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033490610ed4565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002546040518463ffffffff1660e01b81526004016103c093929190610e62565b602060405180830381600087803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104129190610bd0565b5060008160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600254905090565b61046d610ad3565b73ffffffffffffffffffffffffffffffffffffffff1661048b61059f565b73ffffffffffffffffffffffffffffffffffffffff16146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890610f34565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105d0610ad3565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461065f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065690610ef4565b60405180910390fd5b600081116106a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069990610f14565b60405180910390fd5b8060028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106da610ad3565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090610ef4565b60405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160000160149054906101000a900460ff16151514610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90610f54565b60405180910390fd5b60018160000160146101000a81548160ff021916908315150217905550818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610897610ad3565b73ffffffffffffffffffffffffffffffffffffffff166108b561059f565b73ffffffffffffffffffffffffffffffffffffffff161461090b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090290610f34565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561097b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290610eb4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610a40610ad3565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac690610ef4565b60405180910390fd5b5050565b600033905090565b600081359050610aea8161100c565b92915050565b600081519050610aff81611023565b92915050565b600081359050610b148161103a565b92915050565b600081519050610b298161103a565b92915050565b600060208284031215610b4157600080fd5b6000610b4f84828501610adb565b91505092915050565b60008060408385031215610b6b57600080fd5b6000610b7985828601610adb565b9250506020610b8a85828601610adb565b9150509250929050565b60008060408385031215610ba757600080fd5b6000610bb585828601610adb565b9250506020610bc685828601610b05565b9150509250929050565b600060208284031215610be257600080fd5b6000610bf084828501610af0565b91505092915050565b600060208284031215610c0b57600080fd5b6000610c1984828501610b05565b91505092915050565b600060208284031215610c3457600080fd5b6000610c4284828501610b1a565b91505092915050565b610c5481610fa0565b82525050565b610c6381610fe8565b82525050565b6000610c76602683610f8f565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610cdc600c83610f8f565b91507f6e6f20616c6c6f77616e636500000000000000000000000000000000000000006000830152602082019050919050565b6000610d1c600b83610f8f565b91507f6f6e6c79206272696467650000000000000000000000000000000000000000006000830152602082019050919050565b6000610d5c601183610f8f565b91507f7a65726f207265676973746572206665650000000000000000000000000000006000830152602082019050919050565b6000610d9c602083610f8f565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610ddc601183610f8f565b91507f616c7265616479206163746976617465640000000000000000000000000000006000830152602082019050919050565b610e1881610fde565b82525050565b6000602082019050610e336000830184610c4b565b92915050565b6000604082019050610e4e6000830185610c4b565b610e5b6020830184610c4b565b9392505050565b6000606082019050610e776000830186610c4b565b610e846020830185610c4b565b610e916040830184610e0f565b949350505050565b6000602082019050610eae6000830184610c5a565b92915050565b60006020820190508181036000830152610ecd81610c69565b9050919050565b60006020820190508181036000830152610eed81610ccf565b9050919050565b60006020820190508181036000830152610f0d81610d0f565b9050919050565b60006020820190508181036000830152610f2d81610d4f565b9050919050565b60006020820190508181036000830152610f4d81610d8f565b9050919050565b60006020820190508181036000830152610f6d81610dcf565b9050919050565b6000602082019050610f896000830184610e0f565b92915050565b600082825260208201905092915050565b6000610fab82610fbe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ff382610ffa565b9050919050565b600061100582610fbe565b9050919050565b61101581610fa0565b811461102057600080fd5b50565b61102c81610fb2565b811461103757600080fd5b50565b61104381610fde565b811461104e57600080fd5b5056fea2646970667358221220be4ea738a20de6b2b89dd40ca62996df86df88c8601d5051485d4767c073972964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b45ea42011610066578063b45ea42014610121578063e2eb79e71461013f578063e78cea921461015b578063f2fde38b14610179578063f9496163146101955761009e565b806309824a80146100a357806332a58e79146100bf578063715018a6146100dd5780638da5cb5b146100e757806392be2ab814610105575b600080fd5b6100bd60048036038101906100b89190610b2f565b6101b1565b005b6100c761045b565b6040516100d49190610f74565b60405180910390f35b6100e5610465565b005b6100ef61059f565b6040516100fc9190610e1e565b60405180910390f35b61011f600480360381019061011a9190610bf9565b6105c8565b005b6101296106ac565b6040516101369190610e99565b60405180910390f35b61015960048036038101906101549190610b58565b6106d2565b005b610163610869565b6040516101709190610e1e565b60405180910390f35b610193600480360381019061018e9190610b2f565b61088f565b005b6101af60048036038101906101aa9190610b94565b610a38565b005b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160000160149054906101000a900460ff1615151461024c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024390610f54565b60405180910390fd5b600254600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102ac929190610e39565b60206040518083038186803b1580156102c457600080fd5b505afa1580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc9190610c22565b101561033d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033490610ed4565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002546040518463ffffffff1660e01b81526004016103c093929190610e62565b602060405180830381600087803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104129190610bd0565b5060008160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600254905090565b61046d610ad3565b73ffffffffffffffffffffffffffffffffffffffff1661048b61059f565b73ffffffffffffffffffffffffffffffffffffffff16146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890610f34565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105d0610ad3565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461065f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065690610ef4565b60405180910390fd5b600081116106a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069990610f14565b60405180910390fd5b8060028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106da610ad3565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090610ef4565b60405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160000160149054906101000a900460ff16151514610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb90610f54565b60405180910390fd5b60018160000160146101000a81548160ff021916908315150217905550818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610897610ad3565b73ffffffffffffffffffffffffffffffffffffffff166108b561059f565b73ffffffffffffffffffffffffffffffffffffffff161461090b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090290610f34565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561097b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097290610eb4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610a40610ad3565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac690610ef4565b60405180910390fd5b5050565b600033905090565b600081359050610aea8161100c565b92915050565b600081519050610aff81611023565b92915050565b600081359050610b148161103a565b92915050565b600081519050610b298161103a565b92915050565b600060208284031215610b4157600080fd5b6000610b4f84828501610adb565b91505092915050565b60008060408385031215610b6b57600080fd5b6000610b7985828601610adb565b9250506020610b8a85828601610adb565b9150509250929050565b60008060408385031215610ba757600080fd5b6000610bb585828601610adb565b9250506020610bc685828601610b05565b9150509250929050565b600060208284031215610be257600080fd5b6000610bf084828501610af0565b91505092915050565b600060208284031215610c0b57600080fd5b6000610c1984828501610b05565b91505092915050565b600060208284031215610c3457600080fd5b6000610c4284828501610b1a565b91505092915050565b610c5481610fa0565b82525050565b610c6381610fe8565b82525050565b6000610c76602683610f8f565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610cdc600c83610f8f565b91507f6e6f20616c6c6f77616e636500000000000000000000000000000000000000006000830152602082019050919050565b6000610d1c600b83610f8f565b91507f6f6e6c79206272696467650000000000000000000000000000000000000000006000830152602082019050919050565b6000610d5c601183610f8f565b91507f7a65726f207265676973746572206665650000000000000000000000000000006000830152602082019050919050565b6000610d9c602083610f8f565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610ddc601183610f8f565b91507f616c7265616479206163746976617465640000000000000000000000000000006000830152602082019050919050565b610e1881610fde565b82525050565b6000602082019050610e336000830184610c4b565b92915050565b6000604082019050610e4e6000830185610c4b565b610e5b6020830184610c4b565b9392505050565b6000606082019050610e776000830186610c4b565b610e846020830185610c4b565b610e916040830184610e0f565b949350505050565b6000602082019050610eae6000830184610c5a565b92915050565b60006020820190508181036000830152610ecd81610c69565b9050919050565b60006020820190508181036000830152610eed81610ccf565b9050919050565b60006020820190508181036000830152610f0d81610d0f565b9050919050565b60006020820190508181036000830152610f2d81610d4f565b9050919050565b60006020820190508181036000830152610f4d81610d8f565b9050919050565b60006020820190508181036000830152610f6d81610dcf565b9050919050565b6000602082019050610f896000830184610e0f565b92915050565b600082825260208201905092915050565b6000610fab82610fbe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ff382610ffa565b9050919050565b600061100582610fbe565b9050919050565b61101581610fa0565b811461102057600080fd5b50565b61102c81610fb2565b811461103757600080fd5b50565b61104381610fde565b811461104e57600080fd5b5056fea2646970667358221220be4ea738a20de6b2b89dd40ca62996df86df88c8601d5051485d4767c073972964736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2233:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:10",
                "type": ""
              }
            ],
            "src": "7:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "219:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "229:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "229:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "287:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "260:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "197:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "205:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "213:5:10",
                "type": ""
              }
            ],
            "src": "156:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "399:346:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "445:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "454:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "457:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "447:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "447:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "447:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "420:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "429:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "416:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "416:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "441:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "412:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "412:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "409:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "471:128:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "486:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "500:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "490:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "515:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "561:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "572:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "557:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "557:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "581:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "525:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "525:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "515:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "609:129:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "624:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "638:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "628:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "654:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "700:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "711:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "696:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "696:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "720:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "664:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "664:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "654:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "361:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "372:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "384:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "392:6:10",
                "type": ""
              }
            ],
            "src": "305:440:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "897:160:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "907:73:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "973:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "978:1:10",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "914:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "914:66:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "907:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1001:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1006:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "997:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "997:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1010:11:10",
                        "type": "",
                        "value": "zero fee."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "990:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "990:32:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "990:32:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1032:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1043:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1048:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1039:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1032:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_aba26a823509a66410a09622cb57f8962874030ec059a0e5bc6e60c4995a3db3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "885:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "893:3:10",
                "type": ""
              }
            ],
            "src": "751:306:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1234:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1244:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1256:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1267:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1252:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1252:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1244:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1291:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1302:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1287:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1287:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1310:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1316:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1306:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1306:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1280:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1280:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1280:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1336:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1470:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_aba26a823509a66410a09622cb57f8962874030ec059a0e5bc6e60c4995a3db3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1344:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1344:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1336:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aba26a823509a66410a09622cb57f8962874030ec059a0e5bc6e60c4995a3db3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1214:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1229:4:10",
                "type": ""
              }
            ],
            "src": "1063:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1584:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1601:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1606:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1594:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1594:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1594:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1622:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1641:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1646:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1637:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1637:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1622:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1556:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1561:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1572:11:10",
                "type": ""
              }
            ],
            "src": "1488:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1708:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1718:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1747:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1729:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1729:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1718:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1690:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1700:7:10",
                "type": ""
              }
            ],
            "src": "1663:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1810:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1820:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1835:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1842:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1831:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1831:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1820:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1792:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1802:7:10",
                "type": ""
              }
            ],
            "src": "1765:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1942:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1952:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1963:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1952:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1924:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1934:7:10",
                "type": ""
              }
            ],
            "src": "1897:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2023:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2080:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2089:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2092:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2082:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2082:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2082:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2046:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2071:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2053:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2053:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2043:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2043:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2036:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2036:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2033:2:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2016:5:10",
                "type": ""
              }
            ],
            "src": "1980:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2151:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2208:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2217:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2220:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2210:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2210:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2210:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2174:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2199:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2181:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2181:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2171:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2171:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2164:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2164:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2161:2:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2144:5:10",
                "type": ""
              }
            ],
            "src": "2108:122:10"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_aba26a823509a66410a09622cb57f8962874030ec059a0e5bc6e60c4995a3db3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n\n        mstore(add(pos, 0), \"zero fee.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aba26a823509a66410a09622cb57f8962874030ec059a0e5bc6e60c4995a3db3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aba26a823509a66410a09622cb57f8962874030ec059a0e5bc6e60c4995a3db3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10227:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:10",
                "type": ""
              }
            ],
            "src": "7:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:10"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:10",
                "type": ""
              }
            ],
            "src": "152:137:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "357:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "366:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "357:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "395:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "395:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "325:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "333:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "341:5:10",
                "type": ""
              }
            ],
            "src": "295:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "513:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "528:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "522:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "522:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "513:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "571:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "544:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "544:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "481:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "489:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "497:5:10",
                "type": ""
              }
            ],
            "src": "440:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "655:196:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "701:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "710:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "713:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "703:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "703:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "703:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "676:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "685:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "697:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "665:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "727:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "742:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "756:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "746:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "771:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "806:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "817:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "802:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "802:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "826:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "781:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "781:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "771:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "625:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "636:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "648:6:10",
                "type": ""
              }
            ],
            "src": "589:262:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "940:324:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "986:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "995:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "998:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "988:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "988:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "988:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "961:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "970:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "957:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "957:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "982:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "953:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "950:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1012:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1027:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1041:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1031:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1056:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1091:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1102:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1087:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1087:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1111:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1066:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1056:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1139:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1154:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1168:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1158:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1184:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1219:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1230:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1215:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1215:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1239:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1194:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1194:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1184:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "902:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "913:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "925:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "933:6:10",
                "type": ""
              }
            ],
            "src": "857:407:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1353:324:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1399:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1408:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1411:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1401:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1401:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1401:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1374:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1383:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1370:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1370:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1395:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1366:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1366:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1363:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1425:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1440:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1454:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1444:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1469:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1504:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1515:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1500:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1500:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1524:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1479:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1479:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1469:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1552:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1567:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1581:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1571:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1597:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1632:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1643:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1628:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1628:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1652:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1607:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1607:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1597:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1315:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1326:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1338:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1346:6:10",
                "type": ""
              }
            ],
            "src": "1270:407:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1757:204:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1803:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1812:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1815:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1805:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1805:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1805:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1778:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1787:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1774:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1774:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1799:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1770:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1770:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1767:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1829:125:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1844:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1858:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1848:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1873:71:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1916:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1927:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1912:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1912:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1936:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1883:28:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1883:61:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1873:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1727:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1738:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1750:6:10",
                "type": ""
              }
            ],
            "src": "1683:278:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2033:196:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2079:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2088:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2091:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2081:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2081:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2081:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2054:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2063:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2050:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2050:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2075:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2046:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2046:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2043:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2105:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2120:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2134:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2124:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2149:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2184:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2195:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2180:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2180:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2204:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2159:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2159:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2149:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2003:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2014:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2026:6:10",
                "type": ""
              }
            ],
            "src": "1967:262:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2312:207:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2358:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2367:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2370:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2360:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2360:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2360:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2333:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2342:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2329:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2329:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2354:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2325:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2325:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2322:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2384:128:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2399:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2413:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2403:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2428:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2474:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2485:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2470:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2470:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2494:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2438:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2438:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2428:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2282:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2293:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2305:6:10",
                "type": ""
              }
            ],
            "src": "2235:284:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2590:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2607:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2630:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2612:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2612:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2600:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2600:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2600:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2578:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2585:3:10",
                "type": ""
              }
            ],
            "src": "2525:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2728:80:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2745:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2795:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$962_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2750:44:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2750:51:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2738:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:64:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2738:64:10"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$962_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2716:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2723:3:10",
                "type": ""
              }
            ],
            "src": "2649:159:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2960:224:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2970:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3036:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3041:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2977:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2977:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2970:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3065:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3070:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3061:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3061:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3074:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3054:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3054:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3054:55:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3130:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3135:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3126:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3126:12:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3140:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3119:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3119:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3119:30:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3159:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3170:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3175:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3166:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3166:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3159:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2948:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2956:3:10",
                "type": ""
              }
            ],
            "src": "2814:370:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3336:164:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3346:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3412:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3417:2:10",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3353:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3353:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3346:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3441:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3446:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3437:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3437:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3450:14:10",
                        "type": "",
                        "value": "no allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3430:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3430:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3430:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3475:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3486:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3491:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3482:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3482:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3475:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3324:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3332:3:10",
                "type": ""
              }
            ],
            "src": "3190:310:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3652:163:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3662:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3728:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3733:2:10",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3669:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3669:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3662:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3757:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3762:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3753:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3753:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3766:13:10",
                        "type": "",
                        "value": "only bridge"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3746:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3746:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3746:34:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3790:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3801:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3806:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3797:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3797:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3790:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3640:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3648:3:10",
                "type": ""
              }
            ],
            "src": "3506:309:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3967:169:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3977:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4043:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4048:2:10",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3984:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3984:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3977:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4072:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4077:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4068:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4068:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4081:19:10",
                        "type": "",
                        "value": "zero register fee"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4061:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4061:40:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4061:40:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4111:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4122:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4127:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4118:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4118:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4111:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3955:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3963:3:10",
                "type": ""
              }
            ],
            "src": "3821:315:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4288:184:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4298:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4364:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4369:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4305:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4305:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4298:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4393:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4398:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4389:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4389:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4402:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4382:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4382:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4382:55:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4447:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4458:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4463:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4454:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4454:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4447:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4276:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4284:3:10",
                "type": ""
              }
            ],
            "src": "4142:330:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4624:169:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4634:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4700:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4705:2:10",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4641:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4641:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4634:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4729:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4734:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4725:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4725:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4738:19:10",
                        "type": "",
                        "value": "already activated"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4718:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4718:40:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4718:40:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4768:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4779:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4784:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4775:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4775:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4768:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4612:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4620:3:10",
                "type": ""
              }
            ],
            "src": "4478:315:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4864:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4881:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4904:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4886:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4886:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4874:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4874:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4874:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4852:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4859:3:10",
                "type": ""
              }
            ],
            "src": "4799:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5021:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5031:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5043:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5054:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5039:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5039:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5031:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5111:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5124:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5135:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5120:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5120:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5067:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5067:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5067:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4993:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5005:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5016:4:10",
                "type": ""
              }
            ],
            "src": "4923:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5277:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5287:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5299:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5310:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5295:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5295:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5287:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5367:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5380:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5391:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5376:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5376:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5323:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5323:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5323:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5448:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5461:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5472:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5457:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5457:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5404:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5404:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5404:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5241:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5253:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5261:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5272:4:10",
                "type": ""
              }
            ],
            "src": "5151:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5643:288:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5653:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5665:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5676:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5661:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5661:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5653:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5733:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5746:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5757:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5742:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5742:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5689:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5689:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5689:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5814:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5827:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5838:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5823:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5823:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5770:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5770:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5770:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5896:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5909:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5920:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5905:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5905:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5852:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5852:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5852:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5599:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5611:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5619:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5627:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5638:4:10",
                "type": ""
              }
            ],
            "src": "5489:442:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6049:138:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6059:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6071:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6082:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6067:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6067:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6059:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6153:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6166:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6177:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6162:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6162:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$962_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6095:57:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6095:85:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6095:85:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$962__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6021:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6033:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6044:4:10",
                "type": ""
              }
            ],
            "src": "5937:250:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6364:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6374:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6386:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6397:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6382:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6382:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6374:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6421:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6432:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6417:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6417:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6440:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6446:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6436:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6436:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6410:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6410:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6410:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6466:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6600:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6474:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6474:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6466:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6344:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6359:4:10",
                "type": ""
              }
            ],
            "src": "6193:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6789:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6799:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6811:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6822:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6807:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6807:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6799:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6846:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6857:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6842:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6842:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6865:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6871:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6861:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6861:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6835:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6835:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6835:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6891:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7025:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6899:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6899:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6891:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6769:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6784:4:10",
                "type": ""
              }
            ],
            "src": "6618:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7214:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7224:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7236:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7247:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7232:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7232:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7224:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7271:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7282:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7267:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7267:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7290:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7296:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7286:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7286:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7260:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7260:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7260:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7316:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7450:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7324:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7324:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7316:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7194:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7209:4:10",
                "type": ""
              }
            ],
            "src": "7043:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7639:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7649:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7661:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7672:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7657:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7657:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7649:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7696:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7707:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7692:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7692:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7715:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7721:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7711:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7711:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7685:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7685:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7685:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7741:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7875:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7749:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7749:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7741:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7619:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7634:4:10",
                "type": ""
              }
            ],
            "src": "7468:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8064:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8074:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8086:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8097:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8082:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8082:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8074:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8121:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8132:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8117:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8117:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8140:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8146:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8136:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8136:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8110:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8110:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8110:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8166:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8300:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8174:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8174:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8166:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8044:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8059:4:10",
                "type": ""
              }
            ],
            "src": "7893:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8489:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8499:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8511:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8522:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8507:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8507:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8499:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8546:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8557:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8542:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8542:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8565:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8571:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8561:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8561:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8535:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8535:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8535:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8591:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8725:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8599:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8599:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8591:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8469:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8484:4:10",
                "type": ""
              }
            ],
            "src": "8318:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8841:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8851:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8863:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8874:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8859:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8859:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8851:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8931:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8944:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8955:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8940:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8940:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8887:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8887:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8887:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8813:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8825:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8836:4:10",
                "type": ""
              }
            ],
            "src": "8743:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9067:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9084:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9089:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9077:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9077:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9077:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9105:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9124:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9129:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9120:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9120:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9105:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9039:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9044:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9055:11:10",
                "type": ""
              }
            ],
            "src": "8971:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9191:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9201:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9230:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9212:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9212:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9201:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9173:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9183:7:10",
                "type": ""
              }
            ],
            "src": "9146:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9290:48:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9300:32:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9325:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9318:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9318:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9311:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9311:21:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9300:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9272:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9282:7:10",
                "type": ""
              }
            ],
            "src": "9248:90:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9389:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9399:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9414:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9421:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9410:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9410:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9399:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9371:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9381:7:10",
                "type": ""
              }
            ],
            "src": "9344:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9521:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9531:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9542:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9531:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9503:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9513:7:10",
                "type": ""
              }
            ],
            "src": "9476:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9633:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9643:64:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9701:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$962_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9656:44:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9656:51:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9643:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$962_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9613:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9623:9:10",
                "type": ""
              }
            ],
            "src": "9559:154:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9793:53:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9803:37:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9834:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9816:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9816:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9803:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$962_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9773:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9783:9:10",
                "type": ""
              }
            ],
            "src": "9719:127:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9895:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9952:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9961:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9964:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9954:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9954:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9954:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9918:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9943:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "9925:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9925:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9915:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9915:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9908:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9908:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9905:2:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9888:5:10",
                "type": ""
              }
            ],
            "src": "9852:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10020:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10074:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10083:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10086:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10076:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10076:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10076:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10043:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10065:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10050:14:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10050:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10040:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10040:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10033:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10033:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10030:2:10"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10013:5:10",
                "type": ""
              }
            ],
            "src": "9980:116:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10145:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10202:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10211:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10214:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10204:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10204:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10204:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10168:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10193:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10175:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10175:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10165:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10165:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10158:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10158:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10155:2:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10138:5:10",
                "type": ""
              }
            ],
            "src": "10102:122:10"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$962_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$962_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n\n        mstore(add(pos, 0), \"no allowance\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n\n        mstore(add(pos, 0), \"only bridge\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n\n        mstore(add(pos, 0), \"zero register fee\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n\n        mstore(add(pos, 0), \"already activated\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$962__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$962_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$962_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$962_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$962_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "362:2673:2:-:0;;;1210:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:3;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;1291:1:2;1276:12;:16;1268:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1324:11;1311:3;;:25;;;;;;;;;;;;;;;;;;1353:12;1339:11;:26;;;;1378:12;:10;;;:12;;:::i;:::-;1369:6;;:21;;;;;;;;;;;;;;;;;;1210:187;;362:2673;;586:96:9;639:7;665:10;658:17;;586:96;:::o;7:143:10:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:440::-;;;441:2;429:9;420:7;416:23;412:32;409:2;;;457:1;454;447:12;409:2;500:1;525:64;581:7;572:6;561:9;557:22;525:64;:::i;:::-;515:74;;471:128;638:2;664:64;720:7;711:6;700:9;696:22;664:64;:::i;:::-;654:74;;609:129;399:346;;;;;:::o;751:306::-;;914:66;978:1;973:3;914:66;:::i;:::-;907:73;;1010:11;1006:1;1001:3;997:11;990:32;1048:2;1043:3;1039:12;1032:19;;897:160;;;:::o;1063:419::-;;1267:2;1256:9;1252:18;1244:26;;1316:9;1310:4;1306:20;1302:1;1291:9;1287:17;1280:47;1344:131;1470:4;1344:131;:::i;:::-;1336:139;;1234:248;;;:::o;1488:169::-;;1606:6;1601:3;1594:19;1646:4;1641:3;1637:14;1622:29;;1584:73;;;;:::o;1663:96::-;;1729:24;1747:5;1729:24;:::i;:::-;1718:35;;1708:51;;;:::o;1765:126::-;;1842:42;1835:5;1831:54;1820:65;;1810:81;;;:::o;1897:77::-;;1963:5;1952:16;;1942:32;;;:::o;1980:122::-;2053:24;2071:5;2053:24;:::i;:::-;2046:5;2043:35;2033:2;;2092:1;2089;2082:12;2033:2;2023:79;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:2;;2220:1;2217;2210:12;2161:2;2151:79;:::o;362:2673:2:-;;;;;;;",
  "deployedSourceMap": "362:2673:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1952:451;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1587:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:3;;;:::i;:::-;;1068:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1733:151:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;502:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2521:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;758:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2940:93:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1952:451;2010:40;2053:16;:24;2070:6;2053:24;;;;;;;;;;;;;;;2010:67;;2115:5;2088:32;;:16;:23;;;;;;;;;;;;:32;;;2080:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2262:11;;2218:3;;;;;;;;;;;:13;;;2232:10;2252:4;2218:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;2210:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2294:3;;;;;;;;;;;:16;;;2311:10;2323:6;;;;;;;;;;;2331:11;;2294:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2394:1;2355:16;:28;;;:41;;;;;;;;;;;;;;;;;;1952:451;;:::o;1587:85::-;1635:7;1654:11;;1647:18;;1587:85;:::o;1700:145:3:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1068:85::-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;1733:151:2:-;1446:12;:10;:12::i;:::-;1436:22;;:6;;;;;;;;;;;:22;;;1428:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1825:1:::1;1810:12;:16;1802:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1865:12;1851:11;:26;;;;1733:151:::0;:::o;502:17::-;;;;;;;;;;;;;:::o;2521:310::-;1446:12;:10;:12::i;:::-;1436:22;;:6;;;;;;;;;;;:22;;;1428:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2615:40:::1;2658:16;:25;2675:7;2658:25;;;;;;;;;;;;;;;2615:68;;2721:5;2694:32;;:16;:23;;;;;;;;;;;;:32;;;2686:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2779:4;2753:16;:23;;;:30;;;;;;;;;;;;;;;;;;2817:7;2786:16;:28;;;:38;;;;;;;;;;;;;;;;;;1477:1;2521:310:::0;;:::o;758:21::-;;;;;;;;;;;;;:::o;1994:240:3:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;2940:93:2:-;1446:12;:10;:12::i;:::-;1436:22;;:6;;;;;;;;;;;:22;;;1428:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2940:93;;:::o;586:96:9:-;639:7;665:10;658:17;;586:96;:::o;7:139:10:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:262::-;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:53;826:7;817:6;806:9;802:22;781:53;:::i;:::-;771:63;;727:117;655:196;;;;:::o;857:407::-;;;982:2;970:9;961:7;957:23;953:32;950:2;;;998:1;995;988:12;950:2;1041:1;1066:53;1111:7;1102:6;1091:9;1087:22;1066:53;:::i;:::-;1056:63;;1012:117;1168:2;1194:53;1239:7;1230:6;1219:9;1215:22;1194:53;:::i;:::-;1184:63;;1139:118;940:324;;;;;:::o;1270:407::-;;;1395:2;1383:9;1374:7;1370:23;1366:32;1363:2;;;1411:1;1408;1401:12;1363:2;1454:1;1479:53;1524:7;1515:6;1504:9;1500:22;1479:53;:::i;:::-;1469:63;;1425:117;1581:2;1607:53;1652:7;1643:6;1632:9;1628:22;1607:53;:::i;:::-;1597:63;;1552:118;1353:324;;;;;:::o;1683:278::-;;1799:2;1787:9;1778:7;1774:23;1770:32;1767:2;;;1815:1;1812;1805:12;1767:2;1858:1;1883:61;1936:7;1927:6;1916:9;1912:22;1883:61;:::i;:::-;1873:71;;1829:125;1757:204;;;;:::o;1967:262::-;;2075:2;2063:9;2054:7;2050:23;2046:32;2043:2;;;2091:1;2088;2081:12;2043:2;2134:1;2159:53;2204:7;2195:6;2184:9;2180:22;2159:53;:::i;:::-;2149:63;;2105:117;2033:196;;;;:::o;2235:284::-;;2354:2;2342:9;2333:7;2329:23;2325:32;2322:2;;;2370:1;2367;2360:12;2322:2;2413:1;2438:64;2494:7;2485:6;2474:9;2470:22;2438:64;:::i;:::-;2428:74;;2384:128;2312:207;;;;:::o;2525:118::-;2612:24;2630:5;2612:24;:::i;:::-;2607:3;2600:37;2590:53;;:::o;2649:159::-;2750:51;2795:5;2750:51;:::i;:::-;2745:3;2738:64;2728:80;;:::o;2814:370::-;;2977:67;3041:2;3036:3;2977:67;:::i;:::-;2970:74;;3074:34;3070:1;3065:3;3061:11;3054:55;3140:8;3135:2;3130:3;3126:12;3119:30;3175:2;3170:3;3166:12;3159:19;;2960:224;;;:::o;3190:310::-;;3353:67;3417:2;3412:3;3353:67;:::i;:::-;3346:74;;3450:14;3446:1;3441:3;3437:11;3430:35;3491:2;3486:3;3482:12;3475:19;;3336:164;;;:::o;3506:309::-;;3669:67;3733:2;3728:3;3669:67;:::i;:::-;3662:74;;3766:13;3762:1;3757:3;3753:11;3746:34;3806:2;3801:3;3797:12;3790:19;;3652:163;;;:::o;3821:315::-;;3984:67;4048:2;4043:3;3984:67;:::i;:::-;3977:74;;4081:19;4077:1;4072:3;4068:11;4061:40;4127:2;4122:3;4118:12;4111:19;;3967:169;;;:::o;4142:330::-;;4305:67;4369:2;4364:3;4305:67;:::i;:::-;4298:74;;4402:34;4398:1;4393:3;4389:11;4382:55;4463:2;4458:3;4454:12;4447:19;;4288:184;;;:::o;4478:315::-;;4641:67;4705:2;4700:3;4641:67;:::i;:::-;4634:74;;4738:19;4734:1;4729:3;4725:11;4718:40;4784:2;4779:3;4775:12;4768:19;;4624:169;;;:::o;4799:118::-;4886:24;4904:5;4886:24;:::i;:::-;4881:3;4874:37;4864:53;;:::o;4923:222::-;;5054:2;5043:9;5039:18;5031:26;;5067:71;5135:1;5124:9;5120:17;5111:6;5067:71;:::i;:::-;5021:124;;;;:::o;5151:332::-;;5310:2;5299:9;5295:18;5287:26;;5323:71;5391:1;5380:9;5376:17;5367:6;5323:71;:::i;:::-;5404:72;5472:2;5461:9;5457:18;5448:6;5404:72;:::i;:::-;5277:206;;;;;:::o;5489:442::-;;5676:2;5665:9;5661:18;5653:26;;5689:71;5757:1;5746:9;5742:17;5733:6;5689:71;:::i;:::-;5770:72;5838:2;5827:9;5823:18;5814:6;5770:72;:::i;:::-;5852;5920:2;5909:9;5905:18;5896:6;5852:72;:::i;:::-;5643:288;;;;;;:::o;5937:250::-;;6082:2;6071:9;6067:18;6059:26;;6095:85;6177:1;6166:9;6162:17;6153:6;6095:85;:::i;:::-;6049:138;;;;:::o;6193:419::-;;6397:2;6386:9;6382:18;6374:26;;6446:9;6440:4;6436:20;6432:1;6421:9;6417:17;6410:47;6474:131;6600:4;6474:131;:::i;:::-;6466:139;;6364:248;;;:::o;6618:419::-;;6822:2;6811:9;6807:18;6799:26;;6871:9;6865:4;6861:20;6857:1;6846:9;6842:17;6835:47;6899:131;7025:4;6899:131;:::i;:::-;6891:139;;6789:248;;;:::o;7043:419::-;;7247:2;7236:9;7232:18;7224:26;;7296:9;7290:4;7286:20;7282:1;7271:9;7267:17;7260:47;7324:131;7450:4;7324:131;:::i;:::-;7316:139;;7214:248;;;:::o;7468:419::-;;7672:2;7661:9;7657:18;7649:26;;7721:9;7715:4;7711:20;7707:1;7696:9;7692:17;7685:47;7749:131;7875:4;7749:131;:::i;:::-;7741:139;;7639:248;;;:::o;7893:419::-;;8097:2;8086:9;8082:18;8074:26;;8146:9;8140:4;8136:20;8132:1;8121:9;8117:17;8110:47;8174:131;8300:4;8174:131;:::i;:::-;8166:139;;8064:248;;;:::o;8318:419::-;;8522:2;8511:9;8507:18;8499:26;;8571:9;8565:4;8561:20;8557:1;8546:9;8542:17;8535:47;8599:131;8725:4;8599:131;:::i;:::-;8591:139;;8489:248;;;:::o;8743:222::-;;8874:2;8863:9;8859:18;8851:26;;8887:71;8955:1;8944:9;8940:17;8931:6;8887:71;:::i;:::-;8841:124;;;;:::o;8971:169::-;;9089:6;9084:3;9077:19;9129:4;9124:3;9120:14;9105:29;;9067:73;;;;:::o;9146:96::-;;9212:24;9230:5;9212:24;:::i;:::-;9201:35;;9191:51;;;:::o;9248:90::-;;9325:5;9318:13;9311:21;9300:32;;9290:48;;;:::o;9344:126::-;;9421:42;9414:5;9410:54;9399:65;;9389:81;;;:::o;9476:77::-;;9542:5;9531:16;;9521:32;;;:::o;9559:154::-;;9656:51;9701:5;9656:51;:::i;:::-;9643:64;;9633:80;;;:::o;9719:127::-;;9816:24;9834:5;9816:24;:::i;:::-;9803:37;;9793:53;;;:::o;9852:122::-;9925:24;9943:5;9925:24;:::i;:::-;9918:5;9915:35;9905:2;;9964:1;9961;9954:12;9905:2;9895:79;:::o;9980:116::-;10050:21;10065:5;10050:21;:::i;:::-;10043:5;10040:32;10030:2;;10086:1;10083;10076:12;10030:2;10020:76;:::o;10102:122::-;10175:24;10193:5;10175:24;:::i;:::-;10168:5;10165:35;10155:2;;10214:1;10211;10204:12;10155:2;10145:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @dev PackLock is a smartcontract, where users are\n * locking their tokens that they are swapped to another blockchain\n */\ncontract PakLock is Ownable {\n    using SafeERC20 for IERC20;\n\n    /// @notice PakBridge (PAK) token to use in fee for any transaction.\n    IERC20 public pak;\n\n    /// @dev the amount to use for registration\n    uint256 private registerFee;\n\n    /// @notice the address of bridge (the cosmos chain) representer.\n    /// This representer ideally should act after voting process in the bridge.\n    address public bridge;\n\n    /// @dev Struct to track the registered tokens\n    struct RegisteredToken {\n\taddress targetToken;    // The token address deployed on\n\t                        // another blockchain\n\tbool active;            // Whether it was activated or not\n\t                        // means whether the token was deployed or not.\n    }\n    /// @dev Track registered tokens\n    mapping(address => RegisteredToken) registeredTokens;\n    \n    constructor(address _pakAddress, uint256 _registerFee) {\n\trequire(_registerFee > 0, \"zero fee.\");\n\t\n\tpak = IERC20(_pakAddress);\n\tregisterFee = _registerFee;\n\n\tbridge = _msgSender();\n    }\n\n    modifier onlyBridge() {\n\trequire(bridge == _msgSender(), \"only bridge\");\n\t_;\n    }\n\n    /**\n     * @dev Return amount of PAK token to use for registration of a new bridge.\n     */\n    function getRegisterFee() external view returns(uint256) {\n\treturn registerFee;\n    }\n\n    /**\n     * @notice update the register fee\n     */\n    function setRegisterFee(uint256 _registerFee) external onlyBridge {\n\trequire(_registerFee > 0, \"zero register fee\");\n\tregisterFee = _registerFee;\n    }\n\n    /**\n     * @notice Register a token to be bridged\n     */\n    function registerToken(address _token) external {\n        RegisteredToken storage _registeredToken = registeredTokens[_token];\n\trequire(_registeredToken.active == false, \"already activated\");\n\n\t/// We should redeem the PakBridge token for registeration fee\n\trequire(pak.allowance(msg.sender, address(this)) >= registerFee, \"no allowance\");\t\n\tpak.transferFrom(msg.sender, bridge, registerFee);\n\t\n        _registeredToken.targetToken = address(0);\n    }\n\n    /**\n     * @dev Activate registered token by passing the token address\n     * in another blockchain\n     */\n    function activateRegistration(address _source, address _target) external onlyBridge {\n        RegisteredToken storage _registeredToken = registeredTokens[_source];\n\trequire(_registeredToken.active == false, \"already activated\");\t\n\n\t_registeredToken.active = true;\n\t_registeredToken.targetToken = _target;\n    }\n\n    /**\n     * @notice Deploy a new contract that is mapped to the token in another blockchain\n     */\n    function deployToken(address _sourceToken, uint256 _totalSupply) external onlyBridge {\n\n    }\n}\n",
  "sourcePath": "/home/alp/smartcontracts/contracts/PakLock.sol",
  "ast": {
    "absolutePath": "/home/alp/smartcontracts/contracts/PakLock.sol",
    "exportedSymbols": {
      "Address": [
        1507
      ],
      "Context": [
        1530
      ],
      "IERC20": [
        962
      ],
      "Ownable": [
        377
      ],
      "PakLock": [
        267
      ],
      "SafeERC20": [
        1211
      ]
    },
    "id": 268,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 60,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 268,
        "sourceUnit": 963,
        "src": "56:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 268,
        "sourceUnit": 1212,
        "src": "113:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 268,
        "sourceUnit": 378,
        "src": "179:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 65,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 377,
              "src": "382:7:2"
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "382:7:2"
          }
        ],
        "contractDependencies": [
          377,
          1530
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 64,
          "nodeType": "StructuredDocumentation",
          "src": "233:128:2",
          "text": " @dev PackLock is a smartcontract, where users are\n locking their tokens that they are swapped to another blockchain"
        },
        "fullyImplemented": true,
        "id": 267,
        "linearizedBaseContracts": [
          267,
          377,
          1530
        ],
        "name": "PakLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 70,
            "libraryName": {
              "id": 67,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1211,
              "src": "402:9:2"
            },
            "nodeType": "UsingForDirective",
            "src": "396:27:2",
            "typeName": {
              "id": 69,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 962,
                "src": "416:6:2"
              },
              "referencedDeclaration": 962,
              "src": "416:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$962",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "429:68:2",
              "text": "@notice PakBridge (PAK) token to use in fee for any transaction."
            },
            "functionSelector": "b45ea420",
            "id": 74,
            "mutability": "mutable",
            "name": "pak",
            "nodeType": "VariableDeclaration",
            "scope": 267,
            "src": "502:17:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$962",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 73,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 72,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 962,
                "src": "502:6:2"
              },
              "referencedDeclaration": 962,
              "src": "502:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$962",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 75,
              "nodeType": "StructuredDocumentation",
              "src": "526:43:2",
              "text": "@dev the amount to use for registration"
            },
            "id": 77,
            "mutability": "mutable",
            "name": "registerFee",
            "nodeType": "VariableDeclaration",
            "scope": 267,
            "src": "574:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "574:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 78,
              "nodeType": "StructuredDocumentation",
              "src": "608:145:2",
              "text": "@notice the address of bridge (the cosmos chain) representer.\n This representer ideally should act after voting process in the bridge."
            },
            "functionSelector": "e78cea92",
            "id": 80,
            "mutability": "mutable",
            "name": "bridge",
            "nodeType": "VariableDeclaration",
            "scope": 267,
            "src": "758:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 79,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "758:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PakLock.RegisteredToken",
            "id": 85,
            "members": [
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "targetToken",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "863:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 81,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "863:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "968:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 83,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "968:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RegisteredToken",
            "nodeType": "StructDefinition",
            "scope": 267,
            "src": "837:268:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 86,
              "nodeType": "StructuredDocumentation",
              "src": "1110:32:2",
              "text": "@dev Track registered tokens"
            },
            "id": 91,
            "mutability": "mutable",
            "name": "registeredTokens",
            "nodeType": "VariableDeclaration",
            "scope": 267,
            "src": "1147:52:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$85_storage_$",
              "typeString": "mapping(address => struct PakLock.RegisteredToken)"
            },
            "typeName": {
              "id": 90,
              "keyType": {
                "id": 87,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1155:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1147:35:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$85_storage_$",
                "typeString": "mapping(address => struct PakLock.RegisteredToken)"
              },
              "valueType": {
                "id": 89,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88,
                  "name": "RegisteredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 85,
                  "src": "1166:15:2"
                },
                "referencedDeclaration": 85,
                "src": "1166:15:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                  "typeString": "struct PakLock.RegisteredToken"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1265:132:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99,
                          "name": "_registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1276:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1291:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1276:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f206665652e",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1294:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aba26a823509a66410a09622cb57f8962874030ec059a0e5bc6e60c4995a3db3",
                          "typeString": "literal_string \"zero fee.\""
                        },
                        "value": "zero fee."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aba26a823509a66410a09622cb57f8962874030ec059a0e5bc6e60c4995a3db3",
                          "typeString": "literal_string \"zero fee.\""
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1268:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:38:2"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "pak",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1311:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$962",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 107,
                          "name": "_pakAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1324:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 106,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "1317:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$962_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1317:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$962",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1311:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$962",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:25:2"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1339:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 112,
                      "name": "_registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1353:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1339:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:26:2"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 115,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "1369:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 116,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1518,
                        "src": "1378:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1378:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1369:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:21:2"
                }
              ]
            },
            "id": 121,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_pakAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1222:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_registerFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1243:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1221:43:2"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:0:2"
            },
            "scope": 267,
            "src": "1210:187:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1425:60:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 124,
                          "name": "bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "1436:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 125,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1518,
                            "src": "1446:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1446:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1436:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920627269646765",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1460:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b",
                          "typeString": "literal_string \"only bridge\""
                        },
                        "value": "only bridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b",
                          "typeString": "literal_string \"only bridge\""
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1428:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1428:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1428:46:2"
                },
                {
                  "id": 131,
                  "nodeType": "PlaceholderStatement",
                  "src": "1477:1:2"
                }
              ]
            },
            "id": 133,
            "name": "onlyBridge",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:2:2"
            },
            "src": "1403:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1644:28:2",
              "statements": [
                {
                  "expression": {
                    "id": 139,
                    "name": "registerFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77,
                    "src": "1654:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "1647:18:2"
                }
              ]
            },
            "documentation": {
              "id": 134,
              "nodeType": "StructuredDocumentation",
              "src": "1491:91:2",
              "text": " @dev Return amount of PAK token to use for registration of a new bridge."
            },
            "functionSelector": "32a58e79",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegisterFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:2:2"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1635:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1634:9:2"
            },
            "scope": 267,
            "src": "1587:85:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "1799:85:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 151,
                          "name": "_registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "1810:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1825:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1810:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f20726567697374657220666565",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        },
                        "value": "zero register fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        }
                      ],
                      "id": 150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1802:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1802:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1802:46:2"
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1851:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 158,
                      "name": "_registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "1865:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1851:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:26:2"
                }
              ]
            },
            "documentation": {
              "id": 143,
              "nodeType": "StructuredDocumentation",
              "src": "1678:50:2",
              "text": " @notice update the register fee"
            },
            "functionSelector": "92be2ab8",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 148,
                "modifierName": {
                  "id": 147,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "1788:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1788:10:2"
              }
            ],
            "name": "setRegisterFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_registerFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "1757:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1756:22:2"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1799:0:2"
            },
            "scope": 267,
            "src": "1733:151:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2000:403:2",
              "statements": [
                {
                  "assignments": [
                    170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 170,
                      "mutability": "mutable",
                      "name": "_registeredToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 216,
                      "src": "2010:40:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                        "typeString": "struct PakLock.RegisteredToken"
                      },
                      "typeName": {
                        "id": 169,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 168,
                          "name": "RegisteredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 85,
                          "src": "2010:15:2"
                        },
                        "referencedDeclaration": 85,
                        "src": "2010:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "baseExpression": {
                      "id": 171,
                      "name": "registeredTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2053:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$85_storage_$",
                        "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                      }
                    },
                    "id": 173,
                    "indexExpression": {
                      "id": 172,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "2070:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2053:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegisteredToken_$85_storage",
                      "typeString": "struct PakLock.RegisteredToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2010:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 176,
                            "name": "_registeredToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "2088:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                              "typeString": "struct PakLock.RegisteredToken storage pointer"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 84,
                          "src": "2088:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2115:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2088:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920616374697661746564",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2122:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        },
                        "value": "already activated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        }
                      ],
                      "id": 175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2080:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 186,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2232:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2232:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 190,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2252:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PakLock_$267",
                                    "typeString": "contract PakLock"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PakLock_$267",
                                    "typeString": "contract PakLock"
                                  }
                                ],
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2244:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 188,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2244:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2244:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 184,
                              "name": "pak",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "2218:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$962",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 921,
                            "src": "2218:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2218:40:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 193,
                          "name": "registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2262:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2218:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20616c6c6f77616e6365",
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2275:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f",
                          "typeString": "literal_string \"no allowance\""
                        },
                        "value": "no allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f",
                          "typeString": "literal_string \"no allowance\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2210:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:80:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 201,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2311:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2311:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 203,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2323:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 204,
                        "name": "registerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "2331:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 198,
                        "name": "pak",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "2294:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$962",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 943,
                      "src": "2294:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2294:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:49:2"
                },
                {
                  "expression": {
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 207,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "2355:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "2355:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2394:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2386:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2386:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2386:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2355:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:41:2"
                }
              ]
            },
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "1890:57:2",
              "text": " @notice Register a token to be bridged"
            },
            "functionSelector": "09824a80",
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "1975:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1974:16:2"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2000:0:2"
            },
            "scope": 267,
            "src": "1952:451:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "2605:226:2",
              "statements": [
                {
                  "assignments": [
                    229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 229,
                      "mutability": "mutable",
                      "name": "_registeredToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "2615:40:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                        "typeString": "struct PakLock.RegisteredToken"
                      },
                      "typeName": {
                        "id": 228,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 227,
                          "name": "RegisteredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 85,
                          "src": "2615:15:2"
                        },
                        "referencedDeclaration": 85,
                        "src": "2615:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": {
                    "baseExpression": {
                      "id": 230,
                      "name": "registeredTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2658:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$85_storage_$",
                        "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                      }
                    },
                    "id": 232,
                    "indexExpression": {
                      "id": 231,
                      "name": "_source",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "2675:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2658:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegisteredToken_$85_storage",
                      "typeString": "struct PakLock.RegisteredToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2615:68:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 235,
                            "name": "_registeredToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "2694:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                              "typeString": "struct PakLock.RegisteredToken storage pointer"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 84,
                          "src": "2694:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2721:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2694:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920616374697661746564",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2728:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        },
                        "value": "already activated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2686:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2686:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "2686:62:2"
                },
                {
                  "expression": {
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 242,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "2753:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "2753:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2779:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2753:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:30:2"
                },
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 248,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "2786:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "2786:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 251,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "2817:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2786:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:38:2"
                }
              ]
            },
            "documentation": {
              "id": 218,
              "nodeType": "StructuredDocumentation",
              "src": "2409:107:2",
              "text": " @dev Activate registered token by passing the token address\n in another blockchain"
            },
            "functionSelector": "e2eb79e7",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 225,
                "modifierName": {
                  "id": 224,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "2594:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2594:10:2"
              }
            ],
            "name": "activateRegistration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_source",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2551:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2568:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2550:34:2"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2605:0:2"
            },
            "scope": 267,
            "src": "2521:310:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "3025:8:2",
              "statements": []
            },
            "documentation": {
              "id": 256,
              "nodeType": "StructuredDocumentation",
              "src": "2837:98:2",
              "text": " @notice Deploy a new contract that is mapped to the token in another blockchain"
            },
            "functionSelector": "f9496163",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 263,
                "modifierName": {
                  "id": 262,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "3014:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3014:10:2"
              }
            ],
            "name": "deployToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "_sourceToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "2961:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "2983:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2983:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2960:44:2"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3025:0:2"
            },
            "scope": 267,
            "src": "2940:93:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 268,
        "src": "362:2673:2"
      }
    ],
    "src": "32:3004:2"
  },
  "legacyAST": {
    "absolutePath": "/home/alp/smartcontracts/contracts/PakLock.sol",
    "exportedSymbols": {
      "Address": [
        1507
      ],
      "Context": [
        1530
      ],
      "IERC20": [
        962
      ],
      "Ownable": [
        377
      ],
      "PakLock": [
        267
      ],
      "SafeERC20": [
        1211
      ]
    },
    "id": 268,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 60,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 268,
        "sourceUnit": 963,
        "src": "56:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 268,
        "sourceUnit": 1212,
        "src": "113:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 268,
        "sourceUnit": 378,
        "src": "179:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 65,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 377,
              "src": "382:7:2"
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "382:7:2"
          }
        ],
        "contractDependencies": [
          377,
          1530
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 64,
          "nodeType": "StructuredDocumentation",
          "src": "233:128:2",
          "text": " @dev PackLock is a smartcontract, where users are\n locking their tokens that they are swapped to another blockchain"
        },
        "fullyImplemented": true,
        "id": 267,
        "linearizedBaseContracts": [
          267,
          377,
          1530
        ],
        "name": "PakLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 70,
            "libraryName": {
              "id": 67,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1211,
              "src": "402:9:2"
            },
            "nodeType": "UsingForDirective",
            "src": "396:27:2",
            "typeName": {
              "id": 69,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 962,
                "src": "416:6:2"
              },
              "referencedDeclaration": 962,
              "src": "416:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$962",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "429:68:2",
              "text": "@notice PakBridge (PAK) token to use in fee for any transaction."
            },
            "functionSelector": "b45ea420",
            "id": 74,
            "mutability": "mutable",
            "name": "pak",
            "nodeType": "VariableDeclaration",
            "scope": 267,
            "src": "502:17:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$962",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 73,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 72,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 962,
                "src": "502:6:2"
              },
              "referencedDeclaration": 962,
              "src": "502:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$962",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 75,
              "nodeType": "StructuredDocumentation",
              "src": "526:43:2",
              "text": "@dev the amount to use for registration"
            },
            "id": 77,
            "mutability": "mutable",
            "name": "registerFee",
            "nodeType": "VariableDeclaration",
            "scope": 267,
            "src": "574:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 76,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "574:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 78,
              "nodeType": "StructuredDocumentation",
              "src": "608:145:2",
              "text": "@notice the address of bridge (the cosmos chain) representer.\n This representer ideally should act after voting process in the bridge."
            },
            "functionSelector": "e78cea92",
            "id": 80,
            "mutability": "mutable",
            "name": "bridge",
            "nodeType": "VariableDeclaration",
            "scope": 267,
            "src": "758:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 79,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "758:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PakLock.RegisteredToken",
            "id": 85,
            "members": [
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "targetToken",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "863:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 81,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "863:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 85,
                "src": "968:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 83,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "968:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RegisteredToken",
            "nodeType": "StructDefinition",
            "scope": 267,
            "src": "837:268:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 86,
              "nodeType": "StructuredDocumentation",
              "src": "1110:32:2",
              "text": "@dev Track registered tokens"
            },
            "id": 91,
            "mutability": "mutable",
            "name": "registeredTokens",
            "nodeType": "VariableDeclaration",
            "scope": 267,
            "src": "1147:52:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$85_storage_$",
              "typeString": "mapping(address => struct PakLock.RegisteredToken)"
            },
            "typeName": {
              "id": 90,
              "keyType": {
                "id": 87,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1155:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1147:35:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$85_storage_$",
                "typeString": "mapping(address => struct PakLock.RegisteredToken)"
              },
              "valueType": {
                "id": 89,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88,
                  "name": "RegisteredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 85,
                  "src": "1166:15:2"
                },
                "referencedDeclaration": 85,
                "src": "1166:15:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                  "typeString": "struct PakLock.RegisteredToken"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1265:132:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99,
                          "name": "_registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1276:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1291:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1276:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f206665652e",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1294:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aba26a823509a66410a09622cb57f8962874030ec059a0e5bc6e60c4995a3db3",
                          "typeString": "literal_string \"zero fee.\""
                        },
                        "value": "zero fee."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aba26a823509a66410a09622cb57f8962874030ec059a0e5bc6e60c4995a3db3",
                          "typeString": "literal_string \"zero fee.\""
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1268:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:38:2"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "pak",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1311:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$962",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 107,
                          "name": "_pakAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1324:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 106,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "1317:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$962_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1317:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$962",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1311:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$962",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:25:2"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1339:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 112,
                      "name": "_registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1353:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1339:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:26:2"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 115,
                      "name": "bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "1369:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 116,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1518,
                        "src": "1378:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1378:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1369:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:21:2"
                }
              ]
            },
            "id": 121,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_pakAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1222:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_registerFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1243:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1221:43:2"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:0:2"
            },
            "scope": 267,
            "src": "1210:187:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1425:60:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 124,
                          "name": "bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "1436:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 125,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1518,
                            "src": "1446:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1446:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1436:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920627269646765",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1460:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b",
                          "typeString": "literal_string \"only bridge\""
                        },
                        "value": "only bridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74972370c402ba9f43c8c3cd028a987f97df41bc5090083dabbc5c6919a96a0b",
                          "typeString": "literal_string \"only bridge\""
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1428:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1428:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1428:46:2"
                },
                {
                  "id": 131,
                  "nodeType": "PlaceholderStatement",
                  "src": "1477:1:2"
                }
              ]
            },
            "id": 133,
            "name": "onlyBridge",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:2:2"
            },
            "src": "1403:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1644:28:2",
              "statements": [
                {
                  "expression": {
                    "id": 139,
                    "name": "registerFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77,
                    "src": "1654:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "1647:18:2"
                }
              ]
            },
            "documentation": {
              "id": 134,
              "nodeType": "StructuredDocumentation",
              "src": "1491:91:2",
              "text": " @dev Return amount of PAK token to use for registration of a new bridge."
            },
            "functionSelector": "32a58e79",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegisterFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:2:2"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1635:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1634:9:2"
            },
            "scope": 267,
            "src": "1587:85:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "1799:85:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 151,
                          "name": "_registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "1810:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1825:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1810:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7a65726f20726567697374657220666565",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        },
                        "value": "zero register fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b89d7481ae65dc02ad681d7d7f8c118093d9e5afc1dd6aad5b3c1fdd1b7beac",
                          "typeString": "literal_string \"zero register fee\""
                        }
                      ],
                      "id": 150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1802:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1802:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1802:46:2"
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1851:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 158,
                      "name": "_registerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "1865:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1851:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:26:2"
                }
              ]
            },
            "documentation": {
              "id": 143,
              "nodeType": "StructuredDocumentation",
              "src": "1678:50:2",
              "text": " @notice update the register fee"
            },
            "functionSelector": "92be2ab8",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 148,
                "modifierName": {
                  "id": 147,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "1788:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1788:10:2"
              }
            ],
            "name": "setRegisterFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_registerFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "1757:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1756:22:2"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1799:0:2"
            },
            "scope": 267,
            "src": "1733:151:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2000:403:2",
              "statements": [
                {
                  "assignments": [
                    170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 170,
                      "mutability": "mutable",
                      "name": "_registeredToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 216,
                      "src": "2010:40:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                        "typeString": "struct PakLock.RegisteredToken"
                      },
                      "typeName": {
                        "id": 169,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 168,
                          "name": "RegisteredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 85,
                          "src": "2010:15:2"
                        },
                        "referencedDeclaration": 85,
                        "src": "2010:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "baseExpression": {
                      "id": 171,
                      "name": "registeredTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2053:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$85_storage_$",
                        "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                      }
                    },
                    "id": 173,
                    "indexExpression": {
                      "id": 172,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "2070:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2053:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegisteredToken_$85_storage",
                      "typeString": "struct PakLock.RegisteredToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2010:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 176,
                            "name": "_registeredToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "2088:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                              "typeString": "struct PakLock.RegisteredToken storage pointer"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 84,
                          "src": "2088:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2115:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2088:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920616374697661746564",
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2122:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        },
                        "value": "already activated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        }
                      ],
                      "id": 175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2080:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 186,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2232:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2232:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 190,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2252:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PakLock_$267",
                                    "typeString": "contract PakLock"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PakLock_$267",
                                    "typeString": "contract PakLock"
                                  }
                                ],
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2244:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 188,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2244:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2244:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 184,
                              "name": "pak",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "2218:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$962",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 921,
                            "src": "2218:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2218:40:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 193,
                          "name": "registerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2262:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2218:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20616c6c6f77616e6365",
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2275:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f",
                          "typeString": "literal_string \"no allowance\""
                        },
                        "value": "no allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57dd6f7b2e2079a1df4327b3164d5edd21b14126c301977a488211d6e362f76f",
                          "typeString": "literal_string \"no allowance\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2210:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:80:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 201,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2311:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2311:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 203,
                        "name": "bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2323:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 204,
                        "name": "registerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "2331:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 198,
                        "name": "pak",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "2294:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$962",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 943,
                      "src": "2294:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2294:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:49:2"
                },
                {
                  "expression": {
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 207,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "2355:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "2355:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2394:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2386:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2386:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2386:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2355:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:41:2"
                }
              ]
            },
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "1890:57:2",
              "text": " @notice Register a token to be bridged"
            },
            "functionSelector": "09824a80",
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "1975:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1974:16:2"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2000:0:2"
            },
            "scope": 267,
            "src": "1952:451:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "2605:226:2",
              "statements": [
                {
                  "assignments": [
                    229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 229,
                      "mutability": "mutable",
                      "name": "_registeredToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "2615:40:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                        "typeString": "struct PakLock.RegisteredToken"
                      },
                      "typeName": {
                        "id": 228,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 227,
                          "name": "RegisteredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 85,
                          "src": "2615:15:2"
                        },
                        "referencedDeclaration": 85,
                        "src": "2615:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": {
                    "baseExpression": {
                      "id": 230,
                      "name": "registeredTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2658:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegisteredToken_$85_storage_$",
                        "typeString": "mapping(address => struct PakLock.RegisteredToken storage ref)"
                      }
                    },
                    "id": 232,
                    "indexExpression": {
                      "id": 231,
                      "name": "_source",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "2675:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2658:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegisteredToken_$85_storage",
                      "typeString": "struct PakLock.RegisteredToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2615:68:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 235,
                            "name": "_registeredToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "2694:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                              "typeString": "struct PakLock.RegisteredToken storage pointer"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 84,
                          "src": "2694:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2721:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2694:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920616374697661746564",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2728:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        },
                        "value": "already activated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ede150f7c1acb28569fa7e8690e549b27e144f357dd5d934f773e0663a6e8a33",
                          "typeString": "literal_string \"already activated\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2686:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2686:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "2686:62:2"
                },
                {
                  "expression": {
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 242,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "2753:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "2753:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2779:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2753:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:30:2"
                },
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 248,
                        "name": "_registeredToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "2786:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredToken_$85_storage_ptr",
                          "typeString": "struct PakLock.RegisteredToken storage pointer"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "2786:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 251,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "2817:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2786:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:38:2"
                }
              ]
            },
            "documentation": {
              "id": 218,
              "nodeType": "StructuredDocumentation",
              "src": "2409:107:2",
              "text": " @dev Activate registered token by passing the token address\n in another blockchain"
            },
            "functionSelector": "e2eb79e7",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 225,
                "modifierName": {
                  "id": 224,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "2594:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2594:10:2"
              }
            ],
            "name": "activateRegistration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_source",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2551:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_target",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2568:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2550:34:2"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2605:0:2"
            },
            "scope": 267,
            "src": "2521:310:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "3025:8:2",
              "statements": []
            },
            "documentation": {
              "id": 256,
              "nodeType": "StructuredDocumentation",
              "src": "2837:98:2",
              "text": " @notice Deploy a new contract that is mapped to the token in another blockchain"
            },
            "functionSelector": "f9496163",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 263,
                "modifierName": {
                  "id": 262,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "3014:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3014:10:2"
              }
            ],
            "name": "deployToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "_sourceToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "2961:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "2983:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2983:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2960:44:2"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3025:0:2"
            },
            "scope": 267,
            "src": "2940:93:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 268,
        "src": "362:2673:2"
      }
    ],
    "src": "32:3004:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x9b57937138c593cDbacf51Efc4Be2ec4980be5F3",
      "transactionHash": "0x3e72f802520b0d810b9a9cfe784bfee958e2f19ff24e6b9b2a048b503529be18"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-27T07:46:52.179Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "PackLock is a smartcontract, where users are locking their tokens that they are swapped to another blockchain",
    "kind": "dev",
    "methods": {
      "activateRegistration(address,address)": {
        "details": "Activate registered token by passing the token address in another blockchain"
      },
      "getRegisterFee()": {
        "details": "Return amount of PAK token to use for registration of a new bridge."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "registerFee": {
        "details": "the amount to use for registration"
      },
      "registeredTokens": {
        "details": "Track registered tokens"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "bridge()": {
        "notice": "the address of bridge (the cosmos chain) representer. This representer ideally should act after voting process in the bridge."
      },
      "deployToken(address,uint256)": {
        "notice": "Deploy a new contract that is mapped to the token in another blockchain"
      },
      "pak()": {
        "notice": "PakBridge (PAK) token to use in fee for any transaction."
      },
      "registerToken(address)": {
        "notice": "Register a token to be bridged"
      },
      "setRegisterFee(uint256)": {
        "notice": "update the register fee"
      }
    },
    "version": 1
  }
}